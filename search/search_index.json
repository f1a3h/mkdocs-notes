{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to f1a3h's notebook!","text":""},{"location":"#welcome","title":"Welcome!","text":""},{"location":"ACG/Comics/%E8%91%AC%E9%80%81%E3%81%AE%E3%83%95%E3%83%AA%E3%83%BC%E3%83%AC%E3%83%B3/","title":"\u846c\u9001\u306e\u30d5\u30ea\u30fc\u30ec\u30f3","text":"<p>\u56e0\u4e3a\u770b\u5230\u300a\u846c\u9001\u7684\u8299\u8389\u83b2\u300b\u4e2d\u6709\u4e00\u4e9b\u53f0\u8bcd\u633a\u89e6\u52a8\u4eba\u5fc3\u7684\uff08\u4e5f\u8bb8\u53ea\u662f\u6211\u4e2d\u4e8c\u75c5\u72af\u4e86www\uff09\uff0c\u5728 Bangumi \u4e0a\u6070\u597d\u770b\u5230\u300a\u846c\u9001\u7684\u8299\u8389\u83b2\u300b\u4f18\u79c0\u53f0\u8bcd\u4e2a\u4eba\u6536\u96c6\uff0c\u56e0\u6b64\u7a81\u53d1\u5947\u60f3\uff0c\u4e5f\u6765\u8bb0\u5f55\u4e00\u4e0b\u8fd9\u4e9b\u53f0\u8bcd\uff0c\u987a\u4fbf\u770b\u5b8c\u540e\u4e5f\u80fd\u5728\u8fd9\u91cc\u5199\u70b9\u611f\u8a00\u3002</p> <p>Chap.19 \u7a81\u88ad</p> <p>\u8fd9\u79cd\u4e8b\u60c5\uff0c\u603b\u662f\u8981\u6709\u4eba\u53bb\u505a\u7684\u5427\uff1f</p> <p>Chap.20 \u5e08\u7236\u7684\u62db\u5f0f</p> <p>\u300c\u65e0\u8bba\u88ab\u6253\u5012\u591a\u5c11\u6b21\uff0c\u4f60\u90fd\u8981\u4e0d\u505c\u5730\u7ad9\u8d77\u6765\u53cd\u51fb\u3002</p> <p>\u200b \u6218\u58eb\u7684\u80dc\u5229\u5c31\u662f\u5728\u6218\u573a\u4e0a\u7ad9\u5230\u6700\u540e\u3002\u300d</p> <p>Chap.22 \u670d\u4ece\u5929\u79e4</p> <p>\u300c\u542c\u597d\u4e86\uff0c\u8299\u4e3d\u83b2\u3002\u4e0d\u8981\u60f3\u7740\u540d\u7559\u9752\u53f2\u3002</p> <p>\u200b \u8981\u6d3b\u5f97\u4e0d\u8d77\u773c\u3002</p> <p>\u200b \u5728\u4f60\u6740\u6b7b\u9b54\u738b\u4e4b\u65e5\uff0c\u5c31\u662f\u4f60\u540d\u7559\u9752\u53f2\u4e4b\u65f6\u3002\u300d</p> <p>Chap.25 \u5251\u4e4b\u4e61</p> <p>\u300c\u5047\u52c7\u8005\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u597d\u7684\u5427\u3002\u6211\u4f1a\u5c06\u9b54\u738b\u6253\u5012\uff0c\u8ba9\u8fd9\u4e2a\u4e16\u754c\u518d\u6b21\u6062\u590d\u548c\u5e73\u3002</p> <p>\u200b \u8fd9\u6837\u4e00\u6765\uff0c\u4e0d\u7ba1\u662f\u4ec0\u4e48\u5047\u52c7\u8005\uff0c\u8fd8\u662f\u771f\u52c7\u8005\uff0c\u90fd\u65e0\u6240\u8c13\u4e86\u3002\u300d</p> <p>\u300c\u8f9b\u7f8e\u5c14\u505a\u5230\u4e86\u3002</p> <p>\u200b \u5c31\u7b97\u6ca1\u6709\u90a3\u628a\u5251\uff0c\u8f9b\u7f8e\u5c14\u4e5f\u4f9d\u7136\u62ef\u6551\u4e86\u8fd9\u4e2a\u4e16\u754c\u3002</p> <p>\u200b \u4ed6\u662f\u771f\u6b63\u7684\u52c7\u8005\u3002\u300d</p> <p>\u300c\u6240\u8c13\u7684\u82f1\u96c4\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u88ab\u540e\u4e16\u64c5\u81ea\u7f8e\u5316\u3002</p> <p>\u200b \u6700\u7ec8\uff0c\u5728\u8fd9\u4e0d\u65ad\u7684\u7f8e\u5316\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u8fde\u6700\u521d\u7684\u539f\u578b\u90fd\u4f1a\u9010\u6e10\u6d88\u901d\u3002\u300d</p> <p>Chap.26 \u9001\u7ed9\u6218\u58eb\u7684\u793c\u7269</p> <p>\u300c\u52aa\u529b\u8fc7\u7684\u4eba\u7686\u4e3a\u6218\u58eb\u3002\u300d</p> <p>Chap.27 \u5e73\u51e1\u6751\u843d\u91cc\u7684\u7267\u5e08</p> <p>\u300c\u5728\u6211\u5fc3\u5e95\uff0c\u4e00\u5b9a\u662f\u6050\u60e7\u7740\u548c\u9b54\u738b\u6218\u6597\u7684\u5427\u3002</p> <p>\u200b \u6211\u65e9\u5df2\u65e0\u6cd5\u5f25\u8865\u6d41\u901d\u7684\u5c81\u6708\u6240\u4ea7\u751f\u7684\u7a7a\u767d\u3002\u300d</p> <p>\u300c\u90a3\u53c8\u600e\u4e48\u4e86\uff0c\u8299\u4e3d\u83b2\u3002</p> <p>\u200b \u6211\u5728\u548c\u4f60\u8c08\u7684\u662f\u73b0\u5728\u3002\u300d</p>","tags":["Anime"]},{"location":"ACG/Game/%E5%A1%9E%E5%B0%94%E8%BE%BE%E4%BC%A0%E8%AF%B4%EF%BC%9A%E6%97%B7%E9%87%8E%E4%B9%8B%E6%81%AF/","title":"\u300c\u585e\u5c14\u8fbe\u4f20\u8bf4\uff1a\u65f7\u91ce\u4e4b\u606f\u300d\u2014\u2014\u4e00\u573a\u5b64\u72ec\u7684\u5192\u9669","text":"<p>\u4ece 17 \u5e74\u5e95\u5230 24 \u5e74\u521d\uff0c\u4ece\u521d\u4e8c\u5230\u5927\u4e8c\uff0c\u4ece\u61f5\u61c2\u65e0\u77e5\u7684\u4e2d\u4e8c\u5c11\u5e74\u5230\u73b0\u5728\u7684\u6210\u719f\u7a33\u91cd\uff08\uff1f\uff09\u3001\u5373\u5c06\u8fc8\u5165\u5927\u4eba\u7684\u4e16\u754c\uff0c\u516d\u5e74\u534a\u8f7d\uff0c\u56de\u60f3\u8d77\u6765\uff0c\u585e\u5c14\u8fbe\u7adf\u51e0\u4e4e\u627f\u8f7d\u4e86\u6211\u51e0\u4e4e\u6574\u4e2a\u4e2d\u5b66\u65f6\u4ee3\u3002</p> <p></p> <p>\u60f3\u5f53\u5e74\uff0c\u5168\u6821\u7b2c\u4e8c\uff0c\u62ff\u5230 5000 \u5143\u5956\u5b66\u91d1\uff0c\u7ec8\u4e8e\u8d81\u7239\u5988\u9ad8\u5174\u7684\u65f6\u5019\u8981\u5230\u4e86\u4e00\u53f0\u5f53\u5e74\u65b0\u51fa\u7684 Switch\uff0c\u8fd8\u8bb0\u5f97\u8fd9\u53f0 Switch \u662f\u6258\u4eb2\u621a\u4ece\u82f1\u56fd\u5e26\u56de\u6765\u7684\uff0c\u82b1\u4e86\ud83d\udc2d\ud83d\udc2d2800+\u5927\u6d0b\uff0c\u8089\u75db\u7684\u4e00\u6279\u3002\u5f53\u7136\u4e86\uff0cSwitch \u5230\u624b\u4e4b\u540e\u7b2c\u4e00\u6b3e\u6e38\u620f\u5f53\u7136\u8981\u4e70\u5f53\u65f6\u6b63\u5927\u706b\u7684\u300c\u585e\u5c14\u8fbe\u4f20\u8bf4\uff1a\u65f7\u91ce\u4e4b\u606f\u300d\u5566\uff01\u4e8e\u662f\uff0c\u90a3\u540d\u521d\u4e8c\u5c11\u5e74\u5f00\u542f\u4e86\u5728\u6d77\u62c9\u9c81\u5927\u9646\u4e0a\u7684\u65c5\u7a0b\u3002</p> <p>\u4e00\u5f00\u59cb Switch \u6ca1\u6709\u4e2d\u6587\uff0c\u585e\u5c14\u8fbe\u5c31\u66f4\u4e0d\u7528\u8bf4\u4e86\uff0c\u6211\u8bd5\u8fc7\u62cd\u5c4f\u7ffb\u8bd1\uff0c\u7136\u800c\u4f53\u9a8c\u5b9e\u5728\u592a\u5dee\u4e8e\u662f\u5f00\u59cb\u81ea\u4e3b\u63a2\u9669\u3002\u597d\u666f\u4e0d\u957f\uff0c\u6211\u600e\u4e48\u4e5f\u6ca1\u529e\u6cd5\u79bb\u5f00\u90a3\u7247\u5c0f\u5c0f\u7684\u521d\u59cb\u53f0\u5730\uff0c\u5c31\u8fd9\u6837\u778e\u63a2\u7d22\u4e86 20h+\uff0c\u6211\u56de\u53bb\u76d1\u72f1\u4e0a\u5b66\u4e86\u3002</p> <p>\u518d\u4e4b\u540e Switch \u548c\u585e\u5c14\u8fbe\u7ec8\u4e8e\u652f\u6301\u4e2d\u6587\u4e86\uff0c\u6211\u5174\u9ad8\u91c7\u70c8\u5730\u6362\u4e86\u4e2a\u53f7\u91cd\u65b0\u5f00\u59cb\u5728\u6d77\u62c9\u9c81\u5927\u9646\u7684\u751f\u6d3b\uff0c\u4f46\u662f\u8fd8\u662f\u597d\u666f\u4e0d\u957f\uff0c\u56e0\u4e3a\u521d\u4e09\u7684\u65f6\u5019\u7531\u4e8e\u5f88\u591a\u673a\u7f18\u5de7\u5408\u8981\u53bb\u957f\u6c99\u8bfb\u4e66\u4e86\uff0c\u80fd\u5f53\u6478\u9c7c\u52c7\u8005\u7684\u65f6\u95f4\u5c31\u66f4\u5b9d\u8d35\u4e86\u3002</p> <p></p> <p>\u65f6\u5149\u834f\u82d2\uff0c\u5f88\u5feb\u4fbf\u6765\u5230\u4e86\u6211\u8bb0\u5fc6\u6700\u6df1\u523b\u7684\u90a3\u6bb5\u65f6\u5149\u2014\u2014\u9ad8\u4e00\u5bd2\u5047\uff0c\u4e5f\u5c31\u662f\u8457\u540d\u7684\u65b0\u51a0\u7206\u53d1\u7684\u90a3\u4e2a\u65f6\u5019\uff08\u8c01\u53c8\u80fd\u60f3\u5230 3 \u5e74\u540e\u6211\u5c45\u7136\u6765\u4e86\u6b66\u6c49\u8bfb\u4e66\u5462\uff09\u3002\u90a3\u4e2a\u65f6\u5019\u6b63\u662f\u6211\u7684\u4f4e\u8c37\u65f6\u671f\uff0c\u671f\u672b\u8003\u7684\u7a00\u70c2\uff0c\u7ade\u8d5b\u53c8\u51fa\u4e86\u5f3a\u57fa\u8ba1\u5212\uff0c\u50cf\u6211\u8fd9\u79cd\u673a\u623f\u6253\u4e86\u534a\u5e74\u591a\u6446\u7ec8\u4e8e\u89c9\u9192\u8981\u5f00\u59cb\u8ba4\u771f\u5237\u9898\u7684\u5bb6\u4f19\u6765\u8bf4\u8fd9\u65e0\u7591\u662f\u6674\u5929\u9739\u96f3\uff0c\u5f88\u663e\u7136\uff0c\u6211\u9000\u7ec4\u4e86\uff0c\u4e5f\u56e0\u4e3a\u671f\u672b\u8003\u7684\u592a\u70c2\u628a\u5f53\u65f6\u7684 QQ \u6807\u7b7e\u5220\u5b8c\u4e86\u7559\u4e0b\u4e00\u4e2a\u201c\u6211\u592a\u83dc\u4e86\u201d\u3002\u770b\u5230\u8fd9\u91cc\u5927\u6982\u90fd\u4f1a\u89c9\u5f97\u6211\u4f1a\u5f00\u59cb\u300c\u672a\u6765\u53ef\u671f\uff0c\u611f\u8c22\u7ecf\u5386\uff0c\u6c89\u6dc0\u300d\u7f62\uff0c\u4e0d\u8fc7\u8fde\u6211\u81ea\u5df1\u90fd\u6ca1\u60f3\u5230\u56de\u5bb6\u4e4b\u540e\u7b2c\u4e00\u4ef6\u4e8b\u662f\u73a9\u300c\u585e\u5c14\u8fbe\u4f20\u8bf4\u300d\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u7ed3\u5c40\u5c31\u662f\u88ab\u6211\u5988\u72e0\u72e0\u6279\u6597\u4e86\u4e00\u987f\u7136\u540e\u5c31\u6eda\u53bb\u81ea\u5df1\u623f\u95f4\u7528\u7535\u8111\u6478\u9c7c\u4e86\uff08\u611f\u8c22\u5728\u7ec4\u91cc\u7ec3\u5c31\u7684\u6478\u9c7c\u795e\u529f\uff09\u3002</p> <p>\u9ad8\u4e2d\u4e09\u5e74\uff0c\u5f88\u5931\u8d25\uff0c\u76f4\u5230\u6700\u540e\u4e86\u90fd\u6ca1\u80fd\u6210\u529f\u8bc1\u660e\u81ea\u5df1\uff0c\u4f46\u8fd8\u662f\u5f88\u6000\u5ff5\u5728\u5b66\u6821\u6478\u9c7c\u7684\u65e5\u5b50\u3002\u81ea\u90a3\u6b21\u88ab\u6279\u6597\u4e4b\u540e\uff0c\u6211\u518d\u4e5f\u6ca1\u78b0\u8fc7\u585e\u5c14\u8fbe\u4f20\u8bf4\u4e86\uff0c\u4e00\u76f4\u5230\u5927\u5b66\u4e86\u624d\u91cd\u65b0\u62fe\u8d77\u6765\u3002</p> <p></p> <p>2024.2.11\uff0c\u65f6\u9694\u516d\u5e74\u534a\uff0c\u6211\u624d\u7ec8\u4e8e\u901a\u5173\u4e86\u585e\u5c14\u8fbe\u4f20\u8bf4\u7684\u7b2c\u4e00\u90e8\u3002\u5f53\u5e74\u8bb2\u6c42\u63a2\u7d22\uff0c\u8ff7\u4f60\u4efb\u52a1\u3001\u5440\u54c8\u54c8\u3001\u795e\u5e99\uff0c\u8ffd\u6c42\u5b8c\u6ee1\uff0c\u751a\u81f3\u82b1\u4e86\u4e0d\u5c11\u65f6\u95f4\u6512\u94b1\u4e70\u623f\uff0c\u54ea\u6015\u76f4\u5230\u73b0\u5728\u6211\u4e5f\u53ea\u8fdb\u8fc7\u90a3\u95f4\u5c0f\u6728\u5c4b\u91cc\u4e00\u6b21\uff0c\u582a\u79f0\u6d77\u62c9\u9c81\u738b\u56fd\u7684\u8d25\u5bb6\u9a91\u58eb\uff0c\u7eaf\u7eaf\u4e00\u4e2a\u6478\u9c7c\u52c7\u8005\uff0c\u516c\u4e3b\u65e0\u6570\u6b21\u63d0\u9192\u8840\u6708\u6765\u4e34\u4e5f\u6ca1\u80fd\u8ba9\u6211\u4ece\u6478\u9c7c\u4e2d\u9192\u8fc7\u6765\u3002\u4f46\u662f\u4ece\u53bb\u5e74\u6691\u5047\u5f00\u59cb\uff0c\u6211\u6797\u514b\u4e00\u6539\u8fc7\u53bb\u201c\u6b65\u6b65\u4e3a\u8425\u201d\u7684\u63a2\u9669\u98ce\u683c\uff0c\u76ee\u6807\u660e\u786e\uff0c\u62ef\u6551\u6700\u540e\u7684\u706b\u8725\u8734\u795e\u517d\uff0c\u62d4\u51fa\u5927\u5e08\u4e4b\u5251\uff0c\u76f4\u5954\u738b\u56fd\u57ce\u5821\uff0c\u5584\u7528 SL \u5927\u6cd5\uff0c\u5404\u79cd\u6295\u673a\u53d6\u5de7\u6253\u6446\u4e86\u707e\u5384\u76d6\u4fac\uff0c\u501f\u52a9\u516c\u4e3b\u7684\u529b\u91cf\u5b8c\u6210\u4e86\u6700\u540e\u4e00\u573a\u6218\u5f79\u3002\u6ca1\u9519\uff0c\u4ece\u4e00\u5f00\u59cb\u53ea\u4f1a\u6478\u9c7c\u7684\u72d7\u9a91\u58eb\u5230\u6700\u540e\u62ef\u6551\u738b\u56fd\u7684\u771f\u6b63\u7684\u52c7\u58eb\uff0c\u6211\u82b1\u4e86\u516d\u5e74\u534a\u7684\u65f6\u95f4\u624d\u5b8c\u6210\u8fd9\u6837\u7684\u8715\u53d8\uff0c\u90a3\u4e48\uff0c\u5750\u5728\u7535\u8111\u5c4f\u5e55\u9762\u524d\u4e00\u5b57\u4e00\u53e5\u6572\u4e0b\u8fd9\u6bb5\u6587\u5b57\u7684\u4f60\u53c8\u4f1a\u5728\u4ec0\u4e48\u65f6\u5019\u62d4\u51fa\u5c5e\u4e8e\u4f60\u7684\u5927\u5e08\u4e4b\u5251\u5462\uff1f</p>","tags":["Game","ARPG"]},{"location":"ACG/Game/%E6%A8%B1%E4%B9%8B%E8%AF%97/","title":"\u6a31\u4e4b\u8bd7","text":"<p>\u5047\u60f3\u4e2d\u94fa\u6ee1\u5929\u7a7a\u7684\u6625\u8272 \u4ec5\u4ec5\u662f\u65e0\u62d8\u65e0\u675f\u7684\u56e0\u679c\u4ea4\u6d41\u7535\u706f \u5728\u660e\u4eae\u7684\u3001\u660e\u4eae\u7684\u3001\u660e\u4eae\u7684\u7167\u8000\u7740</p> <p>Watermelon \u7684\u7535\u6c14\u77f3 \u97f3\u4e0e\u8a00\u8bed\u7684\u4ea4\u53c9\u70b9 \u5728\u8fd9\u65e5\u76ca\u589e\u8272\u7684\u4e16\u754c\u4e2d</p> <p>\u4e03\u6735\u6a31\u82b1\u4e8e\u773c\u524d\u98d8\u8fc7</p> <p>\u6211\u7784\u51c6\u5176\u8ffd\u4e86\u8fc7\u53bb</p> <p>\u6211\u5e76\u6ca1\u6709\u5728\u98ce\u666f\u4e4b\u524d \u98ce\u666f\u4e5f\u6ca1\u6709\u5728\u6211\u4e4b\u524d</p> <p>\u8ffd\u7740\u8ffd\u7740\u4fbf\u6d88\u5931\u4e0d\u89c1</p> <p>\u88ab\u67d4\u548c\u666f\u8272\u6240\u7b3c\u7f69\u7684\u4e16\u754c\u6e10\u6e10\u6d88\u5931</p> <p>\u8f7b\u8f7b\u98d8\u6447\u7684\u6a31\u4e4b\u68ee\u4e2d\u9e23\u594f\u7740\u4e16\u754c \u662f\u7528\u7f8e\u5999\u7684\u97f3\u8272\u6240\u594f\u9e23\u7684\u4e16\u754c</p> <p>\u5b83\u82e5\u662f\u865a\u65e0\u7684\u8bdd \u865a\u65e0\u672c\u8eab\u5373\u662f\u5982\u6b64</p> <p>\uff08\u5982\u540c\u4e00\u5207\u662f\u6211\u4e2d\u7684\u4f17\u751f    \u6545\u4e5f\u662f\u4f17\u751f\u4e2d\u5404\u81ea\u7684\u4e00\u5207\uff09</p> <p>Quote</p> <p>\u300cWhat is mind?\u300d    \u5fc3\u7075\u662f\u4ec0\u4e48\uff1f \u300cNo matter.\u300d    \u65e0\u5173\u5c0f\u4e8b</p> <p>\u300cWhat is matter? \u300d    \u7269\u8d28\u662f\u4ec0\u4e48\uff1f \u300cNever mind.\u300d    \u83ab\u653e\u5fc3\u4e0a</p>"},{"location":"ACG/Novel/%E9%92%A2%E9%93%81%E4%B9%8B%E7%BF%BC/","title":"\u5929\u7a7a\u3001\u6218\u4e89\u4e0e\u5de8\u9f99\u7684\u8bd7\u6b4c \u2014\u2014\u300c\u94a2\u94c1\u4e4b\u7ffc\u300d","text":"<p>\u300c\u5fc5\u987b\u80cc\u8d1f\u8d77\u67d0\u4e9b\u4e8b\u7269\uff0c\u4fdd\u62a4\u67d0\u4e9b\u4e8b\u7269......\u975e\u5f97\u8981\u6709\u8fd9\u79cd\u51a0\u5195\u5802\u7687\u7684\u7406\u7531\uff0c\u6211\u4eec\u624d\u80fd\u98de\u5411\u5929\u9645\u5417\uff1f\u300d</p> <p>\u300c\u8fd9\u4e2a\u4e16\u754c\u4e3a\u627e\u4e0d\u5230\u5f52\u5bbf\u7684\u4ed6\u6240\u51c6\u5907\u7684\u4e1c\u897f\uff0c\u5c3d\u662f\u964c\u751f\u4e0d\u642d\u8c03\u7684\u8863\u670d\u4e0e\u9762\u5177\u3002\u5373\u4f7f\u5982\u6b64\u8fd8\u662f\u5f97\u7ad9\u5728\u821e\u53f0\u4e0a\u8868\u6f14\u5417\uff1f\u8fd8\u662f\u5f97\u85c9\u6b64\u627e\u5230\u559c\u60a6\u4e0e\u610f\u4e49\u5417\uff1f\u300d</p> <p>\u300c\u5982\u679c\u4eba\u751f\u62e5\u6709\u610f\u4e49\u4e0e\u4ef7\u503c\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u8ba9\u61a7\u61ac\u53ea\u4ee5\u61a7\u61ac\u6536\u573a\u3002\u300d</p> <p>\u300c\u5361\u5c14\uff0c\u4f60\u554a\uff0c\u9996\u5148\u5f97\u57fa\u4e8e\u81ea\u5df1\u7684\u610f\u5fd7\u5b8c\u6210\u4e00\u4e9b\u4e8b\u60c5\u3002\u5fc5\u987b\u85c9\u6b64\u4eb2\u81ea\u786e\u8ba4\u81ea\u5df1\u7a76\u7adf\u662f\u4ec0\u4e48\u6837\u7684\u4eba\u2014\u2014\u5b8c\u6210\u8fd9\u4e9b\u8fc7\u7a0b\u4e4b\u540e\uff0c\u4f60\u624d\u80fd\u9996\u5ea6\u9762\u5bf9\u81ea\u5df1\u8fc7\u53bb\u7684\u884c\u4e3a\uff0c\u624d\u80fd\u7531\u81ea\u5df1\u51b3\u5b9a\u8981\u600e\u4e48\u5236\u88c1\u81ea\u5df1\uff0c\u8d66\u514d\u81ea\u5df1\u3002\u300d</p> <p>\u300c\u8bf4\u4e0d\u5b9a\u76f4\u5230\u4eca\u5929\u8fd9\u4e00\u5929\u4e3a\u6b62\uff0c\u81ea\u5df1\u4ece\u6765\u6ca1\u6709\u57fa\u4e8e\u771f\u6b63\u7684\u610f\u4e49\u98de\u4e0a\u5929\u7a7a\u3002 \u90a3\u5c31\u6311\u6218\u5427\u3002\u8fd9\u6b21\u7684\u6211\uff0c\u4e00\u5b9a\u8981\u98de\u5411\u771f\u6b63\u7684\u5929\u7a7a\u3002 \u8fd9\u6b21\u4e0d\u662f\u4e3a\u4e86\u618e\u6068\u4e0e\u6050\u6016\uff0c\u8981\u4e3a\u4e86\u8363\u8000\u4e0e\u559c\u60a6\u800c\u98de\u7fd4\u3002\u300d</p> <p>\u6bcf\u6b21\u5728\u8bfb\u524d\u4e2d\u671f\u90e8\u5206\u65f6\u90fd\u4f1a\u89c9\u5f97\u5e73\u6de1\u65e0\u5947\u751a\u81f3\u8ba9\u4eba\u611f\u89c9\u6709\u4e9b\u65e0\u804a\uff0c\u4f46\u662f\u7b2c\u4e00\u5377\u540e\u9762\u5361\u5c14\u5bf9\u4e8e\u81ea\u5df1\u7eaf\u7cb9\u7684\u98de\u7fd4\u7406\u60f3\u3001\u5bf9\u4e8e\u5929\u7a7a\u5411\u5f80\u3001\u5bf9\u5929\u7a7a\u9738\u4e3b\u2014\u2014\u5e1d\u51f0\u9f99\u7684\u656c\u754f\u4e0e\u6311\u6218\uff0c\u4e0e\u73b0\u5b9e\u4e2d\u4e0d\u5f97\u4e0d\u8e0f\u4e0a\u6218\u573a\u6210\u4e3a\u4e00\u5177\u65e0\u60c5\u7684\u6740\u4eba\u673a\u5668\u7684\u62b5\u89e6\u3001\u65e0\u5948\u4e0e\u59a5\u534f\uff0c\u8fd8\u6709\u7b2c\u4e8c\u5377\u540e\u671f\u5361\u5c14\u4e3a\u4e86\u81ea\u79c1\u7684\u5fc3\u613f\u300c\u518d\u6b21\u4e0e\u96f7\u9e1f\u53f7\u9a70\u9a8b\u5929\u7a7a\u300d\u800c\u60c5\u613f\u88c5\u4e0a\u6b66\u5668\u4e0e\u654c\u519b\u6b8a\u6b7b\u62b5\u6297\uff0c\u6700\u540e\u5e1d\u51f0\u9f99\u5728\u5361\u5c14\u51b3\u5fc3\u51b2\u5411\u654c\u8230\u8d70\u4e0a\u6240\u8c13\u66f4\u597d\u7684\u672b\u8def\u65f6\u73b0\u8eab\uff0c\u9080\u8bf7\u5361\u5c14\u4e00\u540c\u300c\u76f4\u6307\u5317\u65b9\u7684\u5c3d\u5934\u300d\uff0c\u800c\u5361\u5c14\u81ea\u7136\u4e0d\u4f1a\u653e\u8fc7\u8fd9\u4e2a\u597d\u673a\u4f1a\uff0c\u9a7e\u9a76\u7740\u96f7\u9e1f\u53f7\uff0c\u8d85\u8d8a\u4e86\u97f3\u901f\uff0c\u6d88\u5931\u5728\u4e86\u5730\u7403\u7684\u5317\u6781\uff0c\u8fd9\u4e9b\u90e8\u5206\u5728\u8bfb\u7684\u65f6\u5019\u603b\u662f\u4ee4\u6211\u611f\u89e6\u9887\u6df1\uff0c\u4f46\u4e00\u65e6\u60f3\u8981\u8bb0\u5f55\u4e9b\u4ec0\u4e48\u60f3\u6cd5\u65f6\uff0c\u5374\u53c8\u65e0\u4ece\u4e0b\u624b\uff0c\u5199\u8fd9\u79cd\u611f\u60c5\u8272\u5f69\u6d53\u539a\u7684\u6587\u7ae0\u603b\u662f\u6211\u7684\u8f6f\u808b\u3002</p> <p>\u4f46\u662f\u5bf9\u4e8e\u66fe\u7ecf\u611f\u52a8\u8fc7\u6211\u7684\u77ac\u95f4\uff0c\u603b\u8fd8\u662f\u8981\u8bb0\u5f55\u70b9\u4ec0\u4e48\u7684\u3002</p> <p>\u653e\u51e0\u53e5\u6709\u70b9\u4e2d\u4e8c\u7684\u6458\u5f55\uff0c\u60f3\u5230\u4e86\u4ec0\u4e48\u80fd\u5199\u518d\u5199\u5427\u3002</p> <p>\u300c\u6211\u4eec\u4eba\u7c7b\u5e94\u8be5\u4ee5\u6b64\u4e3a\u5951\u673a\uff0c\u91cd\u65b0\u601d\u8003\u5f7c\u6b64\u5728\u76f8\u540c\u7684\u5929\u7a7a\u4e4b\u4e0b\uff0c\u5171\u4eab\u76f8\u540c\u5927\u5730\u751f\u6d3b\u7684\u771f\u6b63\u610f\u4e49\u300d</p> <p>\u300c\u8fd9\u4efd\u5fc3\u60c5\u5c31\u5df2\u7ecf\u662f\u7b54\u6848\uff0c\u7528\u4e0d\u7740\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u65e0\u8bba\u662f\u591a\u4e48\u9065\u8fdc\u9ed1\u6697\u7684\u5730\u65b9\uff0c\u53ea\u8981\u4f60\u60f3\u53bb\uff0c\u90a3\u5c31\u53bb\u5427\u3002\u300d</p> <p>\u300c\u5fc5\u5c06\u65e0\u5c3d\u8fdc\u5f81\uff0c\u65e0\u8fdc\u5f17\u5c4a\u300d</p> <p></p>","tags":["Light-Novel"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/","title":"ACM\u7b97\u6cd5\u5b9e\u8df5\u603b\u7ed3","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_1","title":"\u7b2c\u4e00\u7ae0\u2014\u2014\u57fa\u7840","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_2","title":"\u6c99\u6d77\u62fe\u8d1d","text":"<p>\u56e0\u4e3a\u662f\u4e0e\u8fd0\u7b97\uff0c\u53ea\u6709\u5f53\u8fd9 m \u4e2a\u6570\u7684\u7b2c k \u4f4d\u4e0a\u90fd\u662f 1 \u7684\u65f6\u5019\u624d\u80fd\u4f7f\u5f97\u6700\u540e\u7684\u6570\u7684\u7b2c k \u4f4d\u4e3a 1 \u3002</p> <p>\u4e3a\u4e86\u8ba9\u6700\u540e\u7684\u5f00\u5fc3\u7a0b\u5ea6\u6700\u5927\uff0c\u6211\u4eec\u4f18\u5148\u5c06\u9ad8\u4f4d\u53d6 1 \uff0c\u4e5f\u5c31\u662f\u4ece\u9ad8\u4f4d\u5f00\u59cb\u679a\u4e3e\uff0c\u9009\u51fa\u6570\u91cf\u5927\u4e8e m \u540c\u65f6\u5728\u7b2c k \u4f4d\u4e0a\u4e3a 1 \u7684\u6240\u6709\u6570\uff0c\u7136\u540e\u518d\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u4ece\u8fd9\u4e9b\u6570\u4e2d\u9009\u53d6\u7b2c k\u22121 \u4f4d\u4e3a 1 \u7684\u6570\uff0c\u4f9d\u6b21\u9009\u53d6\u4e0b\u53bb\u76f4\u5230\u53ef\u9009\u53d6\u7684\u6570\u7684\u6570\u91cf\u7b49\u4e8e m \u3002</p> <p>Tag :\u4f4d\u8fd0\u7b97</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_3","title":"\u9ea6\u7530","text":"<p>\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u524d\u7f00\u548c\u7136\u540e\u66b4\u529b\u679a\u4e3e\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u8fc7\u5927\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u4f7f\u7528\u5230\u72b6\u6001\u538b\u7f29\uff0c\u5c06\u4e8c\u7ef4\u53d8\u4e3a\u4e00\u7ef4\uff0c\u4e8e\u662f\u539f\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u4e00\u9053\u7ecf\u5178\u53cc\u6307\u9488\u95ee\u9898\u3002</p> <p>Tag : \u524d\u7f00\u548c\u3001\u72b6\u6001\u538b\u7f29\u3001\u53cc\u6307\u9488</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_4","title":"\u65f6\u95f4\u7ba1\u7406\u5927\u5e08","text":"<p>\u4e00\u5f00\u59cb\u60f3\u7528\u8d2a\u5fc3\uff0c\u4f46\u662f\u53d1\u73b0\u8d8a\u60f3\u8d8a\u590d\u6742\u4e86\u3002</p> <p>\u5982\u679c\u89c2\u5bdf\u7b54\u6848\u7684\u8bdd\u53ef\u4ee5\u53d1\u73b0\u7b54\u6848\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5\uff0c\u5df2\u77e5\u6700\u540e\u80fd\u652f\u6491\u7684\u65f6\u95f4\u7684\u8bdd\u5177\u4f53\u5145\u7535\u65b9\u6848\u5c31\u5f88\u597d\u60f3\u4e86\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u6709\u53ef\u80fd\u5373\u53ef\u3002</p> <p>Tag : \u4e8c\u5206\u7b54\u6848</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_5","title":"\u7ec4\u961f","text":"<p>\u6b63\u786e\u89e3\u6cd5\u662f\u8d2a\u5fc3 + \u4f18\u5148\u961f\u5217\u3002</p> <p>\u9996\u5148\u80af\u5b9a\u8981\u5c06 a \u6570\u7ec4\u6392\u5e8f\uff0c\u8981\u4f7f\u4eba\u6570\u6700\u5c11\u7684\u961f\u4f0d\u4eba\u6570\u6700\u591a\uff0c\u6211\u4eec\u4f18\u5148\u5c06\u5f53\u524d\u7684\u6570 \\(a[i]\\) \u653e\u5230\u4ee5 \\(a[i]-1\\) \u7ed3\u5c3e\u7684\u961f\u4f0d\u4e2d\u4eba\u6570\u6700\u5c11\u7684\u4e00\u4e2a\u961f\u4f0d\u5373\u53ef\u3002\u601d\u8def\u5f88\u7b80\u5355\uff0c\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u600e\u4e48\u5b9e\u73b0\u3002</p> <p>\u5982\u679c\u7528\u4e00\u4e2a queue \u6765\u50a8\u5b58\u5f53\u524d\u5df2\u7ecf\u6709\u4e86\u7684\u961f\u4f0d\uff0c\u7136\u540e\u518d\u66b4\u529b\u67e5\u627e\u7b26\u5408\u8981\u6c42\u7684\u4eba\u6570\u6700\u5c11\u7684\u961f\u4f0d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\mathcal{O}(n^2)\\) \uff0c\u80af\u5b9a\u4f1a T \uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528\u4f18\u5148\u961f\u5217\u6765\u5b58\u50a8\u6bcf\u6761\u961f\u4f0d\u7684\u4eba\u6570\uff0c\u67e5\u627e\u65f6\u53ea\u9700\u8f93\u51fa\u961f\u5934\u5373\u53ef\uff0c\u8fd9\u65f6\u5019\u53c8\u5982\u4f55\u5b58\u50a8\u6bcf\u6761\u961f\u4f0d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5462\uff1f\u53ef\u4ee5\u5f00 n \u6761\u4f18\u5148\u961f\u5217\uff0c<code>q[i]</code> \u8868\u793a\u4ee5 <code>a[i]</code> \u7ed3\u5c3e\u7684\u6240\u6709\u961f\u4f0d\u7684\u4eba\u6570\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u5bf9 <code>a[i]</code> \u8fdb\u884c\u79bb\u6563\u5316\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u5206\u522b\u4e3a\u6bcf\u4e00\u4e2a\u4eba\u5206\u961f\u662f \\(\\mathcal{O}(n)\\) \u7684\uff0cpriority_queue \u7684\u64cd\u4f5c\u662f \\(\\mathcal{O}(n\\log{n})\\) \u7684\uff0c\u6240\u4ee5 \u603b\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(n\\log{n})\\) \u3002</p> <p>Tag : \u8d2a\u5fc3\u3001\u4f18\u5148\u961f\u5217</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_6","title":"\u7b2c\u4e8c\u7ae0\u2014\u2014\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_7","title":"\u7f51\u4e0a\u51b2\u6d6a","text":"<p>\u76f4\u63a5\u7528\u6808\u6765\u6a21\u62df\u3002</p> <p>Tag : \u6808</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_8","title":"\u60c5\u4eba\u8282","text":"<p>\u9996\u5148\uff0c\u5982\u679c flash \u548c\u4ed6\u7684\u4e24\u4e2a\u5973\u670b\u53cb\u5728\u540c\u4e00\u6761\u94fe\u4e0a\uff0c\u663e\u7136\u9009\u62e9\u4f4d\u4e8e\u4e2d\u95f4\u7684\u90a3\u5ea7\u57ce\u5e02\u4f5c\u4e3a\u76ee\u6807\u57ce\u5e02\u6700\u4f18\uff1b\u5982\u679c\u4ed6\u4eec\u5206\u522b\u5728\u4e0d\u540c\u7684\u5b50\u6811\u4e0a\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u4e24\u4e24\u4e4b\u95f4\u7684 LCA \u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u9009\u62e9\u8fd9\u4e2a LCA \u4f5c\u4e3a\u76ee\u6807\u57ce\u5e02\uff1b\u5982\u679c\u4ed6\u4eec\u4e2d\u6709\u4e24\u4e2a\u5728\u540c\u4e00\u5b50\u6811\u4e0a\uff0c\u53e6\u4e00\u4e2a\u5728\u4e0d\u540c\u7684\u5b50\u6811\u4e0a\uff0c\u90a3\u4e48\u9009\u62e9\u90a3\u4e24\u4e2a\u5bb6\u4f19\u7684 LCA \u4f5c\u4e3a\u76ee\u6807\u57ce\u5e02\u6700\u4f18\u3002</p> <p>\u7136\u540e\u8981\u6ce8\u610f fa \u6570\u7ec4\u5f00\u5927\u4e00\u70b9\uff0c\u8003\u8bd5\u65f6\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86\u4e2a\u628a\u5c0f\u65f6\u90fd\u6ca1\u53d1\u73b0\u3002</p> <p>Tag : LCA</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_9","title":"\u6743\u529b\u5b9d\u5178","text":"<p>\u56e0\u4e3a l \u548c r \u7684\u8303\u56f4\u5f88\u5927\uff0c\u6240\u4ee5\u9996\u5148\u8981\u5bf9\u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u6839\u636e\u9898\u610f\u5904\u7406\u8be2\u95ee\uff0c\u627e\u5230\u662f\u5426\u6709 \\(\\max{(a[l+1, r-1])&lt;a[r]\\le a[l]}\\) \u5373\u53ef\uff0c\u5bf9\u4e8e\u533a\u95f4\u6700\u5927\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 ST \u8868\u6765 \\(\\mathcal{O}(\\log{n})\\) \u89e3\u51b3\u3002</p> <p>Tag : \u79bb\u6563\u5316\u3001ST \u8868</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_10","title":"\u5927\u5bcc\u7fc1","text":"<p>\u4e00\u770b\u5230\u8fd9\u4e2a\u77e9\u5f62\u5c31\u5e94\u8be5\u60f3\u5230\u5c06\u4e8c\u7ef4\u538b\u7f29\u6210\u4e00\u7ef4\uff0c\u7136\u540e\u8003\u8651\u5728\u533a\u95f4\u4e0a\u627e\u5230\u4e00\u6bb5\u5c3d\u91cf\u957f\u800c\u4e14\u6ee1\u8db3\u91d1\u989d\u548c\u5c0f\u4e8e \\(S\\) \u7684\u5b50\u533a\u95f4\uff0c\u5047\u8bbe\u5f53\u524d\u8003\u8651\u7684\u5b50\u533a\u95f4\u4e3a \\([l, r]\\) \uff0c\u56fa\u5b9a\u5de6\u7aef\u70b9 \\(l\\) \uff0c\u5982\u679c \\([l, r+1]\\) \u662f\u6ee1\u8db3\u6761\u4ef6\u7684\uff0c\u90a3\u4e48 \\(r\\) \u4e00\u5b9a\u4e0d\u4f1a\u662f\u7b54\u6848\u533a\u95f4\uff0c\u53ef\u4ee5\u770b\u51fa\u53f3\u7aef\u70b9 \\(r\\) \u6ee1\u8db3\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u3002</p> <p>Tag : \u72b6\u6001\u538b\u7f29\u3001\u5355\u8c03\u6808</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_11","title":"\u7b2c\u4e09\u7ae0\u2014\u2014\u56fe\u8bba\u57fa\u7840","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_12","title":"\u6253\u5361\u65b0\u9910\u5385","text":"<p>\u4e00\u904d dfs \u5373\u53ef\uff0c\u9014\u4e2d\u5982\u679c\u5230\u67d0\u4e00\u70b9\u7684 \\(cost\\) \u5df2\u7ecf\u5927\u4e8e \\(m\\) \u5c31\u76f4\u63a5 return \u3002</p> <p>Tag : DFS</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_13","title":"\u4e0a\u8bfe","text":"<p>\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\u4f7f\u7528\u4f20\u9001\u95e8\u548c\u4e0d\u4f7f\u7528\u4f20\u9001\u95e8\u3002</p> <p>\u4e0d\u4f7f\u7528\u4f20\u9001\u95e8\uff0c\u76f4\u63a5\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u7b97\u51fa \\(s\\) \u5230 \\(t\\) \u7684\u6700\u77ed\u8def \\(dis_1\\) \u3002</p> <p>\u4f7f\u7528\u4f20\u9001\u95e8\uff0c\u5c31\u8dd1\u4e24\u904d\u6700\u77ed\u8def\uff0c\u4e00\u904d\u4ee5 \\(s\\) \u4e3a\u8d77\u70b9\uff0c\u6c42\u51fa\u5230 \\(S\\) \u7684\u6700\u77ed\u8def\uff0c\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u4e0a\u4e00\u6b65\u4e2d\u7684 \\(dis_1[S]\\) \u52a0\u4e0a\u8def\u4e0a\u7684\u8fb9\u6570\uff1b\u53e6\u4e00\u904d\u4ee5 \\(t\\) \u4e3a\u8d77\u70b9\uff0c\u6c42\u51fa\u5230 \\(T\\) \u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u4e24\u4e2a\u6700\u77ed\u8def\u52a0\u8d77\u6765\u5f97\u5230\u7684 \\(dis_2\\) \u5c31\u662f\u4f7f\u7528\u4f20\u9001\u95e8\u7684\u6700\u77ed\u8def\u3002</p> <p>\u6700\u540e\u6bd4\u8f83\u4e24\u4e2a\u8c01\u5c0f\u5c31\u8f93\u51fa\u8c01\u3002</p> <p>Tag : \u6700\u77ed\u8def</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_14","title":"\u590d\u4e60","text":"<p>\u4e00\u773c\u770b\u4e0a\u53bb\u662f\u4e2a\u88f8\u7684 Topo + \u8d2a\u5fc3\uff0cTopo \u7684\u65f6\u5019\u7528\u4e2a\u5c0f\u6839\u5806\u7ef4\u62a4\u5c31\u597d\u4e86\u3002</p> <p>\u7136\u800c\u6211\u5047\u4e86</p> <p>\u8fd9\u4e2a\u987a\u5e8f\u8981\u6c42\uff1a\u5728\u6ee1\u8db3\u6240\u6709\u5b66\u4e60\u9650\u5236\u7684\u524d\u63d0\u4e0b\uff0c\u77e5\u8bc6\u70b9 1 \u5c3d\u91cf\u4f18\u5148\u590d\u4e60\uff1b\u5728\u6ee1\u8db3\u6240\u6709\u5b66\u4e60\u9650\u5236\u4e14\u77e5\u8bc6\u70b9 1 \u5c3d\u91cf\u4f18\u5148\u590d\u4e60\u7684\u524d\u63d0\u4e0b\uff0c\u77e5\u8bc6\u70b9 2 \u5c3d\u91cf\u4f18\u5148\u590d\u4e60\uff0c\u2026\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8fd9\u4e2a\u8981\u6c42\u5e76\u4e0d\u662f\u6307\u7b54\u6848\u7684\u5b57\u5178\u5e8f\u6700\u5c0f</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u7ec4\u6570\u636e</p> <pre><code>4 2\n2 4\n3 1\n</code></pre> <p>\u5982\u679c\u6309\u7167\u539f\u5148\u7684\u7b56\u7565\u6211\u4eec\u5f97\u5230\u7684\u7b54\u6848\u662f <code>2 3 1 4</code> \uff0c\u7136\u800c\u6309\u7167\u8981\u6c42\u5b9e\u9645\u4e0a\u7684\u7b54\u6848\u5e94\u8be5\u662f <code>3 1 2 4</code> \u3002</p> <p>\u4ece\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u770b\u51fa\u6709\u65f6\u5019\u6211\u4eec\u8981\u9009\u62e9\u4e00\u4e2a\u5f53\u65f6\u770b\u4e0a\u53bb\u5e76\u4e0d\u4f18\u7684\u89e3\u6765\u5f97\u5230\u6700\u7ec8\u7684\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u9053\u9898\u5e76\u4e0d\u6ee1\u8db3\u6bcf\u4e00\u6b65\u90fd\u662f\u9009\u6700\u4f18\u7684\u7b56\u7565\uff0c\u8fd9\u65f6\u5019\u4ece\u6b63\u9762\u4e0a\u6765\u8003\u8651\u4e00\u79cd\u666e\u9002\u6027\u7684\u7b56\u7565\u4f3c\u4e4e\u4f1a\u5f88\u9ebb\u70e6\u7684\u6837\u5b50\u3002</p> <p>\u90a3\u6211\u4eec\u4e0d\u59a8\u4ece\u53cd\u9762\u601d\u8003\u3002\u65e2\u7136\u8981\u6c42\u5b57\u5178\u5e8f\u5c0f\u7684\u77e5\u8bc6\u70b9\u5c3d\u91cf\u5f80\u524d\u6392\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4f18\u5148\u7ea7\u4f4e\u3001\u5b57\u5178\u5e8f\u53c8\u5f88\u5927\u7684\u77e5\u8bc6\u70b9\u6211\u4eec\u4e00\u5b9a\u4f1a\u628a\u5b83\u653e\u6700\u540e\uff0c\u4e0d\u5982\u8fd9\u6837\uff0c\u6211\u4eec\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u4f4e\u5230\u9ad8\u8003\u8651\uff0c\u6bcf\u6b21\u628a\u5b57\u5178\u5e8f\u5927\u7684\u653e\u540e\u9762\uff0c\u8fd9\u6837\u5176\u5b9e\u5c31\u662f\u628a\u5b57\u5178\u5e8f\u5c0f\u7684\u5c3d\u91cf\u5f80\u524d\u653e\u4e86\uff0c\u7136\u540e\u7ee7\u7eed\u505a\u4e0b\u53bb\u5c31\u662f\u5c06\u8fd9\u4e9b\u5b57\u5178\u5e8f\u5c0f\u7684\u6309\u7167\u4f18\u5148\u7ea7\u6392\u5e8f\u4e86\uff0c\u6b64\u65f6\u4ed6\u4eec\u9700\u8981\u6ee1\u8db3\u7684\u9650\u5236\u53ea\u6709\u4f18\u5148\u7ea7\uff0c\u4e0d\u80fd\u518d\u628a\u5b83\u5f80\u524d\u653e\u4e86\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u628a\u5b57\u5178\u5e8f\u5927\u7684\u653e\u540e\u9762\uff0c\u4e0d\u65ad\u7684\u505a\u4e0b\u53bb\u76f4\u5230\u4e0d\u80fd\u505a\u4e3a\u6b62\uff0c\u8fd9\u6837\u5b57\u5178\u5e8f\u5927\u7684\u9664\u975e\u662f\u4f18\u5148\u7ea7\u9ad8\u4e8e\u67d0\u4e2a\u5b57\u5178\u5e8f\u5c0f\u7684\u5426\u5219\u4e0d\u53ef\u80fd\u88ab\u653e\u5728\u5b57\u5178\u5e8f\u5c0f\u7684\u524d\u9762\u3002</p> <p>\u5177\u4f53\u5230\u64cd\u4f5c\u4e0a\u6765\u8bf4\uff0c\u8fd9\u79cd\u505a\u6cd5\u662f\u6ee1\u8db3\u8d2a\u5fc3\u7684\u6761\u4ef6\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u53cd\u56fe\uff0c\u7136\u540e Topo \u7684\u540c\u65f6\u7528\u4e00\u4e2a\u5927\u6839\u5806\u7ef4\u62a4\uff0c\u6700\u540e\u9006\u5e8f\u8f93\u51fa\u7b54\u6848\u3002</p> <p>\u4e00\u70b9\u542f\u793a\uff1a</p> <ol> <li>\u5f53\u6b63\u9762\u601d\u8003\u611f\u5230\u7e41\u7410\u3001\u56f0\u96be\u65f6\uff0c\u4e0d\u59a8\u8bd5\u7740\u4ece\u53cd\u9762\u601d\u8003\u3002\u7c7b\u6bd4\u6570\u5b66\u8bc1\u660e\u9898\u4e2d\u901a\u8fc7\u8bc1\u660e\u9006\u5426\u547d\u9898\u7684\u6b63\u786e\u6027\u6765\u8bc1\u660e\u6b63\u547d\u9898\u3002</li> <li>\u5efa\u53cd\u56fe Topo \u7136\u540e\u9006\u5e8f\u8f93\u51fa\u7b54\u6848\u662f\u5728\u5f88\u591a\u5b58\u5728\u5148\u540e\u5c42\u7ea7\u987a\u5e8f\u3001\u9700\u8981\u6ee1\u8db3\u4e00\u4e9b\u9650\u5236\u7684\u56fe\u8bba\u4e2d\u7684\u5e38\u89c1\u6280\u5de7\u3002</li> </ol> <p>Tag : \u62d3\u6251\u6392\u5e8f\u3001\u8d2a\u5fc3</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_15","title":"\u7ade\u6280","text":"<p>\u6b63\u89e3\u4f3c\u4e4e\u662f\u76f4\u63a5\u66b4\u641c\u7136\u540e\u52a0\u526a\u679d\uff1f\u4e0d\u8fc7\u8003\u8651\u5230\u4e24\u4e2a\u540c\u5b66\u4e4b\u95f4\u53ef\u80fd\u7684\u7ed3\u679c\u662f 3 \u79cd\u52a0\u4e0a \\(N\\) \u7684\u8303\u56f4\u53ea\u6709 10 \uff0c\u90a3\u4e48\u66b4\u641c\u662f\u5f88\u81ea\u7136\u7684\u601d\u8def\u4e86\u3002</p> <p>\u5e38\u7528\u7684\u526a\u679d\u6280\u5de7\uff1a\u53ef\u884c\u6027\u526a\u679d\uff08\u6392\u9664\u4e0d\u53ef\u80fd\u7684\u72b6\u6001\uff09\u3001\u8bb0\u5fc6\u5316\u526a\u679d\uff08\u9664\u53bb\u91cd\u590d\u5197\u4f59\u7684\u72b6\u6001\uff09</p> <p>Tag : \u641c\u7d22\u3001\u526a\u679d</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_16","title":"\u7b2c\u56db\u7ae0\u2014\u2014\u6570\u5b66\u57fa\u7840","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#pvz","title":"PvZ","text":"<p>\u5bb9\u6613\u53d1\u73b0\u76d2\u5b50\u91cc\u6bcf\u4e00\u4e2a\u7403\u7684\u7f16\u53f7 \\(c\\) \u4e00\u5b9a\u6ee1\u8db3 \\(ax+by=c\\) \u7684\u5f62\u5f0f\uff0c\u8003\u8651\u88f4\u8700\u5b9a\u7406\uff0c\u5fc5\u7136\u6709 \\(\\gcd(a,b)\\mid c\\) \uff0c\u56e0\u6b64\u7edf\u8ba1 \\(1\\sim n\\) \u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u662f \\(\\gcd(a,b)\\) \u7684\u500d\u6570\u5373\u53ef\uff0c\u7b54\u6848\u662f \\(\\lfloor\\frac{n}{\\gcd{(a,b)}}\\rfloor\\) \uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5c0f P \u5fc5\u8d62\uff0c\u5426\u5219\u5fc5\u8f93\u3002</p> <p>Tag : \u88f4\u8700\u5b9a\u7406\u3001gcd</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_17","title":"\u5403\u841d\u535c","text":"<p>\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u4e2d\u5b58\u5728\u4e24\u4e2a\u6570\u6ee1\u8db3\u4ed6\u4eec\u7684\u4e58\u79ef\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u6570\u5206\u89e3\u540e\u7684\u6bcf\u4e00\u4e2a\u8d28\u6570\u7684\u6b21\u6570\u4e00\u5b9a\u90fd\u662f\u5076\u6570\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u7b5b\u51fa \\(1e7\\) \u4ee5\u5185\u7684\u6240\u6709\u8d28\u6570\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u4e2a\u6570\u8bb0\u5f55\u4e0b\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u6570\u7684\u6b21\u6570\u7684\u5947\u5076\u6027\uff0c\u518d\u5728\u5f53\u524d\u5e8f\u5217\u4e2d\u5bfb\u627e\u662f\u5426\u6709\u5947\u5076\u6027\u4e0e\u5b83\u5b8c\u5168\u76f8\u540c\u7684\u6570\u5373\u53ef\uff0c\u8fd9\u79cd\u65b9\u6848\u7684\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(n^2)\\) \uff0c\u8fd8\u662f\u4e0d\u591f\u4f18\u79c0\u3002</p> <p>\u663e\u7136\u9700\u8981\u4f18\u5316\u7684\u90e8\u5206\u662f\u67e5\u627e\u90e8\u5206\uff0c\u65e2\u7136\u6709\u7528\u7684\u4fe1\u606f\u53ea\u662f\u6bcf\u4e2a\u8d28\u6570\u7684\u6b21\u6570\u7684\u5947\u5076\u6027\uff0c\u6211\u4eec\u4e0d\u59a8\u5c06\u5947\u6570\u6b21\u7684\u6307\u6570\u76f4\u63a5\u8bb0\u4e3a \\(1\\) \uff0c\u5076\u6570\u6b21\u7684\u6307\u6570\u8bb0\u4e3a \\(0\\) \uff0c\u7136\u540e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u90fd\u4f1a\u53d8\u6210 \\(p_1^{0/1}p_2^{0/1}\\cdots p_n^{0/1}\\) \uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6570\u6bcf\u4e2a\u8d28\u6570\u7684\u5947\u5076\u6027\u4e0e\u5b83\u5b8c\u5168\u76f8\u540c\u7684\u8bdd\uff0c\u90a3\u4e48\u4ed6\u4eec\u53d8\u5f62\u540e\u7684\u6570\u662f\u5b8c\u5168\u76f8\u7b49\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u5f00\u4e00\u4e2a \\(vis\\) \u6570\u7ec4\u6216\u8005\u7528\u4e00\u4e2a \\(map\\) \u6765\u8bb0\u5f55\u5373\u53ef\u3002</p> <p>Tag : \u8d2a\u5fc3\u3001\u60df\u4e00\u5206\u89e3\u5b9a\u7406\u3001\u8d28\u6570\u7b5b\u6cd5</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_18","title":"\u5347\u65d7\u4eea\u5f0f","text":"<p>\u5f88\u5bb9\u6613\u60f3\u5230\u8981\u7edf\u8ba1\u6ee1\u8db3 \\(i\\times j=x\\) \u7684 \\((i,j)\\) \u7684\u6570\u91cf\uff0c\u7136\u540e\u4e00\u4e2a\u524d\u7f00\u548c\u52a0\u4e8c\u5206\u67e5\u627e\u5373\u53ef\uff0c\u6ce8\u610f\u5230 \\(k\\le \\max(n,m)\\) \uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8003\u8651 \\([1,\\max(n,m)]\\) \u7684 \\(x\\) \uff0c\u4e4b\u540e\u7684\u6570\u4e00\u5b9a\u4e0d\u53ef\u80fd\u51fa\u73b0\u3002</p> <p>\u4e0d\u59a8\u8bbe \\(n\\le m\\) \uff0c\u8981\u7edf\u8ba1 \\(i\\times j=x\\) \u7684 \\((i,j)\\) \u76f8\u5f53\u4e8e\u6c42 \\(x\\) \u7684\u7ea6\u6570\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f \\(\\sum_{d\\mid{x},d\\le n}1\\) \uff0c\u52a0\u4e0a\u7edf\u8ba1\u524d\u7f00\u548c\u7684\u5f0f\u5b50\u5c31\u662f \\(\\sum_{i=1}^m\\sum_{d\\mid{i},d\\le n}1\\) \uff0c\u4e4b\u540e\u5c31\u662f\u8003\u8651\u4e00\u4e2a \\(d\\) \u53ef\u80fd\u5bf9\u591a\u5c11\u4e2a \\(i\\) \u4ea7\u751f\u8d21\u732e\uff0c\u7b54\u6848\u663e\u7136\u662f \\(\\lfloor \\frac{m}{d}\\rfloor\\) \uff0c\u53d8\u6362\u6c42\u548c\u987a\u5e8f\u4e4b\u540e\u5f0f\u5b50\u5c31\u53d8\u6210\u4e86 \\(\\sum_{d=1}^n \\lfloor \\frac{m}{d}\\rfloor\\) \uff0c\u7136\u540e\u6574\u9664\u5206\u5757\u5373\u53ef\uff0c\u590d\u6742\u5ea6 \\(\\mathcal{O}(\\sqrt{m})\\) \u3002</p> <p>Tag : \u6570\u8bba\u5206\u5757\u3001\u6c42\u548c</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_19","title":"\u5df4\u65af\u548c\u4ed6\u7684\u5b66\u751f","text":"<p>\u7b49\u5f0f\u4e24\u8fb9\u7684\u8fd0\u7b97\u90fd\u662f\u5217\u72ec\u7acb\u7684\uff0c\u4ee4 \\(B_{\\star,i}\\) \u8868\u793a \\(B\\) \u7684\u7b2c \\(i\\) \u5217\uff0c\u5219\u6709 \\(\\forall i\\in[1,n],A\\times B_{\\star,i}=C\\odot B_{\\star,i}\\) \uff0c\u5373 \\(\\forall i\\in[1,n],\\sum_{k=1}^n A_{j,k}B_{k,i}=B_{j,i}\\odot C_{j,i}\\) \u3002</p> <p>\u7701\u7565\u7b2c\u4e8c\u7ef4\u7684 \\(i\\) \uff0c\u6709 \\(\\forall i\\in[1,n],\\sum_{k=1}^n A_{j,k}B_{k}=B_{j}\\odot C_{j}\\)</p> <p>\u5982\u679c \\(C_j=0\\) \u5219\u4e0d\u7ba1\uff0c\u5982\u679c \\(C_j=1\\) \u5219\u76f8\u5f53\u4e8e\u628a\u5de6\u4fa7 \\(A_{j,j}B_j\\) \u53d8\u4e3a \\((A_{j,j}-1)B_j\\) \uff0c\u4e5f\u5c31\u662f $$ \\forall j\\in[1,n],\\sum_{k=1}^n (A_{j,k}-[k=j\\land C_j])B_k=0 $$ \u5c06 \\(B_k\\) \u770b\u505a\u7b2c \\(k\\) \u4e2a\u5411\u91cf\u9009\u4e0d\u9009\uff0c\u76f8\u5f53\u4e8e\u4ece \\(n\\) \u4e2a\u5411\u91cf\u4e2d\u9009\u82e5\u5e72\u4e2a\uff0c\u4f7f\u5f97\u4ed6\u4eec\u7684\u5f02\u6216\u503c\u4e3a 0 \u5411\u91cf\uff0c\u53ef\u4ee5\u5728 \\(\\mathcal{O}(\\frac{n^3}{\\omega})\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u57fa\u6570 \\(d_i\\) \uff0c\u7b54\u6848\u5373\u4e3a \\(\\prod_{i=1}^n 2^{n-d_i}\\) \u3002</p> <p>Tag : \u7ebf\u6027\u4ee3\u6570\u3001\u77e9\u9635</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_20","title":"\u7b2c\u4e94\u7ae0\u2014\u2014\u52a8\u6001\u89c4\u5212\u57fa\u7840","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_21","title":"\u591a\u5143\u51fd\u6570","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u76f4\u63a5\u66b4\u529b\u9012\u63a8\u8fdb\u884c\u8ba1\u7b97\u4f1a\u91cd\u590d\u8ba1\u7b97\u5f88\u591a\u72b6\u6001\uff0c\u540c\u65f6\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002</p> <p>Tag: \u8bb0\u5fc6\u5316\u641c\u7d22</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_22","title":"\u538b\u5c81\u94b1","text":"<p>\u8fd9\u9053\u9898\u9700\u8981\u6839\u636e\u6570\u636e\u8303\u56f4\u6765\u9009\u62e9\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u524d \\(60\\%\\) \u7684\u6570\u636e\u76f4\u63a5\u66b4\u641c\uff0c\u540e \\(40\\%\\) \u7684\u6570\u636e DP \uff0c\u4e0d\u8fc7 \\(100\\%\\) \u7684\u6570\u636e\u5e94\u8be5\u53ef\u4ee5\u7528 meet in the middle \u89e3\u51b3\u3002</p> <p>Tag : \u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_23","title":"\u6cb9\u7530","text":"<p>\u5206\u7ec4\u80cc\u5305\u3002\u5c06\u7b2c \\(i\\) \u5757\u6cb9\u7530\u7684\u58eb\u5175\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u540e\u5f97\u5230 \\(a_{i,1\\sim s}\\) \uff0c\u90a3\u4e48\u5728\u8fd9\u5757\u6cb9\u7530\u90e8\u7f72\u7684\u58eb\u5175\u6570\u91cf\u4e00\u5b9a\u662f \\(2a_{i,x}+1\\) \uff0c\u80fd\u6218\u80dc\u7684\u58eb\u5175\u6570\u662f\u524d\u7f00\u548c \\(a_{i,1\\sim x}\\) \uff0c\u76f8\u5f53\u4e8e\u7b2c \\(i\\) \u7ec4\u7269\u54c1\u4e00\u5171\u6709 \\(s\\) \u4e2a\uff0c\u9009\u53d6\u524d \\(j\\) \u4e2a\u7684\u91cd\u91cf\u662f \\(2a_{i,j}+1\\) \uff0c\u4ef7\u503c\u662f\u524d\u7f00\u548c \\(a_{i,1\\sim j}\\) \uff0c\u7136\u540e\u80cc\u5305\u5c31\u597d\u4e86\uff0c\u590d\u6742\u5ea6 \\(\\mathcal{O}(nms)\\) \u3002</p> <p>Tag : \u5206\u7ec4\u80cc\u5305</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_24","title":"\u83e0\u841d\u871c","text":"<p>\u4ef7\u503c\u8d8a\u9ad8\u7684\u83e0\u841d\u871c\u4e00\u5b9a\u4f1a\u4f18\u5148\u5356\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06 \\(p_i\\) \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u53d1\u73b0\u5356\u51fa\u7684\u83e0\u841d\u871c\u7684\u603b\u4ef7\u503c\u548c\u83e0\u841d\u871c\u76d2\u7684\u603b\u82b1\u8d39\u662f\u72ec\u7acb\u7684\uff0c\u800c\u53ea\u8003\u8651\u83e0\u841d\u871c\u76d2\u7684\u9009\u62e9\u7684\u8bdd\u5c31\u662f\u4e00\u4e2a 0/1 \u80cc\u5305\u95ee\u9898\uff0c\u6211\u4eec\u4ee4 \\(f[i][j]\\) \u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u7b2c \\(i\\) \u4e2a\u83e0\u841d\u871c\u76d2\uff0c\u4e00\u5171\u53ef\u4ee5\u653e\u5165 \\(j\\) \u4e2a\u83e0\u841d\u871c\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u4e48 \\(f[i][j]=\\min{(f[i-1][j],f[i-1][j-c[i]]+e[i])}\\) \uff0c\u5176\u4e2d\u7b2c\u4e00\u7ef4\u53ef\u4ee5\u6eda\u6389\uff0c\u4e8e\u662f\u6211\u4eec\u6700\u540e\u76f4\u63a5\u679a\u4e3e\u653e\u5165\u83e0\u841d\u871c\u7684\u4e2a\u6570\uff0c\u5bf9 \\(p[1\\sim i]-f[i]\\) \u53d6 \\(\\min\\) \u5373\u53ef\uff0c\u5176\u4e2d \\(p[1\\sim i]\\) \u4e3a\u524d\u7f00\u548c\u3002</p> <p>Tag : 0/1 \u80cc\u5305\u3001\u8d2a\u5fc3</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_25","title":"\u7b2c\u516d\u7ae0\u2014\u2014\u6570\u636e\u7ed3\u6784\u63d0\u9ad8","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_26","title":"\u8bf4\u8c0e","text":"<p>\u5f88\u88f8\u7684\u5e76\u67e5\u96c6\u3002\u4f46\u662f\u8981\u6ce8\u610f \\(a,b\\) \u8303\u56f4\u5f88\u5927\uff0c\u9700\u8981\u5148\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u7136\u540e\u53ef\u80fd\u51fa\u73b0\u5148\u8bf4 \\(a,b\\) \u4e0d\u5728\u4e00\u8d77\uff0c\u540e\u9762\u53c8\u5728\u4e00\u8d77\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd8\u8981\u5148\u5904\u7406\u6240\u6709\u5728\u4e00\u8d77\u7684\u60c5\u51b5\uff0c\u4e4b\u540e\u518d\u5224\u65ad\u4e0d\u5728\u4e00\u8d77\u7684\u8bf4\u6cd5\u3002</p> <p>Tag : \u5e76\u67e5\u96c6</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_27","title":"\u9009\u8863\u670d","text":"<p>\u8fd9\u9053\u9898\u4e3b\u8981\u7528\u5230\u4e86\u4e24\u4e2a\u5957\u8def\uff1a</p> <ol> <li>\u7528\u7ebf\u6bb5\u6811\u5bf9\u4e00\u4e32 01 \u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u6bcf\u6b21\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u662f \\(\\log{n}\\) </li> <li>\u5047\u8bbe\u6709\u5e8f\u5217 \\(a_{1\\sim n}\\) \uff0c\u6253\u4e71\u5b83\u7684\u539f\u6709\u6b21\u5e8f\uff08\u4e0d\u4e00\u5b9a\u662f\u6309\u6570\u503c\u6392\u5e8f\uff09\uff0c\u5e0c\u671b\u627e\u5230\u65b0\u5e8f\u5217\u7684\u7b2c \\(k\\) \u4f4d\u662f\u539f\u5e8f\u5217\u7684\u7b2c\u591a\u5c11\u4f4d\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\uff0c\u5c06\u539f\u5e8f\u5217\u7b2c \\(1\\sim mid-1\\) \u4e2a\u6570\u53d8\u4e3a \\(0\\) \uff0c\u5176\u4f59\u7684\u6570\u7f6e\u4e3a \\(1\\) \uff0c\u90a3\u4e48\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u6253\u4e71\u6b21\u5e8f\u540e\uff0c\u82e5\u7b2c \\(k\\) \u4f4d\u4e3a \\(1\\) \uff0c\u8bf4\u660e\u7b54\u6848 \\(\\ge \\ mid\\) \uff0c\u5426\u5219 \\(&lt; mid\\) \u3002</li> </ol> <p>\u770b\u5230\u8fd9\u9053\u9898\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6392\u5e8f\u64cd\u4f5c\u76f4\u63a5 \\(sort\\) \u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u5982\u679c\u8981\u51cf\u5c0f\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u5fc5\u7136\u8981\u4ece\u6392\u5e8f\u7684\u64cd\u4f5c\u5165\u624b\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u6b21\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u80fd\u591f\u505a\u5230 \\(\\log{n}\\) \u7684\u7ea7\u522b\uff0c\u800c\u5982\u679c\u5e8f\u5217\u662f 01 \u5e8f\u5217\u7684\u8bdd\u4fbf\u53ef\u7528\u5957\u8def 1 \u964d\u5230 \\(\\mathcal{O}(\\log{n})\\) \uff0c\u518d\u770b\u95ee\u9898\uff0c\u6b63\u597d\u53ef\u4ee5\u7528\u5957\u8def 2 \u628a\u5e8f\u5217\u53d8\u4e3a 01 \u5e8f\u5217\uff0c\u4ece\u800c\u6211\u4eec\u6bcf\u6b21\u5bf9\u539f\u5e8f\u5217\u4e8c\u5206\u8f6c\u5316\u4e3a 01 \u5e8f\u5217\u4e4b\u540e\u5957\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5bf9 \\(m\\) \u6b21\u64cd\u4f5c\u6392\u5e8f\uff0c\u7136\u540e\u770b\u6392\u5e8f\u540e\u7684\u7b2c \\(q\\) \u4f4d\u662f 1 \u8fd8\u662f 0 \u5373\u53ef\u3002</p> <p>\u6240\u4ee5\u8fd9\u9053\u9898\u5e94\u8be5\u662f\u4e00\u4e2a\u5957\u8def\u9898\uff08</p> <p>Tag : \u5957\u8def\u3001\u7ebf\u6bb5\u6811</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_28","title":"\u5c71\u8109","text":"<p>\u8003\u8bd5\u7684\u65f6\u5019\u60f3\u590d\u6742\u4e86\uff0c\u5199\u4e86\u4e00\u4e2a \\(\\mathcal{O}(n\\sqrt{n})\\) \u5e76\u4e14\u5e38\u6570\u5f88\u5927\u7684\u5206\u5757\u66b4\u529b\uff0c\u7136\u800c\u5fd8\u4e86 set \u7684\u63a5\u53e3\u6700\u540e\u53ea\u80fd\u4ea4\u4e00\u4e2a\u7eaf\u66b4\u529b\u89e3\u6cd5\u4e0a\u53bb\u4e86\u3002</p> <p>\u5176\u5b9e\u8fd9\u9898\u633a\u597d\u60f3\u7684\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u7684\u8be2\u95ee\uff0c\u627e\u5230\u5c0f\u4e8e\u7b49\u4e8e \\(b_i\\) \u7684\u5c71\u7684\u6570\u91cf \\(x\\) \uff0c\u5982\u679c\u5b83\u4eec\u90fd\u4e0d\u5728\u8fd9 \\(n\\) \u5ea7\u5c71\u7684\u4e24\u7aef\u7684\u8bdd\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u5c31\u662f \\(x+1\\) \uff0c\u800c\u7edf\u8ba1\u8fd9\u6837\u7684 \\(x\\) \u5c31\u662f\u6811\u72b6\u6570\u7ec4\u7684\u5f3a\u9879\u4e86\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u89e3\u51b3\u5355\u6b21\u4fee\u6539\u7684\u95ee\u9898\u3002\u800c\u5bf9\u4e8e\u5728 \\(n\\) \u5ea7\u5c71\u7684\u4e24\u7aef\u7684\u60c5\u51b5\uff0c\u663e\u7136\u53ef\u4ee5\u76f4\u63a5\u5bf9\u4e24\u7aef\u5206\u522b\u5224\u65ad\u4e00\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u5728\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u7684\u65f6\u5019\u52a0\u5165 \\(0\\) \u548c \\(n+1\\) \u4e24\u4e2a\u8282\u70b9\u3002</p> <p>Tag : \u6811\u72b6\u6570\u7ec4</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_29","title":"\u9b54\u6cd5\u8292\u679c","text":"<p>\u9996\u5148\u8003\u8651\u66b4\u529b\u6c42\u89e3\u3002\u6bcf\u6b21\u66b4\u529b\u6c42\u51fa\u6240\u6709\u5408\u6cd5\u7684\u8fb9\uff0c\u7136\u540e\u5224\u65ad\u4e24\u70b9\u662f\u5426\u8054\u901a\uff0c\u540c\u65f6\u5224\u65ad\u8054\u901a\u5757\u5185\u7684\u6700\u5927\u503c\u662f\u5426\u5408\u6cd5\u3002</p> <p>\u7136\u540e\u8003\u8651\u7528\u5206\u5757\u79bb\u7ebf\u5904\u7406\u8be2\u95ee\u3002\u5148\u4ee5\u8fb9\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\u5206\u5757\uff0c\u518d\u5728\u5757\u5185\u4ee5\u8be2\u95ee\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u5f53\u524d\u5757\u524d\u9762\u7684\u70b9\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u4fdd\u8bc1\u524d\u9762\u7684\u70b9\u90fd\u662f\u7b26\u5408\u5f53\u524d\u8be2\u95ee\u70b9\u5bf9\u4e8e\u7b2c\u4e00\u5173\u952e\u5b57\u7684\u6761\u4ef6\u7684\u3002\u540c\u65f6\u7b2c\u4e8c\u5173\u952e\u5b57\u90fd\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u6309\u7167\u5757\u7684\u987a\u5e8f\u5904\u7406\u4e00\u4e0b\uff0c\u518d\u5bf9\u6bcf\u4e2a\u8be2\u95ee\u66b4\u529b\u5904\u7406\u5f53\u524d\u5757\u7684\u8d21\u732e\uff0c\u7531\u4e8e\u6bcf\u6b21\u5904\u7406\u6d89\u53ca\u64a4\u9500\u64cd\u4f5c\uff0c\u56e0\u6b64\u9700\u8981\u7528\u5230\u5e76\u67e5\u96c6\u3002</p> <p>Tag : \u5206\u5757\u3001\u79bb\u7ebf\u5904\u7406\u3001\u5e76\u67e5\u96c6</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_30","title":"\u7b2c\u4e03\u7ae0\u2014\u2014\u56fe\u8bba\u63d0\u9ad8","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_31","title":"\u6311\u8292\u679c","text":"<p>\u53ef\u4ee5\u53d1\u73b0\u5947\u6570\u548c\u5947\u6570\u3001\u5076\u6570\u548c\u5076\u6570\u7684\u70b9\u662f\u4e0d\u53ef\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u96c6\u5408\u91cc\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f97\u77e5\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002</p> <p>\u7136\u540e\u8003\u8651\u6c42\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u628a\u6240\u6709\u6ee1\u8db3 \\(\\gcd{(i,j)}\\cdot \\gcd{(i+1,j+1)}=1\\) \u7684\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u518d\u6c42\u89e3\u5373\u53ef\u3002</p> <p>Tag : \u4e8c\u5206\u56fe\u3001\u6700\u5927\u72ec\u7acb\u96c6</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_32","title":"\u5b8c\u5168\u56fe","text":"<p>\u8003\u8651 Kruskal \u7b97\u6cd5\u7684\u6b65\u9aa4\uff0c\u6bcf\u6b21\u52a0\u5165\u6700\u5c0f\u7684\u5408\u6cd5\u7684\u4e00\u6761\u8fb9\uff0c\u8bb0\u4e3a \\(edge(u,v)\\) \uff0c\u7136\u540e\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\uff0c\u8bbe \\(u,v\\) \u6240\u5728\u7684\u96c6\u5408\u7684\u5927\u5c0f\u4e3a \\(size[u],size[v]\\) \uff0c\u90a3\u4e48\u5728\u9898\u8ff0\u7684\u5b8c\u5168\u56fe\u4e2d\uff0c\u4efb\u610f\u4e00\u6761\u4fe9\u8282\u70b9\u5206\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u96c6\u5408\u7684\u8fb9\u7684\u957f\u5ea6\u90fd\u8981\u5927\u4e8e \\(val(u,v)\\) \uff0c\u5982\u679c\u662f\u8fb9\u6743\u548c\u6700\u5c0f\u7684\u5b8c\u5168\u56fe\u7684\u8bdd\uff0c\u90a3\u4e48\u957f\u5ea6\u5c31\u8981\u7b49\u4e8e \\(val(u,v)+1\\) \uff0c\u4e8e\u662f\u8fd9\u4e24\u4e2a\u96c6\u5408\u4e4b\u95f4\u7684\u8fb9\u6743\u548c\u5373\u4e3a \\((val(u,v)+1)\\cdot(size[u]\\cdot size[v]-1)+val(u,v)\\) \u3002</p> <p>\u6700\u540e\u7684\u505a\u6cd5\u663e\u7136\u5c31\u662f\u8dd1\u4e00\u904d Kruskal \uff0c\u6bcf\u6b21\u5c06\u7b54\u6848\u52a0\u4e0a\u4e0a\u8ff0\u8fb9\u6743\u548c\u5373\u53ef\u3002</p> <p>Tag : \u6700\u5c0f\u751f\u6210\u6811\u3001Kruskal</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_33","title":"\u63a2\u9669","text":"<p>\u8003\u8bd5\u65f6\u53ea\u60f3\u5230\u5982\u679c\u80fd\u627e\u51fa\u6240\u6709\u7684\u8def\u5f84\u7ec4\u6210\u4e00\u5f20\u5b8c\u5168\u56fe\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\u5728\u8fd9\u5f20\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e0a\u6c42 LCA \uff0c\u540c\u65f6\u7531\u4e8e \\(n\\) \u5f88\u5927\uff0c\u5efa\u56fe\u7684\u65f6\u5019\u53ea\u9700\u8981\u7559\u4e0b\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u8fb9\uff0c\u4f46\u662f\u524d\u9762\u600e\u6837\u6c42\u51fa\u8fd9\u4e9b\u8def\u5f84\u4e0d\u4f1a\u3002\u6b63\u786e\u7684\u65b9\u6cd5\u662f\u53cc\u5411\u5bbd\u641c\uff0c\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c0f\u590d\u6742\u5ea6\u3002</p> <p>Tag : \u53cc\u5411\u5bbd\u641c\u3001LCA\u3001\u6700\u5c0f\u751f\u6210\u6811</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_34","title":"\u7b2c\u516b\u7ae0\u2014\u2014\u6570\u5b66\u63d0\u9ad8","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_35","title":"\u6311\u6218\u8005\u6e38\u620f","text":"<p>\u5f53 \\(k=1\\) \u65f6\uff0c\u663e\u7136 \\(n\\) \u4e3a\u5947\u6570\u7684\u8bdd\u662f\u5148\u624b\u5fc5\u80dc\u3002</p> <p>\u5f53 \\(k&gt;1\\) \u65f6\uff0c\u5982\u679c\u5f53\u524d\u662f\u4e24\u5806\u6570\u91cf\u76f8\u540c\u7684\u77f3\u5934\uff0c\u90a3\u4e48\u65e0\u8bba\u5148\u624b\u600e\u4e48\u53d6\uff0c\u540e\u624b\u90fd\u53ef\u4ee5\u5728\u53e6\u4e00\u5806\u77f3\u5934\u91cc\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u53d6\uff0c\u4ece\u800c\u5148\u624b\u662f\u5fc5\u8f93\u7684\u3002\u56e0\u6b64\uff0cFA \u53ea\u9700\u5728\u4e00\u5f00\u59cb\u5c31\u5c06\u5176\u5206\u6210\u4e24\u5806\u6570\u91cf\u76f8\u540c\u7684\u77f3\u5934\u8ba9\u81ea\u5df1\u6210\u4e3a\u540e\u624b\u5c31\u662f\u5fc5\u8d62\u7684\uff0c\u82e5 \\(n\\) \u4e3a\u5947\u6570\u5c31\u4ece\u4e2d\u95f4\u53d6 1 \u4e2a\uff0c\u5426\u5219\u5c31\u53d6 2 \u4e2a\uff0c\u6240\u4ee5 FA \u662f\u5fc5\u8d62\u7684\u3002</p> <p>Tag : \u535a\u5f08\u8bba</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_36","title":"\u6570\u7684\u7814\u7a76","text":"<p>\u5f53 \\(vi(x)=x\\) \uff0c\u4e5f\u5c31\u662f \\(x\\) \u7684\u5206\u89e3\u5f0f\u4e2d\u4e0d\u542b\u6709\u6307\u6570\u5927\u4e8e 1 \u7684\u8d28\u56e0\u5b50\u65f6\uff0c\u7ed3\u8bba\u663e\u7136\u4e0d\u6210\u7acb\u3002</p> <p>\u5f53 \\(x\\) \u7684\u5206\u89e3\u5f0f\u4e2d\u542b\u6709\u6307\u6570\u5927\u4e8e 1 \u7684\u8d28\u56e0\u5b50\u65f6\uff0c\u6211\u4eec\u5c1d\u8bd5\u627e\u5230\u4f7f\u5f97\u7ed3\u8bba\u6210\u7acb\u7684 \\(y,z\\) \uff0c\u89c2\u5bdf\u7ed3\u8bba\u5f0f\uff0c\u4e0d\u7b49\u5f0f\u4e24\u7aef\u7684\u6570\u90fd\u662f \\(vi(x)\\) \u7684\u500d\u6570\uff0c\u53f3\u7aef \\(x\\) \u9664\u4ee5 \\(vi(x)\\) \u540e\u53ea\u5269\u4e0b\u6307\u6570\u5927\u4e8e 1 \u7684\u8d28\u56e0\u5b50\u7684\u4e58\u79ef\u4e86\uff0c\u800c\u5de6\u8fb9\u9664\u4ee5 \\(vi(x)\\) \u540e\u5269\u4e0b\u7684\u56e0\u5b50\u8fd8\u4e0e \\(y,z\\) \u6709\u5173\uff0c\u4e3a\u4e86\u51cf\u5c11\u672a\u77e5\u6570\u7684\u6570\u91cf\uff0c\u6211\u4eec\u5e0c\u671b\u5b83\u53ea\u4e0e \\(z\\) \u6709\u5173\u5e76\u4e14\u663e\u7136\u4e0d\u4f1a\u518d\u5305\u542b \\(vi(x)\\) \u7684\u8d28\u56e0\u5b50\u4e86\uff0c\u4e8e\u662f\u60f3\u5230\u4ee4 \\(y=p_1p_2\\cdots p_n\\) \uff0c\u90a3\u4e48 \\(z=p_{1}p_{2}\\cdots p_{n}(p_{i_1}^{a_{i_1}-1}p_{i_2}^{a_{i_2}-1}\\cdots p_{i_k}^{a_{i_k}-1}-1)\\) \uff08\u5176\u4e2d \\(a_{i_1},a_{i_2},\\dots,a_{i_k}&gt;1\\) \uff09\uff0c\u6b64\u65f6 $$ \\begin{aligned} \\frac{vi(xyz)}{vi(x)}&amp;=vi(p_{i_1}^{a_{i_1}-1}p_{i_2}^{a_{i_2}-1}\\cdots p_{i_k}^{a_{i_k}-1}-1)\\\\ &amp;\\le p_{i_1}^{a_{i_1}-1}p_{i_2}^{a_{i_2}-1}\\cdots p_{i_k}^{a_{i_k}-1}-1\\\\ &amp;&lt; p_{i_1}^{a_{i_1}-1}p_{i_2}^{a_{i_2}-1}\\cdots p_{i_k}^{a_{i_k}-1}\\\\ &amp;= \\frac{x}{vi(x)} \\end{aligned} $$ \u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u627e\u5230\u4e86\u5408\u6cd5\u7684 \\(y,z\\) \uff0c\u4ece\u800c\u5f53 \\(x\\) \u7684\u5206\u89e3\u5f0f\u4e2d\u542b\u6709\u6307\u6570\u5927\u4e8e 1 \u7684\u8d28\u56e0\u5b50\u65f6\u7ed3\u8bba\u662f\u4e00\u5b9a\u6210\u7acb\u7684\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5c06 \\(x\\) \u8d28\u56e0\u6570\u5206\u89e3\u5373\u53ef\uff0c\u8003\u8651\u5230 \\(x\\le 10^{18}\\) \uff0c\u9700\u8981\u4f7f\u7528 Pollard Rho \u7b97\u6cd5\u3002</p> <p>Tag : \u6570\u8bba\u3001\u60df\u4e00\u5206\u89e3\u5b9a\u7406\u3001Pollard Rho</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_37","title":"\u55b7\u6cc9","text":"<p>\u9898\u610f\u5373\u4ece \\([L,R]\\) \u4e2d\u9009\u53d6 \\(\\le n\\) \u4e2a\u6570\u7684\u65b9\u6848\u6570\u3002</p> <p>\u4e0d\u59a8\u4ee4 \\(m=R-L+1\\) \uff0c\u5373\u4ece \\(m\\) \u4e2a\u6570\u91cc\u9009\u53d6 \\(\\le n\\) \u4e2a\u6570\u3002\u76f4\u63a5\u8003\u8651\u4f1a\u5f88\u590d\u6742\uff0c\u7531\u4e8e\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u9009\u53d6\u7684\u6570\u603b\u80fd\u6392\u5e8f\u540e\u5f62\u6210\u4e00\u4e2a\u5355\u8c03\u4e0d\u964d\u5e8f\u5217\uff0c\u56e0\u6b64\u6309\u7167\u5927\u5c0f\u987a\u5e8f\u6765\u8003\u8651\u679a\u4e3e\u4f1a\u66f4\u597d\u3002</p> <p>\u5047\u8bbe\u662f\u9009\u53d6 \\(k\\) \u4e2a\u6570\uff0c\u5148\u4ece\u6700\u7b80\u5355\u7684\u60c5\u51b5\u2014\u2014\u5355\u8c03\u9012\u589e\u5e8f\u5217\u5f00\u59cb\u8003\u8651\uff0c\u6b64\u65f6\u65b9\u6848\u6570\u663e\u7136\u662f \\(\\binom{m}{k}\\) \uff0c\u5982\u679c\u662f\u5355\u8c03\u4e0d\u964d\u5e8f\u5217\uff0c\u5047\u8bbe \\(m\\) \u4e2a\u6570\u5206\u522b\u9009\u53d6 \\(x_1,x_2,\\dots,x_m\\) \u4e2a\uff0c\u6709 \\(x_1+x_2+\\cdots+x_m=k\\) \uff0c\u5e76\u4e14 \\(x_i\\ge 0\\) \uff0c\u90a3\u4e48\u5c31\u662f\u7ecf\u5178\u9694\u677f\u6cd5\u7684\u5e94\u7528\u4e86\uff0c\u65b9\u6848\u6570\u4e3a \\(\\binom{k-1}{m+k-1}\\) \uff0c\u4ece\u800c\u6700\u540e\u7684\u7b54\u6848\u4e3a \\(\\sum_{i=1}^n\\binom{m}{i}+\\binom{m+i-1}{i-1}\\) \u3002</p> <p>\u5c1d\u8bd5\u5c06\u5f0f\u5b50\u5316\u7b80\uff0c\u6839\u636e \\(\\binom{n}{m}=\\binom{n-1}{m}+\\binom{n-1}{m-1}\\) \uff0c\u5148\u52a0\u4e0a \\(\\binom{m}{0}\\) \u518d\u51cf\u53bb 1 \uff0c\u4e0d\u65ad\u9012\u63a8\u7ea6\u9879\u53ef\u4ee5\u5f97\u5230 \\(\\binom{n+m}{n}-1\\) \uff0c\u7531\u4e8e\u6a21\u6570\u4e0d\u5927\uff0c\u53ef\u4ee5\u91c7\u7528 Lucas \u5b9a\u7406\u6c42\u89e3\u3002</p> <p>Tag : \u8ba1\u6570\u539f\u7406\u3001Lucas \u5b9a\u7406\u3001\u6392\u5217\u7ec4\u5408</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#gcd-and-prime","title":"gcd and prime","text":"<p>\u8003\u8651\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u3002</p> <p>\u53ea\u6709\u5f53 \\(\\gcd(i,j)=p(p\u4e3a\u7d20\u6570)\\) \u65f6\u624d\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u56e0\u6b64\u539f\u5f0f\u8f6c\u5316\u4e3a \\(\\sum_{i=1}^n\\sum_{j=1}^m[\\gcd(i,j)=p]\\) \uff0c\u7b49\u4ef7\u4e8e \\(\\sum_{p\\in primes}\\sum_{i=1}^n\\sum_{j=1}^m[\\gcd(i,j)=p]\\) \u3002</p> <p>\u8f6c\u5316\u4e3a\u53ef\u4ee5\u7b49\u4ef7\u4ee3\u6362\u7684\u5f62\u5f0f\uff0c\\(\\sum_{p\\in primes}\\sum_{i=1}^{\\lfloor\\frac{n}{p}\\rfloor}\\sum_{j=1}^{\\lfloor\\frac{m}{p}\\rfloor}[\\gcd(i,j)=1]\\) \uff0c</p> <p>\u7136\u540e\u5f00\u59cb\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\uff0c\\(\\sum_{p\\in primes}\\sum_{i=1}^{\\lfloor\\frac{n}{p}\\rfloor}\\sum_{j=1}^{\\lfloor\\frac{m}{p}\\rfloor}\\sum_{d\\mid\\gcd(i,j)}\\mu(d)\\) \uff0c</p> <p>\u6539\u53d8\u6c42\u548c\u987a\u5e8f\uff0c\\(\\sum_{p\\in primes}\\sum_{d=1}^{\\min{(\\lfloor\\frac{n}{p}\\rfloor,\\lfloor\\frac{m}{p}\\rfloor)}}\\mu(d)\\lfloor\\frac{n}{dp}\\rfloor\\lfloor\\frac{m}{dp}\\rfloor\\) \uff0c</p> <p>\u4ee4 \\(T=dp\\) \uff0c\u6539\u4e3a\u679a\u4e3e \\(T\\) \uff0c\u53ef\u4ee5\u53d1\u73b0 \\(T\\) \u80fd\u53d6\u904d \\([1,\\min(n, m)]\\) \uff0c\u800c \\(d\\mid T\\) \u5df2\u77e5\uff0c\u4e8e\u662f\u6709 \\(\\sum_{T=1}^{\\min(n,m)}\\sum_{p\\mid T,p\\in primes}\\mu(\\frac{T}{p})\\lfloor\\frac{n}{T}\\rfloor\\lfloor\\frac{m}{T}\\rfloor\\) \uff0c</p> <p>\u6700\u540e\u7528\u57c3\u6c0f\u7b5b\u9884\u5904\u7406\u6bcf\u4e2a \\(T\\) \u7684\u8d21\u732e\u5e76\u4e14\u6574\u9664\u5206\u5757\uff0c\u518d\u5bf9 \\(T\\) \u8fdb\u884c\u524d\u7f00\u548c\u5904\u7406\u5373\u53ef\u3002</p> <p>Tag : \u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14\u3001gcd\u3001\u6570\u8bba\u5206\u5757\u3001\u7d20\u6027\u7b5b</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_38","title":"\u7b2c\u4e5d\u7ae0\u2014\u2014\u52a8\u6001\u89c4\u5212\u63d0\u9ad8","text":"","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_39","title":"\u5927\u79b9\u6cbb\u6c34","text":"<p>\u76f4\u63a5\u6c42\u89e3\u6bcf\u4e2a\u8282\u70b9\u906d\u53d7\u6d2a\u6c34\u7684\u6982\u7387\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u662f\u53cd\u8fc7\u6765\u6c42\u89e3\u5b83\u4e0d\u7206\u53d1\u6d2a\u6c34\u7684\u6982\u7387\u5219\u6bd4\u8f83\u7b80\u5355\uff0c\u7b49\u4e8e\u6bcf\u6761\u9053\u8def\u4e0d\u88ab\u6d2a\u6c34\u51b2\u57ae\u540c\u65f6\u8be5\u8282\u70b9\u4e0d\u7206\u53d1\u6d2a\u6c34\u7684\u6982\u7387\u7684\u79ef\u3002</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u8003\u8651\u6362\u6839 DP \u3002\u4e0d\u59a8\u8bbe 1 \u53f7\u8282\u70b9\u4e3a\u6839\uff0c\u4ee4 \\(f_i\\) \u4e3a\u5728 \\(i\\) \u7684\u5b50\u6811\u4e2d \\(i\\) \u672a\u906d\u53d7\u6d2a\u6c34\u7684\u6982\u7387\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a \\(f[u]=\\prod_{v\\in son[u]}f[v]+(1-f[v])(1-p)\\) \uff0c\u8bbe \\(g_i\\) \u4e3a \\(i\\) \u672a\u906d\u53d7\u6d2a\u6c34\u7684\u6982\u7387\uff0c\u4ee4 \\(s=\\dfrac{g[u]}{f[v]+(1-f[v])(1-p)}\\) \uff0c\u4e8e\u662f\u53c8\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\(g[v]=f[v](s+(1-s)(1-p))\\) \u3002</p> <p>Tag : \u6982\u7387\u8bba\u3001\u6362\u6839 DP</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_40","title":"\u6f02\u4eae\u59b9\u59b9","text":"<p>\u8003\u8651\u6570\u4f4d DP \u3002\u8bbe \\(f[i][j][k][l][m]\\) \u8868\u793a\u7b2c \\(i\\) \u4f4d\u6570\uff0c\u662f\u5426\u5b58\u5728\u81f3\u5c11 3 \u4e2a\u76f8\u90bb\u7684\u76f8\u540c\u6570\u5b57\u4e3a \\(j\\) \uff0c\u4e0a\u4e00\u4e2a\u6570\u4e3a \\(k\\) \uff0c\u76f8\u90bb\u7684\u76f8\u540c\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a \\(l\\) \uff0c\u662f\u5426\u51fa\u73b0 4 \u548c 8 \u4e3a \\(m\\) \u7684\u65b9\u6848\u6570\uff0c\u7136\u540e\u4eff\u7167 dfs \u8fdb\u884c\u6570\u4f4d DP \u3002</p> <p>Tag : \u6570\u4f4d DP</p>","tags":["ACM"]},{"location":"Algorithm/ACM%E7%AE%97%E6%B3%95%E5%AE%9E%E8%B7%B5/#_41","title":"\u732b\u5496","text":"<p>\u5f88\u663e\u7136\u662f\u72b6\u538b DP \uff0c\u8bbe \\(f[i][j]\\) \u4e3a\u8003\u8651\u524d \\(i\\) \u884c\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u884c\u7684\u72b6\u6001\u4e3a \\(j\\) \u7684\u65b9\u6848\u6570\u7136\u540e\u8fdb\u884c\u72b6\u6001\u8f6c\u79fb\u5373\u53ef\u3002</p> <p>Tag : \u72b6\u538b DP</p>","tags":["ACM"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/","title":"\u53cc\u5411\u641c\u7d22\u603b\u7ed3","text":"<p>\u53cc\u5411\u641c\u7d22\u4e3b\u8981\u5206\u4e3a\u300c\u53cc\u5411\u540c\u65f6\u641c\u7d22\u300d\u548c \u300cmeet in the middle\u300d \u4e24\u79cd\u7b97\u6cd5\u3002</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_1","title":"\u53cc\u5411\u540c\u65f6\u641c\u7d22","text":"<p>\u53cc\u5411\u540c\u65f6\u641c\u7d22\u7b97\u6cd5\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u7ed9\u51fa\u4e86\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u5355\u6b21\u641c\u7d22\u7684\u4ee3\u4ef7\u4e0d\u5927\uff0c\u540c\u65f6\u9898\u76ee\u4e2d\u5bf9\u7b54\u6848\u7684\u8def\u5f84\u5177\u6709\u4e00\u5b9a\u9650\u5236\u800c\u5bfc\u81f4\u6bcf\u6b21\u90fd\u66b4\u529b\u641c\u7d22\u6765\u5bfb\u627e\u4e00\u6761\u5408\u6cd5\u8def\u5f84\u7684\u4ee3\u4ef7\u8fc7\u9ad8\u7684\u95ee\u9898\u3002</p> <p>\u987e\u540d\u601d\u4e49\uff0c\u53cc\u5411\u540c\u65f6\u641c\u7d22\u5c31\u662f\u4ece\u8d77\u70b9\u548c\u7ec8\u70b9\u540c\u65f6\u51fa\u53d1\uff0c\u5404\u81ea\u641c\u7d22\u5230\u8fbe\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5408\u6cd5\u8def\u5f84\uff0c\u7136\u540e\u6839\u636e\u9650\u5236\u7edf\u5408\u4e8c\u8005\u7684\u72b6\u6001\u6765\u5f97\u5230\u7b54\u6848\u3002</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#luogu-p5195knights-of-ni-s","title":"\u300cLuogu P5195\u300dKnights of Ni S","text":"<p>\u8d1d\u831c\u9047\u5230\u4e86\u4e00\u4ef6\u5f88\u9ebb\u70e6\u7684\u4e8b\uff1a\u5979\u65e0\u610f\u4e2d\u95ef\u5165\u4e86\u68ee\u6797\u91cc\u7684\u4e00\u5ea7\u57ce\u5821\uff0c\u5982\u679c\u5979\u60f3\u56de\u5bb6\uff0c\u5c31\u5fc5\u987b\u7a7f\u8fc7\u8fd9\u7247\u7531\u9a91\u58eb\u4eec\u5b88\u62a4\u7740\u7684\u68ee\u6797\u3002\u4e3a\u4e86\u80fd\u5b89\u5168\u5730\u79bb\u5f00\uff0c\u8d1d\u831c\u4e0d\u5f97\u4e0d\u6309\u7167\u9a91\u58eb\u4eec\u7684\u8981\u6c42\uff0c\u5728\u68ee\u6797\u5bfb\u627e\u4e00\u79cd\u7279\u6b8a\u7684\u704c\u6728\u5e76\u5e26\u4e00\u68f5\u7ed9\u4ed6\u4eec\u3002</p> <p>\u5f53\u7136\uff0c\u8d1d\u831c\u60f3\u65e9\u70b9\u79bb\u5f00\u8fd9\u53ef\u6015\u7684\u68ee\u6797\uff0c\u4e8e\u662f\u5979\u5fc5\u987b\u5c3d\u5feb\u5b8c\u6210\u9a91\u58eb\u4eec\u7ed9\u7684\u4efb\u52a1\uff0c\u8d1d\u831c\u968f\u8eab\u5e26\u7740\u8fd9\u7247\u68ee\u6797\u7684\u5730\u56fe\uff0c\u5730\u56fe\u4e0a\u7684\u68ee\u6797\u88ab\u653e\u5165\u4e86\u76f4\u89d2\u5750\u6807\u7cfb\uff0c\u5e76\u6309 $x,y $ \u8f74\u4e0a\u7684\u5355\u4f4d\u957f\u5ea6\u5212\u5206\u6210\u4e86 $ W \\times H  ( 1 \\leq W,H \\leq 1000 )$ \u5757\uff0c\u8d1d\u831c\u5728\u5730\u56fe\u4e0a\u67e5\u51fa\u4e86\u5979\u81ea\u5df1\u4ee5\u53ca\u9a91\u58eb\u4eec\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5f53\u7136\u5730\u56fe\u4e0a\u4e5f\u6807\u6ce8\u4e86\u5979\u6240\u9700\u8981\u7684\u704c\u6728\u751f\u957f\u7684\u533a\u57df\u3002\u67d0\u4e9b\u533a\u57df\u662f\u4e0d\u80fd\u901a\u8fc7\u7684\uff08\u6bd4\u5982\u8bf4\u6cbc\u6cfd\u5730\uff0c\u60ac\u5d16\uff0c\u4ee5\u53ca\u98df\u4eba\u5154\u7684\u805a\u5c45\u5730\uff09\u3002\u5728\u6ca1\u6709\u627e\u5230\u704c\u6728\u4e4b\u524d\uff0c\u8d1d\u831c\u4e0d\u80fd\u901a\u8fc7\u9a91\u58eb\u4eec\u6240\u5728\u7684\u90a3\u4e2a\u533a\u57df\uff0c\u4e3a\u4e86\u786e\u4fdd\u5979\u81ea\u5df1\u4e0d\u4f1a\u8ff7\u8def\uff0c\u8d1d\u831c\u53ea\u5411\u6b63\u5317\u3001\u6b63\u4e1c\u3001\u6b63\u5357\u3001\u6b63\u897f\u56db\u4e2a\u65b9\u5411\u79fb\u52a8\uff08\u6ce8\u610f\uff0c\u5979\u4e0d\u4f1a\u8d70\u5bf9\u89d2\u7ebf\uff09\u3002\u5979\u8981\u8d70\u6574\u6574\u4e00\u5929\uff0c\u624d\u80fd\u4ece\u67d0\u5757\u533a\u57df\u8d70\u5230\u4e0e\u5b83\u76f8\u90bb\u7684\u90a3\u5757\u533a\u57df\u3002</p> <p>\u8d1d\u831c\u5e0c\u671b\u4f60\u80fd\u5e2e\u5979\u8ba1\u7b97\u4e00\u4e0b\uff0c\u5979\u6700\u5c11\u9700\u8981\u591a\u5c11\u5929\u624d\u53ef\u8131\u79bb\u8fd9\u53ef\u6015\u7684\u5730\u65b9\uff1f\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u8d1d\u831c\u4e00\u5b9a\u80fd\u5b8c\u6210\u9a91\u58eb\u7684\u4efb\u52a1\u3002</p> <p>Luogu</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_2","title":"\u5206\u6790","text":"<p>\u5df2\u77e5\u8d77\u70b9\uff08\u8d1d\u831c\u7684\u4f4d\u7f6e\uff09\u548c\u7ec8\u70b9\uff08\u9a91\u58eb\u4eec\u7684\u4f4d\u7f6e\uff09\uff0c\u4ece\u67d0\u70b9\u641c\u7d22\u5230\u5176\u4ed6\u6240\u6709\u70b9\u5e76\u4e14\u9014\u4e2d\u4e0d\u7ecf\u8fc7\u67d0\u4e9b\u533a\u57df\u7684\u8ddd\u79bb\u7684\u65f6\u95f4\u662f \\(\\mathcal{O}(WH)\\) \u7684\uff0c\u4ee3\u4ef7\u8f83\u5c0f\uff0c\u540c\u65f6\u9898\u76ee\u8981\u6c42\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u4e0a\u4e00\u5b9a\u8981\u7ecf\u8fc7\u704c\u6728\uff0c\u5982\u679c\u641c\u7d22\u627e\u5230\u8d77\u70b9\u5230\u704c\u6728\u7684\u8def\u5f84\uff0c\u7136\u540e\u518d\u679a\u4e3e\u4ece\u6bcf\u4e2a\u704c\u6728\u8d70\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u7684\u65f6\u95f4\u662f \\(\\mathcal{O}(W^2H^2)\\) \u7684\uff0c\u663e\u7136\u4ee3\u4ef7\u592a\u5927\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u9053\u53cc\u5411\u540c\u65f6\u641c\u7d22\u677f\u5b50\u9898\u3002</p> <p>\u6211\u4eec\u4ece\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u51fa\u53d1\uff0c\u641c\u7d22\u5230\u8fbe\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u77ed\u5408\u6cd5\u8def\u5f84\uff0c\u7136\u540e\u518d\u679a\u4e3e\u6bcf\u4e00\u4e2a\u704c\u6728\u7684\u4f4d\u7f6e\uff0c\u7b54\u6848\u5c31\u662f\u5bf9\u4ed6\u4eec\u5206\u522b\u5230\u5f53\u524d\u704c\u6728\u7684\u6700\u77ed\u8def\u4e4b\u548c\u53d6 \\(\\min\\) \u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\mathcal{O}(WH)\\)</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_3","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint gi() {\n    int x = 0, f = 1; char c = getchar();\n    for ( ; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n    for ( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    return x * f;\n}\n\nconst int N = 1005;\n\nstruct hlw {\n    int x, y;\n} st, ed, wd[N * N];\n\nint n, m, tot, ans;\nint g[N][N], dis[2][N][N];\nint dx[4] = {0, 0, 1, -1}, dy[4] = {1, -1, 0, 0};\nbool vis[2][N][N];\n\nvoid bfs(int op) {\n    queue &lt;hlw&gt; q;\n    if (op) {\n        q.push(ed), vis[op][ed.x][ed.y] = 1;\n        dis[op][ed.x][ed.y] = 0;\n    }\n    else {\n        q.push(st), vis[op][st.x][st.y] = 1;\n        dis[op][st.x][st.y] = 0;\n    }\n    while (!q.empty()) {\n        hlw u = q.front();\n        q.pop();\n        for (int i = 0; i &lt; 4; ++i) {\n            hlw v = (hlw){u.x + dx[i], u.y + dy[i]};\n            if (v.x &lt;= 0 || v.y &lt;= 0 || v.x &gt; n || v.y &gt; m) continue;\n            if (g[v.x][v.y] == 1 || vis[op][v.x][v.y]) continue;\n            if (dis[op][v.x][v.y] &gt; dis[op][u.x][u.y] + 1) {\n                dis[op][v.x][v.y] = dis[op][u.x][u.y] + 1;\n                if (!vis[op][v.x][v.y]) q.push(v), vis[op][v.x][v.y] = 1;\n            }\n        }\n    }\n}\n\nint main() {\n    m = gi(), n = gi();\n    for (int i = 1; i &lt;= n; ++i)\n        for (int j = 1; j &lt;= m; ++j) {\n            g[i][j] = gi();\n            if (g[i][j] == 2) st.x = i, st.y = j;\n            else if (g[i][j] == 3) ed.x = i, ed.y = j;\n            else if (g[i][j] == 4) wd[++tot].x = i, wd[tot].y = j;\n        }\n    memset(dis, 0x3f3f3f3f, sizeof(dis));\n    bfs(0), bfs(1);\n    ans = N * N;\n    for (int i = 1; i &lt;= tot; ++i)\n        ans = min(ans, dis[0][wd[i].x][wd[i].y] + dis[1][wd[i].x][wd[i].y]);\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#meet-in-the-middle","title":"meet in the middle","text":"<p>\u5982\u679c\u9898\u4e2d\u7684\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u4f46\u662f\u53c8\u6ca1\u5c0f\u5230\u53ef\u4ee5\u76f4\u63a5\u66b4\u641c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528 meet in the middle \u7b97\u6cd5\u3002</p> <p>meet in the middle \u5176\u5b9e\u4e5f\u662f\u76f4\u63a5\u66b4\u641c\uff0c\u4f46\u662f\u5b83\u53ea\u66b4\u529b\u679a\u4e3e \\(\\frac{n}{2}\\) \u7684\u6570\u636e\u53ef\u80fd\u4ea7\u751f\u7684\u72b6\u6001\uff0c\u9996\u5148\u679a\u4e3e\u524d\u4e00\u534a\u7684\u6570\u636e\uff0c\u8bb0\u5f55\u5230\u8fbe\u6bcf\u79cd\u72b6\u6001\u7684\u4ee3\u4ef7\uff0c\u7136\u540e\u518d\u641c\u7d22\u540e\u4e00\u534a\u7684\u6570\u636e\uff0c\u627e\u5230\u4e00\u79cd\u72b6\u6001\u65f6\u8981\u6ce8\u610f\u7edf\u5408\u524d\u4e00\u534a\u7684\u72b6\u6001\u770b\u80fd\u5426\u4ea7\u751f\u7b54\u6848\u3002</p> <p>\u5047\u5982\u539f\u6765\u76f4\u63a5\u66b4\u641c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(2^n)\\) \uff0c\u90a3\u4e48\u4f7f\u7528 meet in the middle \u4e4b\u540e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4fbf\u662f \\(\\mathcal{O}(2^{\\frac{n}{2}})\\) \u7684\u3002</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#luogu-p2962lights-g","title":"\u300cLuogu P2962\u300dLights G","text":"<p>\u7ed9\u51fa\u4e00\u5f20 \\(n\\) \u4e2a\u70b9 \\(m\\) \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u7684\u521d\u59cb\u72b6\u6001\u90fd\u4e3a \\(0\\)\u3002  </p> <p>\u4f60\u53ef\u4ee5\u64cd\u4f5c\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u64cd\u4f5c\u7ed3\u675f\u540e\u8be5\u70b9\u4ee5\u53ca\u6240\u6709\u4e0e\u8be5\u70b9\u76f8\u90bb\u7684\u70b9\u7684\u72b6\u6001\u90fd\u4f1a\u6539\u53d8\uff0c\u7531 \\(0\\) \u53d8\u6210 \\(1\\) \u6216\u7531 \\(1\\) \u53d8\u6210 \\(0\\)\u3002  </p> <p>\u4f60\u9700\u8981\u6c42\u51fa\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u4f7f\u5f97\u5728\u6240\u6709\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\u6240\u6709 \\(n\\) \u4e2a\u70b9\u7684\u72b6\u6001\u90fd\u662f \\(1\\)\u3002 </p> <p>Luogu</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_4","title":"\u5206\u6790","text":"<p>\u5bb9\u6613\u9a8c\u8bc1\u5bf9\u4e8e\u4e00\u4e2a\u5f00\u5173\uff0c\u6211\u4eec\u6700\u591a\u6309\u4e0b\u4e00\u6b21\uff0c\u56e0\u6b64\u6bcf\u4e2a\u5f00\u5173\u53ef\u80fd\u7684\u72b6\u6001\u53ea\u6709\u4e24\u79cd\uff1a\u6253\u5f00 or \u4e0d\u6253\u5f00\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u5f00\u5173\u7684\u72b6\u6001\u7136\u540e\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\u7684\u4ee3\u4ef7\u662f\u5f88\u660e\u663e\u7684\u6307\u6570\u7ea7\u522b\u7684\uff0c\u4ece\u8fd9\u4e00\u70b9\u4e0a\u770b\u5c31\u5e94\u8be5\u60f3\u5230\u662f\u5426\u80fd\u7528 meet in the middle \u89e3\u51b3\u3002</p> <p>\u518d\u770b\u6570\u636e\u8303\u56f4 \\(n\\le 35\\) \u5f88\u5c0f\uff0c\u4f46\u662f\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\u7684\u4ee3\u4ef7\u6700\u5927\u4e5f\u8fd8\u662f \\(2^{35}\\) \u7684\u627f\u53d7\u4e0d\u8d77\uff0c\u4f46\u662f\u5982\u679c\u628a\u5b83\u6298\u534a\u4e4b\u540e\u5c31\u662f \\(2^{17.5}\\) \u7684\uff0c\u8fd9\u5b8c\u5168\u5728\u627f\u53d7\u8303\u56f4\u4e4b\u5185\uff0c\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u7528 meet in the middle \u66b4\u641c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\mathcal{O}(n\\cdot 2^{\\frac{n}{2}})\\) </p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_5","title":"\u4ee3\u7801","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long ll;\n\nint n, m, ans;\nll a[40];\n\nmap &lt;ll, int&gt; f;//\u679a\u4e3e\u6bcf\u4e2a\u5f00\u5173\u662f\u5426\u6253\u5f00\u4e4b\u540e\u5f97\u5230\u6240\u6709\u5f00\u5173\u5bf9\u5e94\u7684\u72b6\u6001\u4e0e\u5bf9\u5e94\u6253\u5f00\u5f00\u5173\u7684\u6570\u91cf\u7684\u6620\u5c04\n\nint main() {\n    int u, v;\n    cin &gt;&gt; n &gt;&gt; m;\n    for (int i = 0; i &lt; n; ++i) a[i] |= (1ll &lt;&lt; i);\n    for (int i = 1; i &lt;= m; ++i) {\n        cin &gt;&gt; u &gt;&gt; v;\n        u--, v--;\n        a[u] |= (1ll &lt;&lt; v), a[v] |= (1ll &lt;&lt; u);\n    }\n    for (ll i = 0; i &lt; (1ll &lt;&lt; (n / 2)); ++i) {//\u524d n/2 \u4e2a\u5f00\u5173\u662f\u5426\u6253\u5f00\n        ll tmp = 0;//\u5f53\u524d\u6240\u6709\u5f00\u5173\u7684\u72b6\u6001\n        int cnt = 0;//\u6253\u5f00\u7684\u5f00\u5173\u6570\uff0c\u5176\u5b9e\u5c31\u662f i \u4e2d 1 \u7684\u4e2a\u6570\n        for (int j = 0; j &lt; n / 2; ++j)\n            if ((i &gt;&gt; j) &amp; 1) tmp ^= a[j], cnt++;\n        if (f.count(tmp)) f[tmp] = min(f[tmp], cnt);\n        else f[tmp] = cnt;\n    }\n    ans = n;\n    for (ll i = 0; i &lt; (1ll &lt;&lt; (n - n / 2)); ++i) {\n        ll tmp = 0;\n        int cnt = 0;\n        for (int j = 0; j &lt; n - n / 2; ++j)\n            if ((i &gt;&gt; j) &amp; 1) tmp ^= a[j + n / 2], cnt++;\n        if (f.count(tmp ^ ((1ll &lt;&lt; n) - 1))) ans = min(f[tmp ^ ((1ll &lt;&lt; n) - 1)] + cnt, ans);\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n</code></pre>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#luogu-p3067balanced-cow-subsets-g","title":"\u300cLuogu P3067\u300dBalanced Cow Subsets G","text":"<p>\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5976\u725b\u96c6\u5408 \\(S\\) \u662f\u5e73\u8861\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li>\\(S\\) \u975e\u7a7a\u3002</li> <li>\\(S\\) \u53ef\u4ee5\u88ab\u5212\u5206\u6210\u4e24\u4e2a\u96c6\u5408 \\(A,B\\)\uff0c\u6ee1\u8db3 \\(A\\) \u91cc\u7684\u5976\u725b\u4ea7\u5976\u91cf\u4e4b\u548c\u7b49\u4e8e \\(B\\) \u91cc\u7684\u5976\u725b\u4ea7\u5976\u91cf\u4e4b\u548c\u3002\u5212\u5206\u7684\u542b\u4e49\u662f\uff0c\\(A\\cup B=S\\) \u4e14 \\(A\\cap B=\\varnothing\\)\u3002</li> </ul> <p>\u73b0\u5728\u7ed9\u5b9a\u5927\u5c0f\u4e3a \\(n\\) \u7684\u5976\u725b\u96c6\u5408 \\(S\\)\uff0c\u8be2\u95ee\u5b83\u6709\u591a\u5c11\u4e2a\u5b50\u96c6\u662f\u5e73\u8861\u7684\u3002\u8bf7\u6ce8\u610f\uff0c\u5976\u725b\u4e4b\u95f4\u662f\u4e92\u4e0d\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u4ea7\u5976\u91cf\u53ef\u80fd\u51fa\u73b0\u76f8\u540c\u3002 </p> <p>Luogu</p>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_6","title":"\u5206\u6790","text":"<p>\u6bcf\u4e2a\u5143\u7d20\u6709\u4e09\u79cd\u53ef\u80fd\uff1a\u4e0d\u5728\u5b50\u96c6\u4e2d\u3001\u5728\u5b50\u96c6\u4e2d\u88ab\u5206\u5230\u96c6\u5408 \\(A\\) \u3001\u5728\u5b50\u96c6\u4e2d\u88ab\u5206\u5230\u96c6\u5408 \\(B\\) \u3002</p> <p>\u76f4\u63a5\u66b4\u641c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u6837\u4e5f\u662f\u6307\u6570\u7ea7\u4e14\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u800c\u6298\u534a\u641c\u7d22\u4e4b\u540e\u5219\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4f7f\u7528 meet in the middle \u7b97\u6cd5\u3002</p> <p>\u5f53\u6211\u4eec\u641c\u7d22\u5230\u5143\u7d20 \\(k\\) \u65f6\uff0c\u82e5\u5b83\u4e0d\u5728\u5b50\u96c6\u4e2d\uff0c\u5219\u5f53\u524d\u603b\u4ee3\u4ef7\u4e0d\u53d8\uff1b\u82e5\u5c06\u5b83\u5206\u5230\u96c6\u5408 \\(A\\) \uff0c\u5219\u5c06\u5f53\u524d\u603b\u4ee3\u4ef7\u52a0\u4e0a \\(a[k]\\) \uff1b\u82e5\u5c06\u5b83\u5206\u5230\u96c6\u5408 \\(B\\) \uff0c\u5219\u51cf\u53bb \\(a[k]\\) \u3002\u540c\u65f6\u6211\u4eec\u8fd8\u9700\u8981\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570 status \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u88ab\u9009\u53d6\uff0c\u5e76\u7528 map \u5efa\u7acb cost \u4e0e status \u7684\u6620\u5c04\uff0c\u7531\u4e8e\u540c\u4e00\u4e2a cost \u53ef\u80fd\u7531\u591a\u4e2a\uff08\u6700\u591a 1023 \u4e2a\uff09 status \u4ea7\u751f\u800c\u4e14\u6298\u534a\u4e4b\u540e status \u7684\u503c\u6700\u5927\u4e3a 1023 \uff0c\u6240\u4ee5 map \u7684\u7b2c\u4e8c\u7ef4\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a bitset \u6765\u5c06\u7b2c status \u4f4d\u6807\u4e3a 1 \u8868\u793a cost \u53ef\u4ee5\u7531\u5b83\u4ea7\u751f\u3002</p> <p>\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u53bb\u91cd\u3002\u5728\u641c\u7d22\u7b2c \\(\\frac{n}{2}\\sim n\\) \u4e2a\u5143\u7d20\u65f6\uff0c\u5982\u679c\u524d \\(\\frac{n}{2}\\) \u4e2a\u5143\u7d20\u53ef\u4ee5\u8fbe\u5230\u603b\u4ee3\u4ef7\u4e3a cost \u7684\u7ed3\u679c\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e2d\u7684\u6bcf\u4e00\u79cd\u72b6\u6001\u90fd\u53ef\u4ee5\u548c\u5f53\u524d\u72b6\u6001\u7ec4\u5408\u6210\u4e00\u4e2a\u5b50\u96c6\u3002\u4f46\u662f\u540c\u6837\u7684 status \u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u88ab\u5206\u5230\u7684\u96c6\u5408\u4e0d\u540c\u6240\u4ee5\u4e5f\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684 cost \uff0c\u800c\u8fd9\u4e0d\u540c\u7684 cost \u4e0b\u53ef\u80fd\u5bf9\u5e94\u4e86\u524d \\(\\frac{n}{2}\\) \u4e2a\u5143\u7d20\u4ea7\u751f\u7684\u540c\u4e00\u72b6\u6001\uff0c\u4ed6\u4eec\u7edf\u5408\u4e4b\u540e\u7684\u5b50\u96c6\u663e\u7136\u5728\u524d\u9762\u5df2\u7ecf\u88ab\u7edf\u8ba1\u8fc7\u4e86\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u91cd\u590d\u3002</p> <p>\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u5efa\u4e00\u4e2a\u518d\u5efa 1023 \u4e2a\u540d\u4e3a vis \u7684 bitset \uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001 status \u4e0e\u524d \\(\\frac{n}{2}\\) \u4e2a\u5143\u7d20\u4ea7\u751f\u7684\u67d0\u79cd\u72b6\u6001 statusLast \u7ec4\u5408\u8fc7\uff0c\u5c31\u5c06 vis[status] \u7684\u7b2c statusLast \u4f4d\u6807\u4e3a 1 \uff0c\u5728\u7edf\u8ba1\u7b54\u6848\u4e4b\u524d\u8fdb\u884c\u53bb\u91cd\u3002</p> <p>\u4e00\u70b9\u5410\u69fd\uff1a</p> <p>\u6211\u505a\u7684\u65f6\u5019\u4eff\u7167\u524d\u4e00\u9898\u76f4\u63a5\u7528 3 \u8fdb\u5236\u679a\u4e3e\u6bcf\u4e2a\u5143\u7d20\u7684\u72b6\u6001\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u4f46\u662f\u6211 sb \u6ca1\u6ce8\u610f\u770b\u9898\uff0c\u6700\u540e\u7edf\u8ba1\u7684\u662f\u4e0d\u540c\u5e73\u8861\u5b50\u96c6\u4e0b\u5206\u6210 \\(A,B\\) \u4e24\u4e2a\u96c6\u5408\u7684\u603b\u65b9\u6848\u6570\uff0c\u800c\u4e14\u4e00\u4e9b\u7ec6\u8282\u4e0a\u6ca1\u8003\u8651\u5230\uff0c\u6bd4\u5982\u540e \\(\\frac{n}{2}\\) \u4e2a\u5143\u7d20\u5206\u6210\u7684 \\(A,B\\) \u96c6\u5408\u53ef\u4ee5\u5206\u522b\u6574\u5408\u8fdb\u524d \\(\\frac{n}{2}\\) \u4e2a\u5143\u7d20\u5206\u6210\u7684 \\(A,B\\) \u96c6\u5408\u5185\uff0c\u8fd9\u6837\u4f1a\u4ea7\u751f\u65b0\u7684 \\(A,B\\) \u96c6\u5408\uff0c\u5f53\u7136\uff0c\u4ea7\u751f\u7684\u5b50\u96c6\u662f\u4e00\u6837\u7684\u3002</p> <p>\u8fd9\u4e0b\u8be5\u5e86\u5e78\u5f53\u65f6\u56e0\u4e3a\u4e0d\u60f3\u8c03\u4ee3\u7801\u53bb\u770b\u4e86\u9898\u89e3\u53d1\u73b0\u770b\u534a\u5929\u770b\u4e0d\u660e\u767d\u89c9\u5f97\u9898\u89e3\u6709\u95ee\u9898\u7136\u540e\u518d\u770b\u4e00\u904d\u95ee\u9898\u624d\u53d1\u73b0\u6211\u628a\u95ee\u9898\u641e\u9519\u4e86\uff08</p> <p>\u4e00\u4e9b\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a</p> <ol> <li>\u5c06\u5206\u5230\u4e0d\u540c\u96c6\u5408\u7684\u60c5\u51b5\u5bf9\u5f53\u524d\u4ee3\u4ef7\u7684\u5f71\u54cd\u5206\u522b\u8bb0\u4e3a \\(+a[k]\\) \u548c \\(-a[k]\\) \u7684\u65b9\u5f0f\u663e\u7136\u8981\u6bd4\u6211\u7684\u5206\u522b\u7528 sum1 \u548c sum2 \u6765\u8bb0\u5f55 \\(A,B\\) \u96c6\u5408\u7684\u4ee3\u4ef7\u8981\u65b9\u4fbf\u7edf\u5408\u5f97\u591a</li> <li>\u5728 dfs \u524d\u5c06\u5143\u7d20 sort \u4e00\u904d\u53ef\u4ee5\u5feb\u5f88\u591a</li> <li>\u8fd9\u91cc\u5728\u6570\u636e\u91cf\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u76f4\u63a5\u5c06\u8bb0\u5f55\u72b6\u6001\u7684\u4e8c\u8fdb\u5236\u6570\u4f5c\u4e3a\u8bb0\u5f55\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u67d0\u4e00\u4f4d\u6765\u5b58\u50a8\u6570\u636e\uff0c\u9ad8\u6548\u65b9\u4fbf</li> <li>\u6700\u540e\u53bb\u91cd\u7684\u65b9\u5f0f\u5f88\u5999\uff1a<code>tmp &amp;= ~vis[status]</code></li> </ol>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/%E5%8F%8C%E5%90%91%E6%90%9C%E7%B4%A2/#_7","title":"\u4ee3\u7801","text":"<p>100pts \u6b63\u89e3</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 10;\n\nint n, ans;\nint a[25];\n\nbitset &lt;1 &lt;&lt; N&gt; vis[1 &lt;&lt; N];\nmap &lt;int, bitset &lt;1 &lt;&lt; N&gt; &gt; f;\n\nvoid dfs1(int k, int cost, int status) {\n    if (k == n / 2) {\n        f[cost].set(status);\n        return;\n    }\n    dfs1(k + 1, cost, status);\n    dfs1(k + 1, cost + a[k], status | (1 &lt;&lt; k));\n    dfs1(k + 1, cost - a[k], status | (1 &lt;&lt; k));\n}\n\nvoid dfs2(int k, int cost, int status) {\n    if (k == n) {\n        if (f.count(cost)) {\n            bitset &lt; 1 &lt;&lt; N &gt; tmp(f[cost]);\n            tmp &amp;= ~vis[status];\n            ans += tmp.count();\n            vis[status] |= tmp;\n        }\n        return;\n    }\n    dfs2(k + 1, cost, status);\n    dfs2(k + 1, cost + a[k], status | (1 &lt;&lt; (k - n / 2)));\n    dfs2(k + 1, cost - a[k], status | (1 &lt;&lt; (k - n / 2)));\n}\n\nint main() {\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;a[i]);\n    sort(a, a + n);\n    dfs1(0, 0, 0);\n    dfs2(n / 2, 0, 0);\n    printf(\"%d\", ans - 1);//\u8bb0\u5f97 -1 \u53bb\u6389\u5b50\u96c6\u4e3a\u7a7a\u96c6\u7684\u60c5\u51b5\n    return 0;\n}\n</code></pre> <p>\u6211\u7684\u641e\u9519\u4e86\u9898\u76ee + \u7ec6\u8282\u6ca1\u5904\u7406\u597d\u5374\u8fd8\u6df7\u5230\u4e86 19pts \u7684\u4ee3\u7801</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\ntypedef long long ll;\n\nint n;\nll ans;\nint a[25], sta[25];\n\nmap &lt;int, int&gt; f;\nmap &lt;ll, bool&gt; vis;\n\nint main() {\n    ll ans1 = 0, ans2 = 0, ans3 = 0, ans4 = 0;\n    scanf(\"%d\", &amp;n);\n    for (int i = 0; i &lt; n; ++i) scanf(\"%d\", &amp;a[i]);\n    for (ll i = 0; i &lt; pow(3, n / 2); ++i) {\n        ll tmp = i, now = 0;\n        int sum1 = 0, sum2 = 0;\n        for (int k = 0; k &lt; n / 2; ++k) {\n            sta[k] = tmp % 3, tmp /= 3;\n            //printf(\"sta[%d]=%d\\n\", k, sta[k]);\n            if (sta[k]) now |= (1 &lt;&lt; k);\n            if (sta[k] == 1) sum1 += a[k];\n            else if (sta[k] == 2) sum2 += a[k];\n        }\n        //printf(\"now:%lld sum1:%d sum2:%d\\n\", now, sum1, sum2);\n        //if (vis[now]) puts(\"visited\");\n        //else puts(\"unvisited\");\n        if (sum1 == sum2 &amp;&amp; sum1) ans1++;\n        if (!vis[now]) f[sum1 + sum2]++, vis[now] = 1;\n    }\n    ans1 /= 2;\n    for (ll i = 0; i &lt; pow(3, n - n / 2); ++i) {\n        ll tmp = i, now = 0;\n        int sum1 = 0, sum2 = 0;\n        for (int k = n / 2; k &lt; n; ++k) {\n            sta[k] = tmp % 3, tmp /= 3;\n            if (sta[k]) now |= (1 &lt;&lt; k);\n            if (sta[k] == 1) sum1 += a[k];\n            else if (sta[k] == 2) sum2 += a[k];\n        }\n        if (sum1 == sum2 &amp;&amp; sum1) ans2++;\n        if ((sum1 + sum2 != 0) &amp;&amp; !vis[now]) ans3 += f[sum1 + sum2], vis[now] = 1;\n        if (sum1 + sum2 != 0) {\n            if (f.count(sum1 - sum2)) ans4 += f[sum1 - sum2];\n            if (f.count(sum2 - sum1)) ans4 += f[sum2 - sum1];\n        }\n    }\n    ans2 /= 2, ans4 /= 2;\n    ans = ans1 + ans2 + ans3 + ans4;\n    //printf(\"ans1:%lld ans2:%lld ans3:%lld ans4:%lld\\n\", ans1, ans2, ans3, ans4);\n    printf(\"%lld\", ans);\n    return 0;\n}\n</code></pre>","tags":["Search","\u53cc\u5411\u540c\u65f6\u641c\u7d22"]},{"location":"Algorithm/Math/Miller%20Rabin/","title":"Miller Rabin","text":"<p>Miller Rabin \u5b9a\u7406\u662f\u4e00\u79cd\u7d20\u6027\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u5176\u4e2d\u5229\u7528\u5230\u4e86\u7d20\u6570\u7684\u4e00\u4e9b\u6027\u8d28\uff0c\u8fd8\u6709\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u4ee5\u53ca\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/Miller%20Rabin/#_1","title":"\u7d20\u6570\u7684\u4e00\u4e9b\u6027\u8d28","text":"<p>\u6211\u4eec\u9996\u5148\u770b\u4e00\u4e0b\u7d20\u6570\u7684 4 \u6761\u6709\u8da3\u7684\u6027\u8d28\uff1a</p> <ol> <li> <p>\u4e0d\u5b58\u5728\u6700\u5927\u7684\u7d20\u6570    \u5047\u8bbe\u6700\u5927\u7684\u7d20\u6570\u4e3a \\(p_k\\) \uff0c\u5c0f\u4e8e\u5b83\u7684\u6240\u6709\u7d20\u6570\u4e3a \\(p_1, p_2, \\dots, p_{k-1}\\) \uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u6570 \\(p_1p_2\\cdots p_k+1\\) \uff0c\u5b83\u4e0d\u80fd\u88ab \\(p_1, \\cdots, p_k\\) \u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6570\u6574\u9664\uff0c\u6545\u5b83\u662f\u7d20\u6570\uff0c\u53c8\u5b83\u663e\u7136\u5927\u4e8e \\(p_k\\) \uff0c\u4e8e\u662f\u53ef\u4ee5\u5f97\u51fa\u4e0d\u5b58\u5728\u6700\u5927\u7684\u7d20\u6570\u3002</p> </li> <li> <p>\u76f8\u90bb\u7d20\u6570\u4e4b\u95f4\u7684\u95f4\u9694\u4efb\u610f\u5927</p> </li> </ol> <p>\u8003\u8651\u6570 \\(a\\) \u6ee1\u8db3 \\(0\\le a\\le n\\) \uff0c\u90a3\u4e48 \\(n!+a\\) \u4e00\u5b9a\u80fd\u88ab \\(a\\) \u6574\u9664\uff0c\u56e0\u6b64\u957f\u5ea6\u4e3a \\(n\\) \u7684\u6570\u5217 \\(n!,n!+2, \\cdots, n!+n\\) \uff08\u6ce8\u610f\u6ca1\u6709 \\(n!+1\\) \uff09\u90fd\u662f\u5408\u6570\uff0c\u7531\u4e8e \\(n\\) \u53ef\u4ee5\u4efb\u610f\u5927\uff0c\u6240\u4ee5\u76f8\u90bb\u7d20\u6570\u4e4b\u95f4\u7684\u95f4\u9694\u53ef\u4ee5\u4efb\u610f\u5927\u3002</p> <ol> <li>\u6240\u6709\u5927\u4e8e 2 \u7684\u7d20\u6570\u90fd\u53ef\u4ee5\u88ab\u552f\u4e00\u7684\u8868\u793a\u4e3a\u4e24\u4e2a\u5e73\u65b9\u6570\u4e4b\u5dee</li> </ol> <p>\u6240\u6709\u5927\u4e8e 2 \u7684\u7d20\u6570\u90fd\u662f\u5947\u6570\uff0c\u5047\u8bbe\u5b83\u662f \\(2n+1\\) \uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a \\((n+1)^2-n^2\\) \u3002</p> <p>\u4e0b\u9762\u8bc1\u660e\u8fd9\u79cd\u8868\u793a\u6cd5\u662f\u552f\u4e00\u7684\u3002\u5047\u8bbe\u7d20\u6570 \\(p\\) \u53ef\u4ee5\u88ab\u8868\u793a\u4e3a \\(a^2-b^2\\) \uff0c\u5373 \\(p=(a+b)(a-b)\\) \uff0c\u56e0\u4e3a \\(p\\) \u662f\u7d20\u6570\uff0c\u6240\u4ee5\u53ea\u80fd\u6709 \\(a-b=1,a+b=p\\) \uff0c\u5f97\u8bc1\u3002</p> <ol> <li>\u5f53 \\(n\\) \u4e3a\u5927\u4e8e 2 \u7684\u6574\u6570\u65f6\uff0c\\(2^n+1\\) \u548c \\(2^n-1\\) \u4e24\u4e2a\u6570\u4e2d\uff0c\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6570\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u6570\u4e00\u5b9a\u662f\u5408\u6570</li> </ol> <p>\u663e\u7136 \\(2^n\\nmid 3(n&gt;2)\\) \uff0c\u5982\u679c \\(2^n\\equiv 1\\pmod{3}\\) \uff0c\u90a3\u4e48 \\((2^n-1)\\mid 3\\) \u4e3a\u5408\u6570\uff1b\u5982\u679c \\(2^n\\equiv 2\\pmod{3}\\) \uff0c\u90a3\u4e48 \\((2^n+1)\\mid 3\\) \u4e3a\u5408\u6570\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/Miller%20Rabin/#fermat","title":"Fermat \u7d20\u6027\u6d4b\u8bd5","text":"<p>\u56de\u987e\u4e00\u4e0b\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a</p> <p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570\uff0c\u4e14 \\(a\\bot p\\) \uff0c\u90a3\u4e48\u6709 \\(a^{p-1}\\equiv 1\\pmod{p}\\) \u3002</p> <p>\u6839\u636e\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u80fd\u4e0d\u80fd\u5229\u7528\u5b83\u7684\u9006\u5b9a\u7406\u6765\u5224\u5b9a\u7d20\u6570\u5462\uff1f\u5f88\u9057\u61be\uff0c\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u9006\u5b9a\u7406\u662f\u4f2a\u7684\u3002</p> <p>\u4eba\u4eec\u7528\u4f2a\u7d20\u6570\u6765\u79f0\u547c\u6ee1\u8db3\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u5408\u6570\uff0c\u5982\u679c\u662f\u4ee4 \\(a=2\\) \u7684\u60c5\u51b5\u4e0b\u7684\u4f2a\u7d20\u6570\uff0c\u5c31\u53eb\u5b83\u4ee5 2 \u4e3a\u5e95\u7684\u4f2a\u7d20\u6570\uff0c\u5176\u4ed6\u53d6\u503c\u60c5\u51b5\u4e0b\u7684\u540d\u5b57\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u4e3a\u4e86\u63d0\u9ad8\u8fd9\u4e2a\u7d20\u6570\u6d4b\u8bd5\u7684\u6b63\u786e\u7387\uff0c\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u591a\u6b21\u9009\u53d6 \\(a\\) \u6765\u5224\u65ad\uff0c\u4e00\u65e6\u4e0d\u6ee1\u8db3\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5c31\u5224\u5b9a\u5b83\u4e3a\u5408\u6570\uff0c\u663e\u7136\u6b63\u786e\u7387\u968f \\(a\\) \u7684\u9009\u53d6\u6b21\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002\u6211\u4eec\u968f\u673a\u9009\u53d6\u82e5\u5e72\u4e2a\u5c0f\u4e8e \\(n\\) \u7684\u6570\u6765\u4f5c\u4e3a \\(a\\) \u7684\u53d6\u503c\u8fdb\u884c\u6d4b\u8bd5\uff0c\u8fd9\u4e2a\u5224\u5b9a\u7d20\u6570\u7684\u65b9\u6cd5\u5c31\u662f\u6240\u8c13\u7684 Fermat \u7d20\u6027\u6d4b\u8bd5\u3002</p> <p>\u7136\u800c\u4e0d\u5e78\u7684\u662f\uff0c\u5b58\u5728 Carmichael \u6570\uff0c\u5b83\u4eec\u6ee1\u8db3\u5f53 \\(a\\) \u53d6\u904d\u6240\u6709\u5c0f\u4e8e \\(n\\) \u7684\u6570\u65f6\u90fd\u6ee1\u8db3\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u81ea\u8eab\u5374\u662f\u5408\u6570\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/Miller%20Rabin/#_2","title":"\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406","text":"<p>\u8981\u7ee7\u7eed\u52a0\u5f3a\u7d20\u6570\u7684\u5224\u5b9a\u65b9\u6cd5\uff0c\u5c31\u8f6e\u5230\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u51fa\u573a\u4e86\u3002</p> <p>\u5f53\u9700\u8981\u5224\u5b9a\u7684\u6570 \\(n&gt;2\\) \u65f6\uff0c\u663e\u7136 \\(n-1\\) \u662f\u5076\u6570\uff0c\u5982\u679c\u5c0f\u4e8e \\(n\\) \u7684\u6570 \\(a\\) \u6ee1\u8db3 \\(a^{n-1}\\equiv 1\\pmod{n}\\) \uff0c\u90a3\u4e48 \\(a^{n-1}-1=(a^{\\frac{n-1}{2}}+1)(a^{\\frac{n-1}{2}}-1)\\mid n\\) \uff0c\u82e5 \\(n\\) \u4e3a\u7d20\u6570\uff0c\u5219 \\(a^{\\frac{n-1}{2}}\\equiv n-1\\pmod{n}\\) \u6216 \\(a^{\\frac{n-1}{2}}\\equiv n+1\\pmod{n}\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u6027\u8d28\u6765\u7ee7\u7eed\u52a0\u5f3a\u7d20\u6570\u7684\u5224\u5b9a\u3002</p> <p>\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u5c31\u662f\u6307\uff0c\u5982\u679c \\(p\\) \u662f\u5947\u7d20\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6b63\u6574\u6570 \\(x\\) \uff0c\u82e5 \\(x^2\\equiv1\\pmod{p}\\) \uff0c\u5219 \\(x\\equiv1\\pmod{p}\\) \u6216 \\(x\\equiv p-1\\pmod{p}\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/Miller%20Rabin/#miller-rabin","title":"Miller Rabin \u7d20\u6027\u6d4b\u8bd5","text":"<p>Miller Rabin \u7d20\u6027\u6d4b\u8bd5\u7efc\u5408\u4ee5\u4e0a\u65b9\u6cd5\uff0c\u4e0d\u65ad\u63d0\u53d6 \\(n-1\\) \u7684\u56e0\u5b50 2 \uff0c\u5c06 \\(n-1\\) \u8868\u793a\u4e3a \\(d\\times2^r\\) \u7684\u5f62\u5f0f\uff08\u5176\u4e2d \\(d\\) \u4e3a\u5947\u6570\uff09\uff0c\u9996\u5148\u5f97\u5230 \\(a^d\\) \uff0c\u7136\u540e\u4e0d\u65ad\u5c06\u5176\u5e73\u65b9\u76f4\u5230\u53d8\u4e3a \\(a^{n-1}\\) \uff0c\u6bcf\u6b21\u5e73\u65b9\u540e\u9996\u5148\u6d4b\u8bd5\u662f\u5426\u6ee1\u8db3 \\((a^{d\\times 2^s})^2\\equiv 1\\pmod{n}\\) \uff0c\u770b\u662f\u5426\u6ee1\u8db3\u4e8c\u6b21\u63a2\u6d4b\u5b9a\u7406\u7684\u6761\u4ef6\uff0c\u5982\u679c\u6ee1\u8db3\u5c31\u7acb\u5373\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5b83\u7684\u7ed3\u8bba\uff0c\u4e00\u65e6\u4e0d\u6ee1\u8db3\u5c31\u5224\u65ad \\(n\\) \u4e3a\u5408\u6570\u3002</p> <p>Miller Rabin \u7d20\u6027\u6d4b\u8bd5\u4e5f\u662f\u4e0d\u786e\u5b9a\u7b97\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u4ee5 \\(a\\) \u4e3a\u5e95\u7684\u6ee1\u8db3 Miller Rabin \u7d20\u6027\u6d4b\u8bd5\u7684\u5408\u6570\u79f0\u4e3a\u4ee5 \\(a\\) \u4e3a\u5e95\u7684\u5f3a\u4f2a\u7d20\u6570\u3002\u7b2c\u4e00\u4e2a\u4ee5 2 \u4e3a\u5e95\u7684\u5f3a\u4f2a\u7d20\u6570\u662f 2047 \uff0c\u800c\u7b2c\u4e00\u4e2a\u4ee5 2 \u548c 3 \u4e3a\u5e95\u7684\u5f3a\u4f2a\u7d20\u6570\u5219\u5927\u5230\u4e86 1 373 653 \u3002</p> <p>\u5bf9\u4e8e\u5927\u6570\u7684 Miller Rabin \u6d4b\u8bd5\uff0c\u5e95\u6570\u4e00\u822c\u662f\u968f\u673a\u9009\u53d6\uff0c\u4f46\u662f\u5f53\u5f85\u6d4b\u6570\u4e0d\u592a\u5927\u65f6\uff0c\u5e95\u6570\u7684\u9009\u53d6\u5c31\u6709\u4e00\u4e9b\u6280\u5de7\u4e86\u3002\u5982\uff0c\u5f53 \\(n&lt;4,759,123,141\\) \u65f6\uff0c\u9009\u53d6 \\(2,7,61\\) \u8fdb\u884c\u6d4b\u8bd5\u5373\u53ef\u3002\u968f\u673a\u9009\u53d6 \\(k\\) \u4e2a\u5e95\u6570\u8fdb\u884c\u6d4b\u8bd5\u7684\u5931\u8bef\u7387\u5927\u6982\u662f \\(4^{-k}\\) \u3002</p> <p>\u53e6\u5916\u8fd8\u6709\u7b2c\u4e00\u4e2a\u591a\u9879\u5f0f\u7684\u3001\u786e\u5b9a\u7684\u3001\u65e0\u9700\u5176\u5b83\u6761\u4ef6\u7684\u7d20\u6027\u5224\u65ad\u7b97\u6cd5 AKS \u7b97\u6cd5\uff0c\u4e4b\u540e\u6709\u7a7a\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0b\u3002</p> <p>Miller Rabin \u7684\u4e00\u70b9\u5c0f\u4f18\u5316\uff1a\u5f53\u67d0\u4e00\u6b21\u5e73\u65b9\u540e\u5f97\u5230 \\(a^{d\\times 2^s}\\equiv n-1\\pmod{n}\\) \uff0c\u90a3\u4e48\u4e4b\u540e\u6240\u6709\u7684\u5e73\u65b9\u64cd\u4f5c\u90fd\u4f1a\u5f97\u5230 1 \uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6b64\u6b21\u6d4b\u8bd5\u3002</p> <pre><code>bool MillerRabin(int n, int t = 8) {\n    if (n &lt; 3 || n % 2 == 0) return false;  // n = 2 \u65f6\u867d\u7136\u662f\u7d20\u6570\uff0c\u4f46\u662f\u4e0d\u6ee1\u8db3 MillerRabin \u7d20\u6027\u6d4b\u8bd5\u7684\u6761\u4ef6\n    int d = n - 1, r = 0;\n    while (d % 2 == 0) d &gt;&gt;= 1, r++;\n    while (t--) {   // t \u4e3a\u6d4b\u8bd5\u6b21\u6570\uff0c\u6700\u597d\u5927\u4e8e 8\n        int a = rand() % (n - 2) + 2, s;    //\u4e3a\u4e86\u4e0d\u8ba9 a = 1 \uff0c\u6240\u4ee5\u6700\u540e\u662f +2\n        int u = qpow(a, d, n);\n        if (u == 1) continue;   //\u6b64\u65f6\u540e\u9762\u5e73\u65b9\u603b\u4f1a\u5f97\u5230 1 \uff0c\u5fc5\u7136\u6ee1\u8db3\u6d4b\u8bd5\uff0c\u76f4\u63a5\u8df3\u8fc7\n        for (s = 0; s &lt; r; ++s) {\n            if (u == n - 1) break;  //\u5c0f\u4f18\u5316\n            u = (long long)u * u % n;\n        }\n        if (s == r) return false;   //\u5982\u679c\u5b58\u5728\u4e00\u6b21\u5e73\u65b9\u540e\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0cs \u4f1a\u589e\u52a0\u5230 r \uff0c\u8bf4\u660e\u6b64\u6b21\u6d4b\u8bd5\u5931\u8d25\n    }\n    return true;\n}\n</code></pre> <p>\u53c2\u8003\uff1a</p> <p>\u6570\u8bba\u90e8\u5206\u7b2c\u4e00\u8282\uff1a\u7d20\u6570\u4e0e\u7d20\u6027\u6d4b\u8bd5 | Matrix67: The Aha Moments</p> <p>\u7d20\u6570 - OI Wiki (oi-wiki.org)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/gcd%20%26%26%20lcm/","title":"gcd && lcm \u590d\u4e60\u7b14\u8bb0","text":"","tags":["Math","gcd","lcm","Number-Theory"]},{"location":"Algorithm/Math/gcd%20%26%26%20lcm/#_1","title":"\u6700\u5927\u516c\u7ea6\u6570","text":"<p>GCD \uff0c\u5373 Greatest Common Divisor .</p> <p>\u4e00\u7ec4\u6574\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u5c31\u662f\u6307\u8fd9\u7ec4\u6574\u6570\u7684\u6700\u5927\u7684\u516c\u5171\u7ea6\u6570 .</p> <p>\u600e\u4e48\u5168\u662f\u5e9f\u8bdd</p> <p>\u90a3\u4e48\u8981\u5982\u4f55\u6c42\u89e3\u4e00\u7ec4\u6574\u6570\u7684 gcd \u634f\uff1f</p> <p>\u6211\u4eec\u5148\u8003\u8651\u4e24\u4e2a\u6570 \\(a,b\\) \u7684\u60c5\u51b5 .</p> <p>\u4ee4 \\(a=bq+r(q,r\\in\\mathbb{N})\\) \uff0c\u5219 \\(a \\bmod b=r\\in[0,b)\\) \uff0c\u5047\u8bbe \\(d=\\gcd(a,b)\\) \uff0c\u6709 \\(d\\mid a,~d\\mid b\\) \uff0c\u56e0\u6b64 \\(d\\mid r\\)\uff0c\u4e8e\u662f\u6211\u4eec\u53d1\u73b0 \\(\\gcd(b,r)=d=\\gcd(a,b)\\) .</p> <p>\u7efc\u4e0a\uff0c\\(\\gcd (a,b)=\\gcd(b,a\\bmod b)\\) \uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u4e0d\u65ad\u9012\u5f52\u6c42\u89e3\u76f4\u5230 \\(b=0\\) \uff0c\u8fd9\u65f6\u5019\u7684 a \u5c31\u662f gcd \u4e86.</p> <pre><code>int gcd(int a, int b) {\n    return b ? gcd(b, a % b) : a;\n}\n</code></pre> <p>\u5f53\u6574\u6570\u7684\u6570\u91cf\u5927\u4e8e 2 \u65f6\uff0c\u6211\u4eec\u6c42\u89e3\u524d\u4e24\u4e2a\u6570\u7684 gcd \u4e0e\u540e\u4e00\u4e2a\u6570\u7684 gcd \uff0c\u4fbf\u5f97\u5230\u524d 3 \u4e2a\u6570\u7684 gcd \uff0c\u4f9d\u6b21\u8fdb\u884c\u4e0b\u53bb\uff0c\u6700\u540e\u5f97\u5230\u7684\u4fbf\u662f\u8fd9 n \u4e2a\u6570\u7684 gcd .</p> <p>\u5bf9\u4e86\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u662f\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5 .</p>","tags":["Math","gcd","lcm","Number-Theory"]},{"location":"Algorithm/Math/gcd%20%26%26%20lcm/#_2","title":"\u6700\u5c0f\u516c\u500d\u6570","text":"<p>LCM \uff0c\u5373 Least Common Multiple .</p> <p>\u4e00\u7ec4\u6574\u6570\u7684\u516c\u500d\u6570\uff0c\u662f\u6307\u540c\u65f6\u662f\u8fd9\u7ec4\u6570\u4e2d\u6bcf\u4e00\u4e2a\u6570\u7684\u500d\u6570\u7684\u6570 . 0 \u662f\u4efb\u610f\u4e00\u7ec4\u6574\u6570\u7684\u516c\u500d\u6570 .</p> <p>\u4e00\u7ec4\u6574\u6570\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u662f\u6307\u6240\u6709\u6b63\u7684\u516c\u500d\u6570\u91cc\u9762\uff0c\u6700\u5c0f\u7684\u4e00\u4e2a\u6570 .</p> <p>\u8bed\u8a00\u8d2b\u7620\uff0c\u76f4\u63a5\u84af oi-wiki \u4e0a\u7684\u4e86</p> <p>\u540c\u6837\u4e5f\u662f\u5148\u8003\u8651\u4e24\u4e2a\u6570 \\(a,b\\) \u7684\u60c5\u51b5 .</p> <p>\u5c06 \\(a,b\\) \u5199\u6210\u7d20\u6570\u7684\u4e58\u79ef\u7684\u5f62\u5f0f .</p> \\[a=p_1^{k_{a_1}}p_2^{k_{a_2}}\\cdots p_n^{k_{a_{n}}}\\] \\[b=p_1^{k_{b_1}}p_2^{k_{b_2}}\\cdots p_n^{k_{b_{n}}}\\] <p>\u6839\u636e\u5b9a\u4e49\u53ef\u77e5 \uff0c</p> \\[\\operatorname{lcm}(a,b)=p_1^{\\min(k_{a_1},k_{b_1})}p_2^{\\min(k_{a_2},k_{b_2})}\\cdots p_n^{\\min(k_{a_n},k_{b_{n}})}\\] \\[\\gcd(a,b)=p_1^{\\max(k_{a_1},k_{b_1})}p_2^{\\max(k_{a_2},k_{b_2})}\\cdots p_n^{\\max(k_{a_n},k_{b_{n}})}\\] <p>\u800c \\(\\max(a,b)+\\min(a, b)=a+b\\) \uff0c\u56e0\u6b64 \\(\\gcd(a,b)\\times\\operatorname{lcm}(a,b)=a\\times b\\) .</p> <p>\u6240\u4ee5 \\(\\operatorname{lcm}(a,b)=\\dfrac{a\\times b}{\\gcd(a,b)}\\) .</p> <p>\u5bf9\u4e8e\u591a\u4e8e 2 \u7684\u6574\u6570\u6570\u76ee\u7684\u60c5\u51b5\uff0c\u5904\u7406\u65b9\u6cd5\u548c gcd \u662f\u4e00\u6837\u7684 .</p>","tags":["Math","gcd","lcm","Number-Theory"]},{"location":"Algorithm/Math/gcd%20%26%26%20lcm/#_3","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff08Extended Euclidean algorithm, EXGCD\uff09\u5e38\u7528\u6765\u6c42\u89e3 \\(ax+by=\\gcd(a,b)\\) \u7684\u4e00\u7ec4\u53ef\u884c\u89e3\u7684\u60c5\u51b5 .</p> <p>\u6211\u4eec\u8bbe \\(ax_1+by_1=\\gcd(a,b)\\) \uff0c\\(bx_2+(a\\bmod b)y_2=\\gcd(b,a\\bmod b)\\) .</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b \\(x_1,y_1\\) \u548c \\(x_2,y_2\\) \u4e4b\u95f4\u7684\u5173\u7cfb .</p> <p>\u5c06 \\(a\\bmod b=a-\\lfloor\\frac{a}{b}\\rfloor\\times b\\) \u548c \\(\\gcd(a,b)=\\gcd(b,a\\bmod b)\\) \u5e26\u5165\u7b2c\u4e8c\u4e2a\u65b9\u7a0b\uff0c\u5f97\u5230</p> \\[bx_2+ay_2-\\lfloor\\frac{a}{b}\\rfloor\\times b\\times y_2=\\gcd(a,b)\\] <p>\u6574\u7406\u5f97\u5230</p> \\[ay_2+b(x_2-\\lfloor\\frac{a}{b}\\rfloor y_2)=\\gcd(a, b)\\] <p>\u4e0e\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u6bd4\u5bf9\u53ef\u4ee5\u53d1\u73b0 \\(x_1=y_2,y_1=x_2-\\lfloor\\frac{a}{b}\\rfloor y_2\\) .</p> <p>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4e0d\u65ad\u9012\u5f52\u6c42\u89e3 \\(\\gcd(a,b)\\) \u76f4\u5230 \\(b=0\\) \uff0c\u663e\u7136\u6b64\u65f6\u7684 \\(x_n=1\\) \uff0c\u7136\u540e\u8003\u8651 \\(x_{n-1},y_{n-1}\\) \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u7684 \\(b=\\gcd(a,b)\\) \uff0c\u800c \\(a\\not= 0\\) \uff0c\u6240\u4ee5 \\(x_{n-1}=y_n=0\\) \uff0c\u7efc\u4e0a\uff0c\u6211\u4eec\u5f97\u5230\u8fb9\u754c\u60c5\u51b5 \\(x_n=1,y_n=0\\) \u540c\u65f6\u6c42\u5f97\u4e86 \\(\\gcd(a,b)\\) .</p> <p>\u6700\u540e\u6211\u4eec\u5728\u4e0d\u65ad\u56de\u6eaf\u65f6\u4fee\u6539 \\(x,y\\) \u7684\u503c\u5373\u53ef\u5f97\u5230 \\(ax+by=\\gcd(a, b)\\) \u7684\u4e00\u7ec4\u53ef\u884c\u89e3 .</p> <pre><code>int exgcd(int a, int b, int &amp;x, int &amp;y) {\n    if (!b) {\n        x = 1, y = 0;\n        return a;\n    }\n    int ret = exgcd(b, a % b, x, y);\n    int tmp = x;\n    x = y, y = tmp - a / b * y;\n    return ret;\n}\n</code></pre>","tags":["Math","gcd","lcm","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/","title":"\u57fa\u7840\u6570\u8bba\u590d\u4e60","text":"<p>\u6570\u8bba\uff0c\u662f\u4e00\u95e8\u7814\u7a76\u6574\u6570\u7684\u7eaf\u6570\u5b66\u7684\u5206\u652f\uff0c\u800c\u6574\u6570\u7684\u57fa\u672c\u5143\u7d20\u662f\u7d20\u6570(\u4e5f\u79f0\u8d28\u6570)\uff0c\u6240\u4ee5\u6570\u8bba\u7684\u672c\u8d28\u662f\u5bf9\u7d20\u6570\u6027\u8d28\u7684\u7814\u7a76\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_1","title":"\u7d20\u6570","text":"<p>\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\u5c31\u4e0d\u5199\u4e86.</p> <p>\u6ce8\u610f\u4e24\u70b9:</p> <ol> <li>0\u30011\u3001\u8d1f\u6574\u6570\u65e2\u4e0d\u662f\u7d20\u6570\u4e5f\u4e0d\u662f\u5408\u6570.</li> <li>\\(\\pi(n)\\) \u8868\u793a\u4e0d\u5927\u4e8e \\(n\\) \u7684\u7d20\u6570\u4e2a\u6570, \u6709\u5982\u4e0b\u8fd1\u4f3c\u5173\u7cfb \\(\\pi(n)\\sim\\dfrac{n}{\\ln{n}}\\) .</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_2","title":"\u7d20\u6570\u5224\u5b9a","text":"<p>\u5982\u4f55\u5224\u5b9a\u6b63\u6574\u6570 \\(n\\) \u662f\u5426\u662f\u7d20\u6570?</p> <p>\u5f88\u5bb9\u6613\u60f3\u5230\u7528\u6bcf\u4e00\u4e2a\u5c0f\u4e8e \\(n\\) \u4e14\u5927\u4e8e \\(1\\) \u7684\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f \\(n\\) \u7684\u7ea6\u6570, \u82e5\u90fd\u4e0d\u662f, \u5219 \\(n\\) \u4e3a\u7d20\u6570, \u5426\u5219\u4e3a\u5408\u6570.</p> <p>\u8fd9\u4e2a\u66b4\u529b\u7b97\u6cd5\u662f \\(\\mathcal{O}(n)\\) \u7684, \u4f46\u662f\u6211\u4eec\u8003\u8651\u5230, \u82e5\u6570 \\(p\\) \u4e3a \\(n\\) \u7684\u7ea6\u6570, \u5219 \\(\\frac{n}{p}\\) \u4e5f\u662f \\(n\\) \u7684\u7ea6\u6570, \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u7528 \\(2\\sim \\sqrt{n}\\) \u7684\u6570\u6765\u5224\u5b9a\u5373\u53ef, \u4e8e\u662f\u4f18\u5316\u4e00\u4e0b\u6211\u4eec\u5f97\u5230\u4e00\u4e2a \\(\\mathcal{O}(\\sqrt{n})\\) \u7684\u7b97\u6cd5.</p> <pre><code>bool isPrime(int n) {\n  if (n == 1) return false;\n  if (n == 2) return true;\n  for (int i = 2; i * i &lt;= n; ++i)\n    if (n % i == 0) return false;\n  return true;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_3","title":"\u6574\u6570\u60df\u4e00\u5206\u89e3\u5b9a\u7406","text":"<p>\u82e5\u6574\u6570 \\(n\\ge2\\) , \u90a3\u4e48 \\(n\\) \u4e00\u5b9a\u53ef\u4ee5\u60df\u4e00\u5730\u8868\u793a\u4e3a\u82e5\u5e72\u7d20\u6570\u7684\u4e58\u79ef, \u5f62\u5982</p> \\[n=p_1^{r_1}p_2^{r_2}\\cdots p_k^{r_k}(p_i\u4e3a\u7d20\u6570, r_i\\ge0)\\] <pre><code>vector &lt;int&gt; factor(int n) {\n  vector &lt;int&gt; ret;\n  for (int i = 2; i * i &lt;= n; ++i)\n    while (n % i == 0) {\n      ret.push_back(i);\n      n /= i;\n    }\n  if (n &gt; 1) ret.push_back(n);\n  return ret;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_4","title":"\u7d20\u6570\u7b5b\u6cd5","text":"<p>\u4e3b\u8981\u662f\u57c3\u6c0f\u7b5b\u6cd5\u548c\u6b27\u62c9\u7b5b\u6cd5.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#eratosthenes","title":"Eratosthenes \u7b5b\u6cd5","text":"<p>Eratosthenes \u7b5b\u6cd5\u53ef\u4ee5\u5feb\u901f\u5217\u4e3e\u51fa\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u6240\u6709\u7d20\u6570.</p> <p>\u4e00\u4e2a\u5408\u6570\u4e00\u5b9a\u53ef\u4ee5\u5199\u6210 \\(p\\cdot x\\) \u7684\u5f62\u5f0f, \u5176\u4e2d \\(p\\) \u4e3a\u7d20\u6570, \\(x\\) \u4e3a\u6574\u6570, \u56e0\u6b64\u5bf9\u6bcf\u4e00\u4e2a \\(p\\) , \u6211\u4eec\u4ece\u5c0f\u5230\u5927\u679a\u4e3e \\(x\\) , \u7b5b\u6389\u76f8\u5e94\u7684 \\(p\\cdot x\\) \u5373\u53ef.</p> <p>\u4e00\u70b9\u5c0f\u6539\u8fdb: \u5f53 \\(x&lt;p\\) \u65f6, \\(p\\cdot x\\) \u4e00\u5b9a\u88ab \\(x\\) \u7684\u7d20\u56e0\u5b50\u7b5b\u8fc7\u4e00\u904d, \u6240\u4ee5\u6211\u4eec\u679a\u4e3e \\(x\\) \u65f6\u4ece \\(x=p\\) \u5f00\u59cb\u679a\u4e3e.</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(\\frac{n}{2}+\\frac{n}{3}+\\frac{n}{5}+\\cdots)=\\mathcal{O}(n\\log{\\log{n}})\\)</p> <pre><code>bool isprime[N];\n\nvoid Eratos(int n) {\n  memset(isprime, 1, sizeof isprime);\n  isprime[0] = isprime[1] = 0;\n  for (int i = 2; i * i &lt;= n; ++i)\n    if (isprime[i]) {\n      for (int j = i * i; j &lt;= n; j += i)\n        isprime[j] = 0;\n    }\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_5","title":"\u4f8b\u9898","text":"<p>\u300cPOJ 2689\u300dPrime Distance</p> <p>\u7531\u4e8e\u8fd9\u91cc \\(L,R\\) \u7684\u8303\u56f4\u5f88\u5927, \u66b4\u529b\u7b5b\u5b8c\u4e4b\u540e\u679a\u4e3e\u6c42\u89e3\u80af\u5b9a\u4f1a T , \u4f46\u662f \\(R-L\\le 10^6\\) \u7684\u8303\u56f4\u5374\u662f\u5728\u6211\u4eec\u7684\u627f\u53d7\u8303\u56f4\u4e4b\u5185\u7684.</p> <p>\u4e8e\u662f\u6211\u4eec\u8003\u8651\u7528 \\(1\\sim n\\) \u8fd9\u4e00\u5c0f\u8303\u56f4\u7684\u7d20\u6570\u7b5b\u6389 \\(L\\sim R\\) \u4e4b\u95f4\u7684\u5408\u6570.</p> <p>\u5047\u8bbe\u6570 \\(k\\in[L, R]\\) , \u5176\u4e2d \\(k\\) \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u4e3a \\(p\\) , \u6ee1\u8db3 \\(p&gt;n\\) , \u5219 \\(k=p\\cdot x\\) , \u82e5 \\(x&lt;p\\) , \u5219 \\(k\\) \u4e00\u5b9a\u5b58\u5728\u5c0f\u4e8e \\(p\\) \u7684\u8d28\u56e0\u6570, \u77db\u76fe, \u6545\u800c \\(x\\ge p\\) , \u4e5f\u5c31\u662f\u8bf4, \u4f1a\u88ab\u6f0f\u7b5b\u7684\u6570 \\(k\\) \u6ee1\u8db3 \\(k\\ge p^2\\) , \u4e3a\u4e86\u4fdd\u8bc1\u7b97\u6cd5\u7684\u6b63\u786e\u6027, \u6211\u4eec\u8981\u8ba9\u8fd9\u6837\u7684\u6570\u843d\u5728 \\([L, R]\\) \u5916, \u4e5f\u5c31\u662f\u8ba9 \\(p^2&gt;R\\) , \u4e8e\u662f\u6211\u4eec\u4ee4 \\(n=\\sqrt{R}\\) \u5373\u53ef.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_6","title":"\u7b5b\u6cd5\u4f18\u5316\u8d28\u56e0\u6570\u5206\u89e3","text":"<p>\u5229\u7528\u57c3\u6c0f\u7b5b\u6cd5\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u7d20\u56e0\u6570\u5206\u89e3, \u53ea\u8981\u5728\u7b5b\u7684\u65f6\u5019\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u6570\u7684\u6700\u5c0f\u7d20\u56e0\u6570\u5373\u53ef.</p> <pre><code>bool isprime[N];\nint minfac[N];\n\nvoid Eratos(int n) {\n  memset(isprime, 1, sizeof isprime);\n  isprime[0] = isprime[1] = 0;\n  for (int i = 1; i &lt;= n; ++i) minfac[i] = i;\n  for (int i = 2; i * i &lt;= n; ++i)\n    if (isprime[i]) {\n      for (int j = i * i; j &lt;= n; j += i) {\n        isprime[j] = 0;\n        if (minfac[j] == j) minfac[j] = i;\n      }\n    }\n}\n\nvector &lt;int&gt; factor(int n) {\n  vector &lt;int&gt; ret;\n  while (n &gt; 1) {\n    ret.push_back(minfac[n]);\n    n /= minfac[n];\n  }\n  return ret;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#euler","title":"Euler \u7b5b\u6cd5","text":"<p>\u5728\u57c3\u6c0f\u7b5b\u4e2d, 30 \u8fd9\u4e2a\u6570\u88ab \\(p=2,3,5\\) \u5206\u522b\u7b5b\u4e86\u4e09\u6b21, \u9020\u6210\u4e86\u91cd\u590d, \u5982\u679c\u6211\u4eec\u80fd\u8ba9\u6bcf\u4e2a\u6570\u53ea\u88ab\u5b83\u6700\u5c0f\u7684\u7d20\u56e0\u6570\u7b5b, \u5c31\u80fd\u505a\u5230 \\(\\mathcal{O}(n)\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6.</p> <p>\u5728 Euler \u7b5b\u6cd5\u4e2d, \u6211\u4eec\u4ece \\(2\\sim n\\) \u679a\u4e3e\u6bcf\u4e00\u4e2a\u6570 \\(i\\) , \u82e5 \\(i\\) \u662f\u7d20\u6570, \u5219\u52a0\u5165\u7d20\u6570\u8868\u4e2d, \u7136\u540e\u6211\u4eec\u518d\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u524d\u9762\u7684\u7d20\u6570 \\(prime[j]\\) , \u7b5b\u6389 \\(i\\cdot prime[j]\\) , \u5f53 \\(prime[j]\\) \u662f \\(i\\) \u7684\u4e00\u4e2a\u7d20\u56e0\u6570\u65f6, \u90a3\u4e48\u540e\u9762\u518d\u7ee7\u7eed\u679a\u4e3e\u5230\u7684\u7d20\u6570\u4e00\u5b9a\u4e0d\u662f\u6240\u7b5b\u7684\u6570\u7684\u6700\u5c0f\u7d20\u56e0\u6570, \u6bd5\u7adf\u540e\u9762\u7684\u7d20\u6570\u4e00\u5b9a\u5927\u4e8e\u5f53\u524d\u7684 \\(prime[j]\\) , \u6240\u4ee5\u8fd9\u65f6\u53ef\u4ee5\u7ec8\u6b62\u7b5b\u9009.</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(n)\\)</p> <pre><code>int prime[N];\nbool isprime[N];\n\nvoid Euler(int n) {\n  memset(isprime, 1, sizeof isprime);\n  isprime[0] = isprime[1] = 0;\n  for (int i = 2; i &lt;= n; ++i) {\n    if (isprime[i]) prime[++prime[0]] = i;\n    for (int j = 1; j &lt;= prime[0] &amp;&amp; prime[j] * i &lt;= n; ++j) {\n      isprime[i * prime[j]] = 0;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_7","title":"\u7ea6\u6570","text":"","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_8","title":"\u6574\u6570\u60df\u4e00\u5206\u89e3\u5b9a\u7406\u7684\u63a8\u8bba","text":"\\[N=p_1^{r_1}p_2^{r_2}\\cdots p_k^{r_k}\\] <ol> <li>\\(N\\) \u7684\u6b63\u7ea6\u6570\u7684\u4e2a\u6570\u4e3a \\((r_1+1)(r_2+1)\\cdots(r_k+1)=\\prod_{i=1}^k(r_i+1)\\)</li> <li>\\(N\\) \u7684\u7ea6\u6570\u4e2a\u6570\u4e0a\u754c\u4e3a \\(\\sqrt{N}\\)</li> <li>\\(N\\) \u7684\u6240\u6709\u6b63\u7ea6\u6570\u7684\u548c\u4e3a \\((1+p_1+p_1^2+\\cdots+p_1^{r_1})\\cdots(1+p_k+\\cdots+p_k^{r_k})=\\prod_{i=1}^k(\\sum_{j=0}^{r_i}p_i^j)\\)</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(\\sqrt{N})\\)</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_9","title":"\u4f8b\u9898","text":"<p>\u300cLuoggu P1463\u300d\u53cd\u7d20\u6570</p> <p>\u8fd9\u9053\u9898\u53ea\u9700\u8981\u77e5\u9053 \\(1\\sim 2\\cdot 10^9\\) \u5185\u524d 12 \u4e2a\u7d20\u6570\u7684\u79ef\u5c31\u5df2\u7ecf\u8d85\u51fa \\(N\\) \u7684\u8303\u56f4, \u6240\u4ee5\u6253\u4e2a\u8868\u7136\u540e\u76f4\u63a5\u7206\u641c\u5373\u53ef.</p> <p>(\u4e8f\u6211\u60f3\u4e86\u534a\u5929\u8981\u600e\u4e48\u8f6c\u5316, \u5b8c\u5168\u6ca1\u8003\u8651\u53ea\u6709 12 \u4e2a\u7d20\u6570\u4f1a\u88ab\u7528\u5230)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_10","title":"\u6700\u5927\u516c\u7ea6\u6570","text":"<p>\u5de6\u8f6c gcd &amp; lcm \u590d\u4e60\u7b14\u8bb0</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#gcda-b","title":"\u9ad8\u7cbe\u5ea6 \\(\\gcd{(a, b)}\\)","text":"<p>\u66f4\u76f8\u51cf\u635f\u672f\u9002\u7528\u4e8e\u5927\u6574\u6570\u4e0b\u6c42 \\(\\gcd(a, b)\\)</p> <ol> <li>\\(a&lt;b\\) \u65f6, \\(\\gcd(a, b)=\\gcd(b, a)\\)</li> <li>\\(a=b\\) \u65f6, \\(\\gcd(a, b)=a\\)</li> <li>\\(a, b\\) \u540c\u4e3a\u5076\u6570\u65f6, \\(\\gcd(a, b)=2\\gcd(\\frac{a}{2}, \\frac{b}{2})\\)</li> <li>\\(a\\) \u4e3a\u5076\u6570, \\(b\\) \u4e3a\u5947\u6570\u65f6, \\(\\gcd(a, b)=\\gcd(\\frac{a}{2}, b)\\)</li> <li>\\(a\\) \u4e3a\u5947\u6570, \\(b\\) \u4e3a\u5076\u6570\u65f6, \\(\\gcd(a, b)=\\gcd(a, \\frac{b}{2})\\)</li> <li>\\(a, b\\) \u540c\u4e3a\u5947\u6570\u65f6, \\(\\gcd(a, b)=\\gcd(b, a-b)\\)</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_11","title":"\u5bb9\u65a5\u539f\u7406","text":"<p>\u539f\u7406\u5f88\u7b80\u5355, \u8bb0\u4f4f\u4e00\u4e2a\u516c\u5f0f\u5373\u53ef</p> \\[|\\cap A_i|=\\sum_{1\\le i\\le m}|A_i|-\\sum_{1\\le i&lt; j\\le m}|A_i\\cap A_j|+\\sum_{1\\le i&lt;j&lt;k\\le m}|A_i\\cap A_j\\cap A_k|-\\cdots+(-1)^{m+1}\\sum|A_1\\cap A_2\\cap\\cdots\\cap A_m|\\]","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_12","title":"\u9519\u6392\u95ee\u9898","text":"<ol> <li>\u5229\u7528\u5bb9\u65a5\u539f\u7406\u6c42\u89e3</li> </ol> <p>\u4ee4\u96c6\u5408 \\(S\\) \u8868\u793a \\(1,2, \\cdots, n\\) \u7684\u5168\u6392\u5217, \u5219 \\(|S|=n!\\)</p> <p>\u8bbe\u5b50\u96c6 \\(S_i\\) \u8868\u793a \\(i\\) \u6392\u5728\u7b2c \\(i\\) \u4f4d\u7684\u6392\u5217, \u5219 \\(|S_i|=(n-1)!\\)</p> <p>\u540c\u7406, \u8bbe \\(S_{i_1}\\cap S_{i_2}\\cap\\cdots\\cap S_{i_k}\\) \u8868\u793a \\(i_1, i_2, \\cdots, i_k\\) \u8fd9 \\(k\\) \u4e2a\u6570\u6392\u5728\u76f8\u5e94\u4f4d\u7f6e\u7684\u6392\u5217\u6570, \u5219 \\(|S_{i_1}\\cap S_{i_2}\\cap\\cdots\\cap S_{i_k}|=(n-k)!\\)</p> <p>\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e0d\u6392\u5728\u81ea\u5df1\u4f4d\u7f6e\u7684\u6392\u5217\u6570\u4e3a \\(D_n=|\\overline{S_1}\\cap\\overline{S_2}\\cap\\cdots\\cap\\overline{S_n}|=|S|-|S_1\\cup S_2\\cup\\cdots\\cup S_n|\\)</p> <p>\u7531\u5bb9\u65a5\u539f\u7406\u53ef\u5f97</p> <p>\\(\\(D_n=n!(1-\\frac{1}{1!}+\\frac{1}{2!}-\\frac{1}{3!}+\\cdots\\pm\\frac{1}{n!})\\)\\)</p> <ol> <li>\u9012\u63a8\u516c\u5f0f</li> </ol> <p>\u63a8\u5bfc\u8fc7\u7a0b\u5e76\u4e0d\u96be\u60f3, \u61d2\u5f97\u5199\u4e86, \u76f4\u63a5\u4e0a\u516c\u5f0f</p> <p>\\(\\(D_n=(n-1)(D_{n-1}+D_{n-2})\\)\\)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_13","title":"\u6b27\u62c9\u51fd\u6570","text":"<ol> <li>\u82e5 \\(\\gcd{(a, b)}=1\\) , \u5219\u79f0 \\(a, b\\) \u4e92\u8d28(\u4e92\u7d20), \u8bb0\u4f5c \\(a\\bot b\\) </li> <li>\u6b27\u62c9\u51fd\u6570 \\(\\varphi(n)\\) \u5b9a\u4e49\u4e3a \\([1, n]\\) \u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570.</li> <li>\u82e5 \\(n\\) \u4e3a\u7d20\u6570, \u5219 \\(\\varphi(n)=n-1\\)</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_14","title":"\u5bb9\u65a5\u539f\u7406\u6c42\u6b27\u62c9\u51fd\u6570","text":"<p>\u6839\u636e\u6574\u6570\u60df\u4e00\u5206\u89e3\u5b9a\u7406, \u5c06 \\(N\\) \u5206\u89e3\u4e3a</p> \\[N=p_1^{r_1}p_2^{r_2}\\cdots p_k^{r_k}\\] <p>\u8bbe \\([1, n]\\) \u4e2d \\(p_i\\) \u7684\u500d\u6570\u7684\u96c6\u5408\u4e3a \\(A_i\\) , \u5219 \\(|A_i|=\\lfloor \\frac{N}{p_i}\\rfloor\\)</p> <p>\u5bf9\u4e8e \\(p_i\\not=p_j\\) , \u6709 \\(|A_i\\cap A_j|=\\lfloor\\frac{N}{p_ip_j}\\rfloor\\)</p> <p>\u6839\u636e\u5bb9\u65a5\u539f\u7406, </p> \\[\\begin{aligned}\\varphi(N)&amp;=|A|-|\\overline{A_1}\\cup\\overline{A_2}\\cup\\cdots\\cup\\overline{A_k}| \\\\\\ &amp;=N-(\\frac{N}{p_1}+\\frac{N}{p_2}+\\cdots+\\frac{N}{p_k})+(\\frac{N}{p_1p_2}+\\cdots+\\frac{N}{p_1p_k})-\\cdots\\pm\\frac{N}{p_1p_2\\cdots p_k} \\\\\\ &amp;=N(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})\\cdots(1-\\frac{1}{p_k})\\end{aligned}\\]","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_15","title":"\u7d20\u56e0\u6570\u5206\u89e3\u6c42\u6b27\u62c9\u51fd\u6570\u7684\u7b97\u6cd5","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(\\sqrt{n})\\)</p> <pre><code>int euler_phi(int n) {\n  int ret = n;\n  for (int i = 2; i * i &lt;= n; ++i)\n    if (n % i == 0) {\n      ret = ret / i * (i - 1);//\u5148\u9664\u540e\u4e58\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u907f\u514d\u7206 int\n      while (n % i == 0) n /= i;\n    }\n  if (n &gt; 1) ret = ret / n * (n - 1);\n  return ret;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_16","title":"\u57c3\u6c0f\u7b5b\u6cd5\u9884\u5904\u7406\u6b27\u62c9\u51fd\u6570\u503c","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(n\\log{\\log{n}})\\)</p> <pre><code>int phi[N];\n\nvoid euler_phi(int n) {\n  for (int i = 2; i &lt;= n; ++i) phi[i] = i;\n  for (int i = 2; i * i &lt;= n; ++i)\n    if (phi[i] == i) {\n      phi[i] = i - 1;\n      for (int j = i; j &lt;= n; j += i)//\u6ce8\u610f\u8fd9\u91cc j \u7684\u8d77\u70b9\u662f i \u800c\u4e0d\u662f i * i\n        phi[j] = phi[j] / i * (i - 1);\n    }\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_17","title":"\u6b27\u62c9\u51fd\u6570\u7684\u6027\u8d28","text":"<p>\u82e5 \\(a\\bot b\\) , \u5219 \\(\\varphi(a)\\varphi(b)=\\varphi(ab)\\) , \u5373\u6b27\u62c9\u51fd\u6570\u5177\u6709\u79ef\u6027\u51fd\u6570\u7684\u6027\u8d28.</p> <p>\u4e0a\u5f0f\u5206\u522b\u5c06 \\(a, b\\) \u7528\u6574\u6570\u60df\u4e00\u5206\u89e3\u5b9a\u7406\u8868\u793a, \u7136\u540e\u5e26\u5165\u6b27\u62c9\u51fd\u6570\u8ba1\u7b97\u5f0f\u5373\u53ef\u5f97\u5230\u8bc1\u660e.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_18","title":"\u4f8b\u9898","text":"<p>\u300cPOJ 3090\u300dVisible Lattice Points</p> <p>\u8bbe\u67d0\u70b9\u5750\u6807\u4e3a \\((x_0, y_0)\\) , \u82e5\u8be5\u70b9\u80fd\u88ab\u770b\u89c1, \u5219\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u662f\u76f4\u7ebf \\(y=\\frac{y_0}{x_0}x\\) \u4e0a\u8ddd\u79bb\u539f\u70b9\u6700\u8fd1\u7684\u4e00\u4e2a\u6574\u6570\u70b9.</p> <p>\u6211\u4eec\u8bbe\u4e00\u70b9 \\((x_1, y_1)\\) \u6ee1\u8db3 \\(\\frac{y_1}{x_1}=\\frac{y_0}{x_0}, x_1&gt;x_0\\) , \u5219\u8be5\u70b9\u663e\u7136\u4e0d\u53ef\u89c1, \u4ece\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u6211\u4eec\u53ef\u4ee5\u77e5\u9053, \\(x_1, y_1\\) \u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u516c\u7ea6\u6570, \u800c \\(x_0, y_0\\) \u4e0d\u5b58\u5728\u516c\u7ea6\u6570, \u5373 \\(x_0, y_0\\) \u4e92\u8d28, \u56e0\u6b64\u53ef\u89c1\u70b9\u5c31\u662f\u56fe\u4e2d\u6240\u6709\u6ee1\u8db3 \\(x_0, y_0\\) \u4e92\u8d28\u7684\u70b9\u518d\u52a0\u4e0a \\((1, 0), (0, 1), (1, 1)\\) .</p> <p>\u56fa\u5b9a \\(y=y_0\\) , \u5f53 \\(x&lt;y_0\\) \u65f6, \u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u7684\u6570\u91cf\u5c31\u662f \\(\\varphi(y_0)\\) , \u5f53 \\(x&gt;y_0\\) \u65f6, \u5c06\u70b9 \\((x, y_0)\\) \u4ee5 \\(y=x\\) \u5bf9\u79f0\u8fc7\u53bb\u5f97\u5230\u7684\u70b9\u5c31\u662f\u56fa\u5b9a \\(x=x_i\\) \u65f6 \\(y&lt;x_i\\) \u7684\u60c5\u51b5, \u6839\u636e\u5750\u6807\u8f74\u5173\u4e8e \\(y=x\\) \u5bf9\u79f0\u7684\u6027\u8d28, \\(x&lt;y_0\\) \u548c \\(x&gt;y_0\\) \u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u7b54\u6848\u6570\u76f8\u7b49, \u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8003\u8651 \\(x&lt;y_0\\) \u7684\u60c5\u51b5, \u7136\u540e\u4e58 2 \u5373\u53ef.</p> <p>\u6700\u7ec8\u7684\u7b54\u6848\u4e3a: \\(3+2\\cdot\\sum_{i=2}^N \\varphi(i)\\)</p> <p>\u300cLuogu P2303\u300dLongge \u7684\u95ee\u9898</p> <p>\u8003\u8651\u6ee1\u8db3 \\(\\gcd(i, n)=d\\) \u7684 \\(i\\) \u7684\u4e2a\u6570.</p> <p>\u7531 \\(\\gcd(i, n)=d\\) \u53ef\u4ee5\u63a8\u51fa \\(\\gcd(\\frac{i}{d}, \\frac{n}{d})=1\\), \u5373 \\(\\frac{i}{d}, \\frac{n}{d}\\) \u4e92\u8d28, \u53c8 \\(\\frac{i}{d}&lt;\\frac{n}{d}\\) , \u6240\u4ee5\u8fd9\u6837\u7684 \\(\\frac{i}{d}\\) \u7684\u4e2a\u6570\u4e3a \\(\\varphi(\\frac{n}{d})\\) , \u4e5f\u5c31\u662f \\(i\\) \u7684\u4e2a\u6570\u4e3a \\(\\varphi(\\frac{n}{d})\\)</p> <p>\u6240\u4ee5\u7b54\u6848\u4e3a \\(\\sum_{d|n}d\\varphi(\\frac{n}{d})\\)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_19","title":"\u540c\u4f59","text":"","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_20","title":"\u5269\u4f59\u7cfb","text":"<ol> <li>\u5269\u4f59\u7cfb\u6307\u6a21\u6b63\u6574\u6570 \\(n\\) \u7684\u4f59\u6570\u6240\u7ec4\u6210\u7684\u96c6\u5408.</li> <li>\u5b8c\u5168\u5269\u4f59\u7cfb: \u5982\u679c\u4e00\u4e2a\u5269\u4f59\u7cfb\u4e2d\u5305\u542b\u4e86\u8fd9\u4e2a\u6b63\u6574\u6570 \\(n\\) \u6240\u6709\u53ef\u80fd\u7684\u4f59\u6570 (\\(0, 1, \\cdots, n-1\\)) , \u90a3\u4e48\u5c31\u79f0\u5b83\u4e3a\u6a21 \\(n\\) \u7684\u4e00\u4e2a\u5b8c\u5168\u5269\u4f59\u7cfb, \u8bb0\u4f5c \\(Z_n\\) . \u7b80\u5316\u5269\u4f59\u7cfb:\u5b8c\u5168\u5269\u4f59\u7cfb\u4e2d\u4e0e \\(n\\) \u4e92\u8d28\u7684\u6570\u7684\u96c6\u5408, \u8bb0\u4f5c \\(Z_n^*\\) .</li> <li>\u540c\u4f59\u7b49\u4ef7\u7c7b: \\(Z_n\\) \u91cc\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u6240\u6709\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u4e0e\u5b83\u540c\u4f59\u7684\u6574\u6570, \u6211\u4eec\u628a\u6ee1\u8db3\u540c\u4f59\u5173\u7cfb\u7684\u6240\u6709\u6574\u6570\u770b\u4f5c\u4e00\u4e2a\u540c\u4f59\u7b49\u4ef7\u7c7b.</li> <li>\u5728 \\(Z_n\\) \u4e2d\u7684\u56db\u5219\u8fd0\u7b97\u7ed3\u679c\u5168\u90e8\u90fd\u8981\u5728\u6a21 \\(n\\) \u610f\u4e49\u4e0b.</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_21","title":"\u6a21\u8fd0\u7b97","text":"<ol> <li>\u5982\u679c \\(a\\equiv b\\pmod{m}\\) \u4e14\u6709 \\(c\\equiv d\\pmod{m}\\) , \u90a3\u4e48:</li> </ol> <p>\\(\\(a+c\\equiv b+d\\pmod{m}\\)\\)</p> <p>\\(\\(a-c\\equiv b-d\\pmod{m}\\)\\)</p> <p>\\(\\(a\\times c\\equiv b\\times d\\pmod{m}\\)\\)</p> <ol> <li> \\[(a+b)\\bmod m=((a\\bmod m)+(b\\bmod m))\\bmod m\\] </li> </ol> <p>\\(\\((a-b)\\bmod m=((a\\bmod m)-(b\\bmod m)+m)\\bmod m\\)\\)</p> <p>\\(\\((a\\times b)\\bmod m=((a\\bmod m)\\times(b\\bmod m))\\bmod m\\)\\)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_22","title":"\u5feb\u901f\u5e42","text":"<p>\u53f3\u8f6c \u5feb\u901f\u5e42\u590d\u4e60\u7b14\u8bb0</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_23","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406","text":"<p>\u82e5 \\(p\\) \u4e3a\u7d20\u6570, \u4e14 \\(a\\bot p\\) , \u5219 \\(a^{p-1}\\equiv 1\\pmod{p}\\) .</p> <p>\u56e0\u4e3a \\(p\\) \u4e3a\u7d20\u6570, \u5219 \\(2, 3, \\cdots, p-1\\) \u4e0e \\(p\\) \u4e92\u8d28, \u4e14\u4e0d\u5b58\u5728\u4e24\u4e2a\u6570\u6a21 \\(p\\) \u540c\u4f59.</p> <p>\u53c8 \\(a\\bot p\\) , \u6240\u4ee5 \\(a, 2a, 3a, \\cdots, (p-1)a\\) \u4e0e \\(p\\) \u4e92\u8d28, \u4e14\u4e0d\u5b58\u5728\u4e24\u4e2a\u6570\u6a21 \\(p\\) \u540c\u4f59.</p> <p>\u56e0\u6b64 \\(a\\cdot 2a\\cdot 3a\\cdots(p-1)a=(p-1)!a^{p-1}\\) \u4e0e \\(p\\) \u4e92\u8d28, \u4e14 \\((p-1)!a^{p-1}\\equiv (p-1)!\\pmod{p}\\)</p> <p>\u4e24\u8fb9\u540c\u65f6\u9664\u4ee5 \\((p-1)!\\) \u5f97\u5230 \\(a^{p-1}\\equiv 1\\pmod{p}\\)</p> <ol> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f: \u82e5 \\(p\\) \u4e3a\u7d20\u6570, \u5219\u5bf9\u4efb\u610f\u6b63\u6574\u6570 \\(a\\) \u6709 \\(a^p\\equiv a\\pmod{p}\\).</li> <li>\u5e94\u7528: \\(p\\) \u662f\u7d20\u6570, \\(a, p\\) \u4e92\u8d28, \u5219 \\(a^b\\bmod{p}= a^{b\\bmod (p-1)}\\bmod{p}\\) .</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_24","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5224\u65ad\u7d20\u6570","text":"<ol> <li>\u591a\u6b21\u9009\u53d6 \\(a\\) \u6765\u5224\u65ad \\(p\\) \u662f\u5426\u6ee1\u8db3\u8d39\u9a6c\u5c0f\u5b9a\u7406, \u6b63\u786e\u7684\u6982\u7387\u968f \\(a\\) \u9009\u53d6\u7684\u6b21\u6570\u7684\u589e\u52a0\u800c\u589e\u52a0.</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6: \u8bbe\u9009\u53d6 \\(k\\) \u6b21 \\(a\\) , \u6bcf\u6b21\u7528\u5feb\u901f\u5e42\u5904\u7406\u7684\u65f6\u95f4\u4e3a \\(\\mathcal{O}(\\log{p})\\) , \u5219\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\mathcal{O}(k\\log{p})\\) .</li> <li>\u7531\u4e8e\u5b58\u5728 Carmichael \u6570, \u56e0\u6b64\u4e0a\u8ff0\u7b97\u6cd5\u5b58\u5728\u7f3a\u9677, \u5373\u5b58\u5728\u5408\u6570\u6ee1\u8db3\u8d39\u9a6c\u5c0f\u5b9a\u7406.</li> <li>\\(10^4\\) \u4ee5\u5185\u7684 Carmichael \u6570\u6709: 561, 1105, 1729, 2465, 2821, 6601, 8911.</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_25","title":"\u6b27\u62c9\u5b9a\u7406","text":"<p>(\u5728 \\(p\\) \u4e0d\u662f\u7d20\u6570\u7684\u60c5\u51b5\u4e0b, \u53ef\u4ee5\u4f7f\u7528\u6b27\u62c9\u5b9a\u7406)</p> <p>\u5bf9\u4e8e\u548c \\(m\\) \u4e92\u7d20\u7684 \\(a\\) , \u6709: \\(a^{\\varphi(m)}\\equiv1\\pmod{m}\\) .</p> <p>\u8bc1\u660e\u65b9\u6cd5\u548c\u8d39\u9a6c\u5c0f\u5b9a\u7406\u5dee\u4e0d\u591a.</p> <p>\u5f15\u7406: \u82e5 \\(a, m\\) \u4e92\u8d28, \u6ee1\u8db3 \\(a^x\\equiv 1\\pmod{m}\\) \u7684\u6700\u5c0f\u6b63\u6574\u6570 \\(x_0\\) \u662f \\(\\varphi(m)\\) \u7684\u7ea6\u6570.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_26","title":"\u6b27\u62c9\u5b9a\u7406\u7684\u63a8\u8bba","text":"<p>\\(a, m(m&gt;1)\\) \u4e92\u7d20, \u5219\u6709 \\(a^b\\bmod{m}=a^{b\\bmod\\varphi(m)}\\bmod m\\) .</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_27","title":"\u4f8b\u9898","text":"<p>\u300cPOJ 3696\u300dThe Luckiest number</p> <p>\u8bbe \\(n\\) \u4e2a 8 \u8fde\u5728\u4e00\u8d77\u7684\u6b63\u6574\u6570\u4e3a \\(A_n\\) , \u5219 \\(A_n=10A_{n-1}+8\\) , \u5bb9\u6613\u6c42\u5f97 \\(A_n=\\frac{8}{9}(10^n-1)\\) .</p> <p>\u82e5 \\(L|A_n\\) , \u5373 \\(L|\\frac{8}{9}(10^n-1)\\), \u53ef\u4ee5\u5f97\u5230 \\(9L|8(10^n-1)\\) , \u4ee4 \\(d=\\gcd(9L, 8)\\) , \u5219\u6709 \\(\\frac{9L}{d}|(10^n-1)\\)</p> <p>\u4e8e\u662f \\(10^n\\equiv 1\\pmod{\\frac{9L}{d}}\\)</p> <p>\u6839\u636e\u6b27\u62c9\u5b9a\u7406\u7684\u5f15\u7406, \u53ea\u9700\u6c42\u51fa \\(\\varphi(\\frac{9L}{d})\\) , \u7136\u540e\u679a\u4e3e\u5b83\u7684\u7ea6\u6570, \u4e00\u4e00\u9a8c\u8bc1\u540e\u53d6\u6700\u5c0f\u7684\u4e00\u4e2a\u6570\u5373\u53ef.</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(\\sqrt{L}\\log{L})\\)</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_28","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#bezout","title":"\u88f4\u8700\u5b9a\u7406 ( B\u00e9zout \u5b9a\u7406 )","text":"<p>\u5bf9\u4efb\u4f55\u6574\u6570 \\(a, b\\) , \u5173\u4e8e\u672a\u77e5\u6570 \\(x, y\\) \u7684\u7ebf\u6027\u4e0d\u5b9a\u65b9\u7a0b ( \u79f0\u4e3a\u88f4\u8700\u7b49\u5f0f ) \\(ax+by=c\\) \u6709\u6574\u6570\u89e3\u5f53\u4e14\u4ec5\u5f53 \\(c\\) \u4e3a \\(\\gcd{(a, b)}\\) \u7684\u500d\u6570.</p> <p>\u88f4\u8700\u7b49\u5f0f\u6709\u89e3\u65f6\u5fc5\u6709\u65e0\u7a77\u591a\u4e2a\u89e3.</p> <p>\u63a8\u8bba: \\(a, b\\) \u4e92\u7d20\u7b49\u4ef7\u4e8e \\(ax+by=1\\) \u6709\u6574\u6570\u89e3.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_29","title":"\u4f8b\u9898","text":"<p>\u300cBZOJ 1441\u300dMin</p> <p>\u5047\u8bbe \\(S\\) \u5df2\u77e5, \u4e8e\u662f\u6709\u65b9\u7a0b \\(A_1x_1+A_2x_2+\\cdots+A_nx_n=S\\)</p> <p>\u6839\u636e\u88f4\u8700\u5b9a\u7406, \\(S\\) \u5fc5\u7136\u662f \\(\\gcd{(A_1, A_2, \\cdots, A_n)}\\) \u7684\u500d\u6570, \u53d6 \\(S_{min}=\\gcd{(A_1, A_2, \\cdots, A_n)}\\) \u5373\u53ef.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_30","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5","text":"<p>\u89c1 gcd &amp; lcm \u590d\u4e60\u7b14\u8bb0</p> <p>\u6839\u636e\u88f4\u8700\u5b9a\u7406, \\(ax+by=\\gcd{(a, b)}\\) \u6709\u65e0\u7a77\u7ec4\u89e3, \u800c\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u51fa\u6765\u7684\u53ea\u662f\u5176\u4e2d\u4e00\u7ec4\u7279\u89e3 \\((x_0, y_0)\\) .</p> <p>\u4e0b\u9762\u8003\u8651\u6c42 \\(ax+by=c\\) \u7684\u4e00\u822c\u89e3.</p> <p>\u9996\u5148\u8bbe \\(c=t\\gcd(a, b)\\) ( \\(t\\) \u4e3a\u6574\u6570 ) , \u5219\u4f7f\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u51fa \\(ax+by=\\gcd{(a, b)}\\) \u7684\u7279\u89e3 \\((x_0, y_0)\\) \u540e, \u5bb9\u6613\u5f97\u5230 \\(ax+by=c\\) \u7279\u89e3\u4e3a \\((tx_0, ty_0)\\) .</p> <p>\u7531\u4e8e\u4e4b\u540e\u8003\u8651\u7684\u662f \\(ax+by=c\\) , \u6240\u4ee5\u540e\u9762\u7528 \\((x_0, y_0)\\) \u4ee3\u66ff \\((tx_0, ty_0)\\) .</p> <p>\u5c06\u65b9\u7a0b\u7684\u6240\u6709\u89e3\u6309\u7167 \\(x\\) \u7684\u5927\u5c0f\u6392\u5e8f, \u5219\u7279\u89e3\u540e\u7684\u4e0b\u4e00\u7ec4\u89e3 \\((x_1, y_1)\\) \u53ef\u4ee5\u8868\u793a\u4e3a \\((x_0+d_1, y_0+d_2)\\) , \u5176\u4e2d \\(d_1\\) \u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570.</p> <p>\u5e26\u5165\u65b9\u7a0b\u540e\u5f97\u5230 \\(ad_1+bd_2=0\\) , \u53d8\u5f62\u540e\u6709 \\(-\\dfrac{d_1}{d_2}=\\dfrac{b}{a}=\\dfrac{\\frac{b}{\\gcd{(a, b)}}}{\\frac{a}{\\gcd{(a, b)}}}\\) .</p> <p>\u56e0\u6b64\u65b9\u7a0b\u7684\u4e00\u822c\u89e3\u53ef\u4ee5\u8868\u793a\u4e3a \\(\\left(x_0+k\\dfrac{b}{\\gcd{(a, b)}}, y_0-k\\dfrac{a}{\\gcd{(a, b)}}\\right)(k\\in \\mathbf{Z})\\) .</p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u8981\u5c06 \\(\\dfrac{b}{a}\\) \u518d\u53d8\u5f62\u4e3a \\(\\dfrac{\\frac{b}{\\gcd{(a, b)}}}{\\frac{a}{\\gcd{(a, b)}}}\\) \u5462?</p> <p>\u56e0\u4e3a \\(\\frac{b}{a}\\) \u4e0d\u662f\u6700\u7b80\u5206\u6570, \u8fd9\u4e00\u6b65\u53d8\u5f62\u662f\u5316\u7b80 \\(\\frac{b}{a}\\) , \u76f4\u63a5\u7528 \\((x_0+kb, y_0-ka)\\) \u6765\u8868\u793a\u7279\u89e3\u7684\u8bdd\u4f1a\u6f0f\u6389\u4e00\u4e9b\u60c5\u51b5, \u5982 \\((x_0+\\frac{b}{\\gcd{(a, b)}}, y_0-\\frac{a}{\\gcd{(a, b)}})\\) \u5c31\u4e0d\u80fd\u88ab \\((x_0+kb, y_0-ka)\\) \u8868\u793a.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_31","title":"\u9006\u5143","text":"","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#n","title":"\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u4e58\u6cd5\u7684\u9006","text":"<p>\u5982\u679c\u5728 \\(Z_n\\) \u4e2d\u4e24\u5143\u7d20 \\(a, b\\) \u6ee1\u8db3 \\(a\\cdot b=1\\) , \u90a3\u4e48\u6211\u4eec\u5c31\u8bf4 \\(a, b\\) \u4e92\u4e3a\u6a21 \\(n\\) \u610f\u4e49\u4e0b\u4e58\u6cd5\u7684\u9006\u5143, \u8bb0\u4f5c \\(a=b^{-1}, b=a^{-1}\\) .</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_32","title":"\u9006\u5143","text":"<p>\u5f53 \\(a, m\\) \u4e92\u7d20\u7684\u65f6\u5019, \u82e5 \\(ax\\equiv 1\\pmod{m}\\) , \u5219\u79f0 \\(x\\) \u4e3a \\(a\\) \u5173\u4e8e\u6a21 \\(m\\) \u7684\u9006\u5143, \u8bb0\u4f5c \\(a^{-1}\\) .</p> <p>\u5728 \\([0, m)\\) \u7684\u8303\u56f4\u5185, \u9006\u5143\u662f\u552f\u4e00\u7684.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_33","title":"\u6c42\u89e3\u9006\u5143","text":"<p>\u6c42\u89e3\u9006\u5143\u7b49\u4ef7\u4e8e\u89e3\u65b9\u7a0b \\(ax+my=1\\)</p> <p>\u76f4\u63a5\u4f7f\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u5373\u53ef.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_34","title":"\u6b27\u62c9\u5b9a\u7406\u6c42\u9006\u5143","text":"<p>\u56e0\u4e3a \\(a, m\\) \u4e92\u7d20, \u6839\u636e\u6b27\u62c9\u5b9a\u7406, \u6709 \\(a\\cdot a^{\\varphi(m)-1}\\equiv 1\\pmod{m}\\) , \u56e0\u6b64 \\(a^{\\varphi(m)-1}\\) \u4e3a\u6240\u6c42\u9006\u5143.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_35","title":"\u7ebf\u6027\u6c42\u9006\u5143: \u9012\u63a8\u6cd5","text":"<p>\u9012\u63a8\u6cd5\u6c42\u89e3 \\(1\\sim n\\) \u7684\u9006\u5143.</p> <p>\u5047\u8bbe\u5f53\u524d\u6c42\u89e3\u7684\u662f \\(i\\) \u5173\u4e8e\u6a21 \\(p\\) \u7684\u9006\u5143.</p> <p>\u6839\u636e\u5e26\u4f59\u9664\u6cd5, \\(p=iq+r\\) , \u4e24\u8fb9\u5206\u522b\u5bf9 \\(p\\) \u53d6\u6a21\u5f97\u5230 \\(iq+r\\equiv 0\\pmod{p}\\) </p> <p>\u82e5 \\(i\\) \u4e0d\u4e3a \\(p\\) \u7684\u500d\u6570, \u5219 \\(r\\) \u4e0d\u4e3a 0 , \u56e0\u6b64 \\(r^{-1}\\) \u5b58\u5728.</p> <p>\u5728\u4e0a\u5f0f\u4e24\u8fb9\u4e58 \\(i^{-1}r^{-1}\\) \u5f97\u5230 \\(qr^{-1}+i^{-1}\\equiv 0\\pmod{p}\\) , \u5373</p> \\[r^{-1}\\equiv -qr^{-1}=-r^{-1}\\left\\lfloor \\dfrac{p}{i}\\right\\rfloor\\pmod{p}\\] <p>\u4e3a\u4e86\u9632\u6b62\u7b54\u6848\u4e3a\u8d1f\u6570, \u4f7f\u7528 \\(r^{-1}(p-\\left\\lfloor \\frac{p}{i}\\right\\rfloor)\\) \u4ee3\u66ff \\(-r^{-1}\\left\\lfloor \\frac{p}{i}\\right\\rfloor\\) .</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6: \\(\\mathcal{O}(n)\\)</p> <pre><code>inv[1] = 1;\nfor (int i = 2; i &lt;= n; ++i)\n  inv[i] = inv[p % i] * (p - p / i) % p;\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_36","title":"\u7ebf\u6027\u6c42\u9006\u5143: \u5012\u63a8\u6cd5","text":"<p>\u5148\u76f4\u63a5\u6c42\u89e3 \\(n!\\) \u7684\u9006\u5143, \u7136\u540e\u5229\u7528 \\(((n-1)!)^{-1}\\equiv(n!)^{-1}\\cdot n\\pmod{p}\\) \u5012\u63a8\u6c42\u5f97 \\(1!\\sim (n-1)!\\) \u7684\u9006\u5143.</p> <p>\u63a5\u7740\u518d\u5229\u7528 \\(n^{-1}\\equiv (n!)^{-1}\\cdot (n-1)!\\pmod{p}\\) \u6c42\u89e3 \\(1\\sim n\\) \u7684\u9006\u5143.</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_37","title":"\u4f8b\u9898","text":"<p>\u300cPOJ 1845\u300dSumdiv</p> <p>\u9996\u5148\u5229\u7528\u6574\u6570\u60df\u4e00\u5206\u89e3\u5b9a\u7406\u5c06 \\(A\\) \u8868\u793a\u4e3a \\(A=p_1^{r_1}p_2^{r_2}\\cdots p_n^{r_n}\\) .</p> <p>\u5219 \\(A^B\\) \u7ea6\u6570\u548c\u4e3a</p> \\[(1+p_1+p_1^2+\\cdots +p_1^{B\\cdot r_1})(1+p_2+p_2^2+\\cdots+p_2^{B\\cdot r_2})\\cdots(1+p_n+p_n^2+\\cdots+p_n^{B\\cdot r_n})\\] <p>\u53ef\u4ee5\u53d1\u73b0, \u6bcf\u4e00\u4e2a\u62ec\u53f7\u91cc\u90fd\u662f\u4e00\u4e2a\u7b49\u6bd4\u6570\u5217\u6c42\u548c, \u4ee5 \\(p_i\\) \u4e3a\u4f8b, \u5b83\u7684\u548c\u53ef\u4ee5\u5199\u6210 \\(\\dfrac{p_i^{B\\cdot r_i+1}-1}{p_i-1}\\) , \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5feb\u901f\u5e42\u6c42\u89e3\u5206\u5b50 \\(p_i^{B\\cdot r_i+1}\\bmod{9901}\\) , \u8fd9\u65f6\u82e5 \\(p_i-1&gt;(p_i^{B\\cdot r_i+1}-1)\\bmod{9901}\\) , \u6211\u4eec\u4f1a\u5f97\u5230 \\(0\\) , \u8fd9\u663e\u7136\u662f\u9519\u7684, \u800c\u6a21\u6570 \\(9901\\) \u6b63\u597d\u4e3a\u7d20\u6570, \u56e0\u6b64\u8003\u8651\u7528 \\(p_i-1\\) \u7684\u9006\u5143\u4e0e\u5206\u5b50\u7684\u7ed3\u679c\u76f8\u4e58\u6765\u4ee3\u66ff\u9664\u6cd5.</p> <p>\u5f53 \\(p_i-1\\) \u4e3a \\(9901\\) \u7684\u500d\u6570\u65f6\u4e0d\u5b58\u5728\u9006\u5143, \u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \\(p_i\\equiv 1\\pmod{9901}\\) , \u56e0\u6b64 \\(1, p_i, p_i^2, \\cdots, p_i^{B\\cdot r_i+1}\\equiv 1\\pmod{9901}\\) , \u6240\u4ee5 \\(1+p_i+p_i^2+\\cdots+p_i^{B\\cdot r_i}\\equiv B\\cdot r_i+1\\pmod{9901}\\) .</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_38","title":"\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b","text":"<p>\u5f62\u5982 \\(ax\\equiv c\\pmod{m}\\) \u7684\u65b9\u7a0b\uff0c\u79f0\u4e3a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u3002</p> <ol> <li>\u6734\u7d20\u7b97\u6cd5    \u5c06 \\(x=1, 2, \\cdots, m-1\\) \u4e00\u6b21\u5e26\u8fdb\u53bb\u9a8c\u8bc1\u5373\u53ef\uff0c\u8fd9\u4e2a\u6734\u7d20\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e \\(m\\) \u3002</li> <li>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5    \u53ef\u4ee5\u5c06\u65b9\u7a0b\u770b\u4f5c \\(ax+my=c\\) \uff0c\u7136\u540e\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u65b9\u6cd5\u6c42\u89e3\u3002    \u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u5f53\u4e14\u4ec5\u5f53 \\(\\gcd{(a, m)}|c\\) \u65f6\u65b9\u7a0b\u6709\u89e3\u3002    \u4ee4 \\(d=\\gcd(a, m)\\) \uff0c\u5219\u65b9\u7a0b\u4e00\u5171\u6709 \\(d\\) \u4e2a\u89e3\uff0c\u6211\u4eec\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97\u7279\u89e3 \\(x_0\\) \uff0c\u5219\u65b9\u7a0b\u7684\u901a\u89e3 \\(x_i=x_0+i\\cdot \\dfrac{m}{d}(i=0, 1, \\cdots, d-1)\\) \u3002</li> <li>\u6b27\u62c9\u5b9a\u7406    \u4ee4 \\(d=\\gcd{(a, m)}\\) \uff0c\u82e5 \\(d \\nmid c\\) \u5219\u65b9\u7a0b\u65e0\u89e3\u3002    \u7136\u540e\u4ee4 \\(a\\'=\\dfrac{a}{d}, c\\'=\\dfrac{c}{d}, m\\'=\\dfrac{m}{d}\\) \uff0c\u5219 \\(\\gcd{(a\\', m\\')}=1\\) \uff0c\u539f\u65b9\u7a0b\u53d8\u4e3a \\(a\\'x\\equiv c\\'\\pmod{m\\'}\\) \uff0c\u7531\u6b27\u62c9\u5b9a\u7406\uff0c\\(a\\'^{\\varphi(m\\')}\\equiv 1\\pmod{m\\'}\\) \uff0c\u5728\u65b9\u7a0b\u4e24\u8fb9\u5206\u522b\u4e58\u4e0a\u4e0a\u5f0f\uff0c\u5f97\u5230 \\(a\\'x\\equiv c\\'a\\'^{\\varphi(m\\')}\\pmod{m\\'}\\) \uff0c\u5373 \\(x\\equiv c\\'a\\'^{\\varphi(m\\')-1}\\pmod{m\\'}\\) \uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u539f\u65b9\u7a0b\u7684\u7279\u89e3 \\(x_0=dc\\'a\\'^{\\varphi(m\\')-1}\\) \uff0c\u56e0\u6b64\u539f\u65b9\u7a0b\u7684\u89e3\u4e3a \\(x_i=x_0+i\\cdot m'(i=1, 2, \\cdots,d-1)\\) \u3002</li> </ol>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_39","title":"\u4f8b\u9898","text":"<p>\u7ebf\u6027\u7ec4\u5408</p> <p>\u5bf9\u5e94\u6574\u6570\u6570\u5217 \\(A_1, A_2, \\cdots, A_n\\) \u662f\u5426\u5b58\u5728 \\(X_1, X_2, \\cdots, X_n\\) \uff0c \u4f7f\u5f97 \\(A_1X_1+A_2X_2+\\cdots+A_nX_n=C\\) \uff0c\u5176\u4e2d \\(\\gcd{(A_1, A_2, \\cdots, A_n)}\\mid C(n\\ge2)\\) \u3002\u5982\u6709\uff0c\u8bf7\u627e\u51fa\u4e00\u7ec4\u6574\u6570\u89e3 \\((x_1, x_2, x_3, x_4)\\) \u6ee1\u8db3 \\(12x_1+24x_2+18x_3+15x_4=3\\) .</p> <p>\u9898\u4e2d\u7684\u65b9\u7a0b\u662f n \u5143\u5f62\u5f0f\u7684\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u65b9\u7a0b\uff0c\u6211\u4eec\u5c1d\u8bd5\u5c06 n \u5143\u9010\u6b65\u964d\u4e3a\u4e8c\u5143\u5f97\u5230\u6700\u7ec8\u89e3\u3002</p> <p>\u8bbe \\(d=\\gcd{(A_1, A_2, \\cdots, A_n)}\\) \uff0c\u4ee4 \\(C\\'=\\dfrac{C}{d},A_i\\'=\\dfrac{A_i}{d}(i=1, 2, \\cdots, n)\\) \uff0c\u9996\u5148\u5c06\u65b9\u7a0b\u53d8\u5f62\u4e3a \\(A_1\\'X_1+A_2\\'X_2+\\cdots+A_n\\'X_n=C\\'\\) \uff0c\u6b64\u65f6\u6ee1\u8db3 \\(\\gcd{(A_1\\', A_2\\', \\cdots, A_n\\', C\\')}=1\\) \u3002</p> <p>\u7136\u540e\u6211\u4eec\u8003\u8651\u6c42\u89e3\u65b9\u7a0b \\(A_1\\'X_1+\\gcd(A_2\\', A_3\\', \\cdots, A_n\\')Y_1=C\\'\\) \uff0c\u5229\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u65b9\u6cd5\u6c42\u5f97\u7279\u89e3 \\(X_1,Y_1\\) \uff0c\u7531\u4e8e\u9898\u4e2d\u4ec5\u8981\u6c42\u5f97\u5230\u4e00\u7ec4\u89e3\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u53d6\u7279\u89e3\u5373\u53ef\uff0c\u7136\u540e\u518d\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u6c42\u89e3 \\(A_2\\'X_2+A_3\\'X_3+\\cdots+A_n\\'X_n=\\gcd(A_2\\', A_3\\', \\cdots, A_n\\')Y_1\\) \u4fbf\u53ef\u4ee5\u5b9e\u73b0\u9010\u6e10\u964d\u5143\u4e86\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_40","title":"\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\uff08\u6a21\u4e92\u7d20\uff09","text":"<p>\u8003\u8651\u5f62\u5982 \\(x\\equiv a_i\\pmod{m_i}\\) \u7684\u82e5\u5e72\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u8054\u5408\u5f97\u5230\u7684\u65b9\u7a0b\u7ec4\uff0c\u4f8b\u5982 $$ \\begin{cases} x &amp;\\equiv&amp; 2\\pmod{3} \\\\ x &amp;\\equiv&amp; 3\\pmod{5} \\\\ x &amp;\\equiv&amp; 5\\pmod{7} \\end{cases} $$ \u4e00\u79cd\u53ef\u884c\u7684\u89e3\u6cd5\u662f\u4ee4 \\(x=3y+2\\) \uff0c\u7136\u540e\u5c06\u65b9\u7a0b \\((2)\\) \u6539\u5199\u6210 \\(y\\equiv 2\\pmod{5}\\) \uff0c\u63a5\u7740\u518d\u4ee4 \\(y=5z+2\\) \u4ee3\u5165\u65b9\u7a0b \\((3)\\) \u5f97\u5230 \\(z\\equiv 4\\pmod{7}\\) \uff0c\u518d\u4ee4 \\(z=7k+4\\) \uff0c\u6700\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u89e3 \\(x\\equiv68\\pmod{105}\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_41","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u82e5\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 \\(x\\equiv a_i\\pmod{m_i}(i=1, \\cdots, n)\\) \u7684\u6a21\u6570 \\(m_i\\) \u4e24\u4e24\u4e92\u7d20\uff0c\u5219 \\(x\\) \u5728 \\(\\bmod{M}(M=\\prod_{i=1}^n m_i)\\) \u4e0b\u6709\u552f\u4e00\u89e3\u3002</p> <p>\u4ee4 \\(M_i=\\dfrac{M}{m_i}\\) \uff0c\u6709 \\(\\gcd{(M_i, m_i)}=1\\) \uff0c\u56e0\u6b64 \\(M_i\\) \u5728 \\(\\bmod{m_i}\\) \u4e0b\u7684\u9006\u5143\u5b58\u5728\uff0c\u8bbe\u5176\u4e3a \\(t_i\\) \uff0c\u4e8e\u662f\u6709 \\(a_iM_it_i\\equiv a_i\\pmod{m_i},a_iM_it_i\\equiv0\\pmod{m_j}(j\\not= i)\\) \u3002</p> <p>\u53ef\u4ee5\u5f97\u5230\u89e3 \\(x\\equiv\\sum_{i=1}^na_iM_it_i\\pmod{M}\\) \u3002 </p> <pre><code>//China Remainer Theorem\nint CRT(const int a[], const int m[], int n) {\n  int M = 1, ret = 0;\n  for (int i = 1; i &lt;= n; ++i) M *= m[i];\n  for (int i = 1; i &lt;= n; ++i) {\n    int ti = getinv(m[i], a[i]), Mi = M / m[i];\n    ret = (ret + a[i] * ti * Mi % M) % M;\n  }\n  return ret;\n}\n\n//\u5229\u7528 exgcd \u6c42\u9006\u5143\nint getinv(int a, int b) {\n  int x, y;\n  exgcd(a, b, x, y);\n  return x;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_42","title":"\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4\uff08\u6a21\u4e0d\u4e92\u7d20\uff09","text":"<p>\u5bf9\u4e8e\u6a21\u4e0d\u4e92\u7d20\u7684\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u7ec4 $$ \\begin{cases} x &amp;\\equiv a_1\\pmod{m_1} \\\\ x &amp;\\equiv a_2\\pmod{m_2} \\\\ &amp;\\cdots \\\\ x &amp;\\equiv a_n\\pmod{m_n} \\end{cases} $$</p> <p>\u8003\u8651\u6c42\u89e3\u65b9\u7a0b\u6570\u91cf\u4e3a 2 \u7684\u60c5\u5f62\uff0c\u5f53\u65b9\u7a0b\u6570\u91cf\u5927\u4e8e 2 \u65f6\u8fed\u4ee3\u6c42\u89e3\u3002</p> <p>$$ \\begin{cases} x &amp;\\equiv a_1\\pmod{m_1} \\\\ x &amp;\\equiv a_2\\pmod{m_2} \\end{cases} $$ \u8bbe \\(y=x-a_1\\) \uff0c\u5219\u65b9\u7a0b\u7ec4\u53d8\u4e3a $$ \\begin{cases} y &amp;\\equiv 0 &amp;\\pmod{m_1} \\\\ y &amp;\\equiv a_2-a_1 &amp;\\pmod{m_2} \\end{cases} $$ \u8bbe \\(d=\\gcd{(m_1, m_2)}\\) \uff0c\u6839\u636e\u88f4\u8700\u5b9a\u7406\uff0c\u82e5 \\(d \\nmid (a_2-a_1)\\) \uff0c\u5219\u65b9\u7a0b\u7ec4\u65e0\u89e3\uff0c\u5426\u5219\u4ee4 \\(y\\'=\\dfrac{y}{d},a\\'=\\dfrac{a_2-a_1}{d}, m_i\\'=\\dfrac{m_1}{d}(i=1,2)\\) \uff0c\u6709 $$ \\begin{cases} y\\' &amp;\\equiv{0} &amp;\\pmod{m_1'} \\\\ y\\' &amp;\\equiv{a\\'} &amp;\\pmod{m_2'} \\end{cases} $$ \u6b64\u65f6 \\(\\gcd{(m_1\\', m_2\\')}=1\\) \uff0c\u4ee4 \\(y\\'=km_1\\'\\) \uff0c\u518d\u7531\u6b27\u62c9\u5b9a\u7406\u53ef\u5f97 \\(k\\equiv{a\\'m_1\\'^{\\varphi(m_2\\')-1}}\\pmod{m_2\\'}\\) \uff0c\u4e8e\u662f \\(y\\equiv{da\\'m_1\\'^{\\varphi{(m_2\\')}}}\\pmod{dm_1\\'m_2\\'}\\) \uff0c\u6700\u540e\u4ee3\u56de\u53bb\u53ef\u4ee5\u5f97\u5230 \\(x\\equiv{(a_2-a_1)m_1\\'^{\\varphi{(m_2\\')}}+a_1}\\pmod{dm_1\\'m_2\\'}\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_43","title":"\u4f8b\u9898","text":"<p>\u300cPOJ 2891\u300dStrange Way to Express Integers</p> <p>\u7b97\u6cd5\u548c\u4e0a\u8ff0\u4e00\u81f4\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u8fed\u4ee3\u6c42\u89e3\u5f97\u5230\u524d \\(k-1\\) \u4e2a\u65b9\u7a0b\u7684\u4e00\u4e2a\u89e3 \\(x_0\\) \uff0c\u4ee4 \\(M=\\prod_{i=1}^{k-1}m_i\\) \uff0c\u5219 \\(x=x_0+i\\cdot M\\) \u662f\u524d \\(k-1\\) \u4e2a\u65b9\u7a0b\u7684\u901a\u89e3\u3002</p> <p>\u8003\u8651\u7b2c \\(k\\) \u4e2a\u65b9\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u6539\u5199\u4e3a \\(x_0+t\\cdot M\\equiv{a_k}\\pmod{m_k}\\) \uff0c\u5373 \\(t\\cdot M\\equiv{a_k-x_0}\\pmod{m_k}\\) \uff0c\u63a5\u4e0b\u6765\u627e\u5230\u4e00\u4e2a\u5408\u9002\u7684 \\(t\\) \u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u6c42\u89e3\u4e00\u4e2a\u540c\u4f59\u65b9\u7a0b\u4e86\uff0c\u5229\u7528\u6b27\u62c9\u5b9a\u7406\u6c42\u89e3\u5373\u53ef\u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_44","title":"\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b","text":"","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_45","title":"\u7b2c\u4e00\u7c7b\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b","text":"<p>\u5f62\u5982 \\(a^x\\equiv{b}\\pmod{p}\\) \u7684\u65b9\u7a0b\u79f0\u4e3a\u7b2c\u4e00\u7c7b\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b\uff0c\u5176\u4e2d \\(\\gcd(a, p)=1\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#bsgs","title":"BSGS","text":"<p>\u89e3\u51b3\u8fd9\u4e00\u7c7b\u65b9\u7a0b\u4e3b\u8981\u91c7\u7528 BSGS (Baby Step Giant Step) \u7b97\u6cd5\u3002</p> <p>\u5c06 \\(x\\) \u5199\u6210 \\(x=kt-m(0\\le m\\le t-1)\\) \u7684\u5f62\u5f0f\uff0c\u5219\u539f\u65b9\u7a0b\u53ef\u53d8\u5f62\u4e3a \\((a^t)^k\\equiv{b\\cdot a^m\\pmod{p}}\\) \u3002</p> <p>\u5047\u8bbe \\(t\\) \u5df2\u77e5\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u679a\u4e3e \\(k\\) \uff0c\u7136\u540e\u8ba1\u7b97\u76f8\u5e94\u7684 \\(b\\cdot a^m\\) \uff0c\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u53d8\u5f62\u540e\u7684\u7b49\u5f0f\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u5728\u679a\u4e3e \\(k\\) \u7684\u8fc7\u7a0b\u4e2d \\(m\\) \u7684\u53d6\u503c\u4e5f\u5728\u53d8\u5316\uff0c\u4f46 \\(m\\) \u7684\u53d6\u503c\u8303\u56f4\u662f\u4e0d\u53d8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u6240\u6709\u53ef\u80fd\u7684 \\(b\\cdot a^m\\) \u503c\uff0c\u7528\u4e00\u4e2a Hash \u8868\u50a8\u5b58\u3002</p> <p>\u7531\u6b27\u62c9\u5b9a\u7406\u53ef\u77e5\uff0c\u6709 \\(a^{\\varphi(p)}\\equiv{1}\\pmod{p}\\) \uff0c\u800c \\(\\varphi(p)&lt;p\\) \uff0c\u56e0\u6b64\u4ece 1~p \uff0c\u6a21 \\(p\\) \u610f\u4e49\u4e0b \\(a\\) \u7684\u5e42\u81f3\u5c11\u5b8c\u6210\u4e86\u4e00\u6b21\u5faa\u73af\uff0c\u6240\u4ee5\u6700\u5c0f\u6574\u6570\u89e3 \\(x&lt;p\\) \uff0c\u8fdb\u800c\u6211\u4eec\u53ef\u4ee5\u4ece \\(0\\) \u5230 \\(\\dfrac{p}{t}\\) \u679a\u4e3e \\(k\\) \uff0c\u800c \\(m\\in[0,t-1]\\) \uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(\\mathcal{O}(\\dfrac{p}{t}+t)\\) \uff0c\u5f53 \\(t=\\sqrt{p}\\) \u65f6\u590d\u6742\u5ea6\u6700\u5c0f\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(\\mathcal{O}(2\\sqrt{p})\\)</p> <pre><code>int BSGS(int a, int b, int p) {\n  b %= p;\n  if (a % p == 0) return b ? 1 : -1;\n  map &lt;int, int&gt; hash;\n  int t = sqrt(p) + 1;\n  for (int i = 0; i &lt; t; ++i) {\n    int val = (long long)b * power(a, i, p) % p;//\u5feb\u901f\u5e42\n    hash[val] = i;\n  }\n  a = power(a, t, p);\n  for (int i = 0; i &lt;= t; ++i) {\n    int val = power(a, i, p);\n    int j = hash.find(val) == hash.end() ? -1 : hash[val];\n    if (j &gt;= 0 &amp;&amp; i * t - j &gt;= 0) return i * t - j;\n  }\n  return -1;\n}\n</code></pre>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_46","title":"\u7b2c\u4e8c\u7c7b\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b","text":"<p>\u5f62\u5982 \\(x^k\\equiv{b}\\pmod{p}\\) \u7684\u65b9\u7a0b\u79f0\u4e3a\u7b2c\u4e8c\u7c7b\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b\u3002</p> <p>\u9996\u5148\u5f15\u5165\u9636\u548c\u539f\u6839\u7684\u6982\u5ff5\uff0c\u8fd9\u4e00\u90e8\u5206\u548c\u62bd\u8c61\u4ee3\u6570\u76f8\u5173\uff0c\u6211\u76ee\u524d\u8fd8\u4e0d\u4f1a QAQ \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_47","title":"\u9636","text":"<p>\u6ee1\u8db3\u540c\u4f59\u5f0f \\(a^n\\equiv{1}\\pmod{p}\\) \u7684\u6700\u5c0f\u6574\u6570 \\(n\\) \u79f0\u4e3a \\(a\\) \u6a21 \\(p\\) \u7684\u9636\uff0c\u8bb0\u4f5c \\(\\delta_p(a)\\) \u3002</p> <p>\u7531\u6b27\u62c9\u5b9a\u7406\u53ef\u77e5\uff0c\u5f53 \\(\\gcd(a, p)=1\\) \u65f6\uff0c\u6709 \\(a^{\\varphi(p)}\\equiv{1}\\pmod{p}\\) \uff0c\u56e0\u6b64\u9636\u7684\u5b58\u5728\u6027\u5f97\u8bc1\u3002</p> <p>\u6027\u8d28 1 \uff1a\\(a,a^2,\\cdots,a^{\\delta_p(a)}\\) \u6a21 \\(m\\) \u4e24\u4e24\u4e0d\u540c\u4f59\u3002</p> <p>\u6027\u8d28 2 \uff1a\u82e5 \\(a^n\\equiv{1}\\pmod{p}\\) \uff0c\u5219 \\(n \\mid \\delta_p(a)\\) \u3002</p> <p>\u200b   \u63a8\u8bba \uff1a\u82e5 \\(a^m\\equiv{a^n}\\pmod{p}\\) \uff0c\u5219 \\(m\\equiv{n}\\pmod{\\delta_p(a)}\\) \u3002</p> <p>\u6027\u8d28 3 \uff1a\u8bbe \\(p\\in\\mathbb{N}^*,\\, a,b\\in\\mathbb{Z},\\gcd(a,p)=\\gcd(b,p)=1\\) \uff0c\u5219 \\(\\delta_p(ab)=\\delta_p(a)\\delta_p(b)\\) \u7684\u5145\u8981\u6761\u4ef6\u662f \\(\\gcd(\\delta_p(a),\\delta_p(b))=1\\) \u3002</p> <p>\u6027\u8d28 4 \uff1a\u8bbe \\(k\\in\\mathbb{N},p\\in\\mathbb{N}^*,a\\in\\mathbb{Z},\\gcd(a,p)=1\\) \uff0c\u5219 \\(\\delta_p(a^k)=\\dfrac{\\delta_p(a)}{\\gcd(\\delta_p(a),k)}\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%9F%BA%E7%A1%80%E6%95%B0%E8%AE%BA/#_48","title":"\u539f\u6839","text":"<p>\u8bbe \\(p\\in\\mathbb{N}^*,a\\in\\mathbb{Z}\\) \uff0c\u82e5 \\(\\gcd(a,p)=1\\) \uff0c\u4e14 \\(\\delta_p(a)=\\varphi(p)\\) \uff0c\u5219\u79f0 \\(a\\) \u4e3a\u6a21 \\(m\\) \u7684\u539f\u6839\u3002</p> <p>\u4ee5\u4e0b\u57fa\u4e8e \\(p\\) \u4e3a\u8d28\u6570\u7684\u60c5\u51b5\u8fdb\u884c\u8ba8\u8bba\u3002</p> <p>\u5982\u4f55\u5224\u65ad \\(a\\) \u662f\u5426\u662f \\(p\\) \u7684\u539f\u6839\uff1f</p> <p>\u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff0c\u65b9\u7a0b \\(a^x\\equiv{1}\\pmod{p}\\) \u7684\u4e00\u4e2a\u89e3\u4e3a \\(x=p-1\\) \uff0c\u56e0\u6b64\u6700\u5c0f\u6574\u6570\u89e3 \\(x_{min}\\mid (p-1)\\) \uff0c\u800c\u6ee1\u8db3 \\(x_{min}=p-1\\) \u7684\u6574\u6570 \\(a\\) \u662f \\(p\\) \u7684\u539f\u6839\uff0c\u6240\u4ee5\u6211\u4eec\u9010\u4e2a\u679a\u4e3e \\(p-1\\) \u7684\u7ea6\u6570 \\(k\\) \uff0c\u5982\u679c\u53ea\u6709\u5f53 \\(k=p-1\\) \u65f6\u6ee1\u8db3 \\(a^k\\equiv{1}\\pmod{p}\\) \uff0c\u5219 \\(a\\) \u662f \\(p\\) \u7684\u539f\u6839\u3002</p> <p>\u4e0b\u9762\u8003\u8651\u6c42\u89e3 \\(x^k\\equiv{b}\\pmod{p}\\) \u3002</p> <p>\u7531\u9636\u7684\u6027\u8d28 1 \uff0c\u5b58\u5728\u552f\u4e00\u7684\u6b63\u6574\u6570 \\(m\\) \uff0c\u6ee1\u8db3 \\(a^m\\equiv{b}\\pmod{p},0\\le m\\le p-1\\) \uff0c\u5176\u4e2d \\(a\\) \u662f \\(p\\) \u7684\u539f\u6839\uff0c\\(m\\) \u53ef\u4ee5\u7531\u7b2c\u4e00\u7c7b\u9ad8\u6b21\u540c\u4f59\u65b9\u7a0b\u6c42\u51fa\u3002</p> <p>\u540c\u6837\uff0c\u5b58\u5728\u552f\u4e00\u6b63\u6574\u6570 \\(y\\) \uff0c\u4f7f\u5f97 \\(x\\equiv{a^y}\\pmod{p}\\) \uff0c\u4e8e\u662f\u4e0a\u8ff0\u65b9\u7a0b\u53d8\u4e3a \\(a^{ky}\\equiv{a^m}\\pmod{p}\\) \u3002</p> <p>\u7531\u9636\u7684\u6027\u8d28 2 \u7684\u63a8\u8bba\uff0c\\(ky\\equiv{m}\\pmod{p-1}\\) \uff0c\u4e8e\u662f\u6211\u4eec\u6c42\u89e3\u8fd9\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b\u5f97\u5230 \\(y\\) \u4fbf\u53ef\u4ee5\u5f97\u5230 \\(x\\) \u3002</p>","tags":["Math","Number-Theory"]},{"location":"Algorithm/Math/%E5%BF%AB%E9%80%9F%E5%B9%82/","title":"\u5feb\u901f\u5e42\u590d\u4e60\u7b14\u8bb0","text":"<p>\u867d\u7136\u5feb\u901f\u5e42\u7684\u601d\u60f3\u6bd4\u8f83\u7b80\u5355, \u800c\u4e14\u4e4b\u524d\u4e5f\u590d\u4e60\u8fc7\u4e00\u904d\u4e86, \u4f46\u662f\u521a\u624d\u5199\u4ee3\u7801\u7684\u65f6\u5019\u8fd8\u662f\u91cd\u65b0\u63a8\u4e86\u4e00\u904d\u624d\u60f3\u8d77\u6765\u600e\u4e48\u5199, \u6240\u4ee5\u8fd9\u91cc\u5199(\u6c34)\u4e00\u7bc7 blog \u6765\u589e\u5f3a\u7406\u89e3.</p>","tags":["\u5feb\u901f\u5e42","Math"]},{"location":"Algorithm/Math/%E5%BF%AB%E9%80%9F%E5%B9%82/#_1","title":"\u7b80\u4ecb","text":"<p>\u5feb\u901f\u5e42\u662f\u7528\u6765\u5feb\u901f\u6c42\u89e3 \\(a^b(\\bmod \\, p)\\) \u7684\u4e00\u79cd\u7b97\u6cd5.</p>","tags":["\u5feb\u901f\u5e42","Math"]},{"location":"Algorithm/Math/%E5%BF%AB%E9%80%9F%E5%B9%82/#_2","title":"\u5206\u6790","text":"<p>\u5f53 b \u4e0d\u662f\u5f88\u5927\u7684\u65f6\u5019, \u663e\u7136\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u6c42\u89e3 \\(a^b(\\bmod \\, p)\\), \u8fd9\u65f6\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(b)\\) , \u53ef\u662f\u5f53 b \u7684\u6570\u91cf\u7ea7\u5f88\u5927\u7684\u65f6\u5019\u600e\u4e48\u529e\u5462?</p> <p>\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u7528\u5230\u5feb\u901f\u5e42\u7b97\u6cd5\u4e86.</p> <p>\u5f53 b \u4e3a\u5076\u6570\u65f6, \\(a^b=a^{\\frac{b}{2}}\\cdot a^{\\frac{b}{2}}\\) , \u5f53 b \u4e3a\u5947\u6570\u65f6, \\(a^b=a^{\\frac{b}{2}}\\cdot a^{\\frac{b}{2}}\\cdot a\\).</p> <p>\u6211\u4eec\u8981\u662f\u77e5\u9053 \\(a^{\\frac{b}{2}}\\) \u5c31\u53ef\u4ee5\u5f88\u5feb\u6c42\u51fa \\(a^b\\) \u4e86, \u8fd9\u65f6\u5f88\u5bb9\u6613\u60f3\u5230\u9012\u5f52\u6c42\u89e3 \\(a^\\frac{b}{2}\\) , \u6bd5\u7adf\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9012\u5f52\u8ba1\u7b97 \\(a^b\\) \u7684\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(\\log{b})\\) \u7684.</p> <p>\u9012\u5f52\u7684\u5b9e\u73b0\u65b9\u6cd5\u5f88\u7b80\u5355, \u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0.</p> <p>\u6211\u4eec\u8003\u8651\u975e\u9012\u5f52\u5f0f\u7684\u5199\u6cd5.</p> <p>\u5728\u9012\u5f52\u5f0f\u5199\u6cd5\u4e2d, \u6bcf\u9012\u5f52\u4e00\u6b21, a \u7684\u6b21\u6570\u5c31\u4f1a\u7ffb\u4e00\u500d, \u4e00\u5171\u9012\u5f52\u4e86 \\(\\lfloor\\log{b}\\rfloor\\) \u6b21, \u56e0\u6b64\u6211\u4eec\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\u6bcf\u6b21 <code>a *= a</code> \u548c <code>b &gt;&gt;= 1</code> \u5373\u53ef, \u4f46\u662f\u5982\u679c b \u4e3a\u5947\u6570\u65f6\u9700\u8981\u518d\u4e58\u4ee5\u539f\u59cb\u7684 a, \u800c\u6b64\u65f6 a \u7684\u503c\u5df2\u7ecf\u53d8\u4e86\u600e\u4e48\u529e?</p> <p>\u6211\u4eec\u4ece\u4e00\u4e9b\u7b80\u5355\u7684\u4f8b\u5b50\u5165\u624b.</p> <p>\u8003\u8651 \\(b=5\\) \u548c \\(b=7\\) \u7684\u60c5\u51b5.</p> \\[ a^5=a^2\\cdot a^2\\cdot a=(a\\cdot a)(a\\cdot a)a \\] \\[ a^7=a^3\\cdot a^3\\cdot a=(a^2\\cdot a)(a^2\\cdot a)a \\] <p>\u5728 \\(b=5\\) \u7684\u60c5\u51b5\u4e0b, \u6211\u4eec\u9700\u8981\u5728\u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\u4e58\u4ee5 a , \u6b64\u65f6 a \u7684\u503c\u6ca1\u6709\u53d8, \u4e4b\u540e\u6211\u4eec\u518d\u4ee4 a \u81ea\u4e58.</p> <p>\u5728 \\(b=7\\) \u7684\u60c5\u51b5\u4e0b, \u7b2c\u4e00\u6b21\u5faa\u73af\u65f6\u7684\u60c5\u51b5\u4e0e \\(b=5\\) \u7684\u76f8\u540c, \u6ca1\u6709\u5f71\u54cd, \u7b2c\u4e8c\u6b21\u5faa\u73af\u65f6, \u5bf9\u4e8e\u5148\u524d\u5206\u51fa\u6765\u7684 2 \u4e2a \\(a^3\\) \u6211\u4eec\u90fd\u8981\u4e58\u4e00\u6b21 a , \u4e5f\u5c31\u662f\u9700\u8981\u4e58\u4e24\u6b21 a , \u76f8\u5f53\u4e8e\u4e58\u4ee5 \\(a^2\\) , \u6b63\u597d\u662f\u6b64\u65f6 a \u53d8\u5316\u4e00\u6b21\u540e\u7684\u503c.</p> <p>\u540c\u7406, \u6211\u4eec\u53ef\u4ee5\u770b\u51fa, \u5f53 b \u66f4\u5927, \u9700\u8981\u4e58 a \u7684\u6b21\u6570\u66f4\u591a\u7684\u65f6\u5019, \u5047\u8bbe\u5f53\u524d\u662f\u7b2c k \u6b21\u5faa\u73af, \u90a3\u4e48\u6211\u4eec\u5df2\u7ecf\u5c06 \\(a^b\\) \u62c6\u6210\u4e86 \\(2^k\\) \u4e2a \\(a^{b&gt;&gt;k}\\) (\u5f53\u7136\u8fd8\u8981\u7b97\u4e0a\u5947\u6570\u60c5\u51b5\u4e0b\u591a\u4e58\u7684 a )\u7684\u5f62\u5f0f, \u5f53\u8fdb\u5165\u7b2c k + 1 \u6b21\u5faa\u73af\u65f6, \u82e5 b \u4e3a\u5947\u6570, \u8fd9 \\(2^k\\) \u4e2a \\(a^{b&gt;&gt;k}\\) \u90fd\u8981\u4e58\u4e00\u4e2a a , \u76f8\u5f53\u4e8e\u4e58\u4e0a\u4e86\u4e00\u4e2a \\(a^{2^k}\\) , \u800c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6b63\u597d\u662f\u5f53\u524d a \u7ecf\u8fc7 k \u6b21\u81ea\u4e58\u540e\u7684\u503c, \u56e0\u6b64\u6211\u4eec\u53ea\u9700\u6bcf\u6b21\u5224\u65ad b \u7684\u5947\u5076\u6027, \u82e5\u4e3a\u5947\u6570, \u5c31 <code>ret *= a</code> \u5373\u53ef.</p>","tags":["\u5feb\u901f\u5e42","Math"]},{"location":"Algorithm/Math/%E5%BF%AB%E9%80%9F%E5%B9%82/#_3","title":"\u4ee3\u7801","text":"<pre><code>typedef long long ll;\n\nll binpow(ll a, ll b, ll p) {\n    a %= p;\n    ll ret = 1;\n    while (b &gt; 0) {\n        if (b &amp; 1) ret = ret * a % p;\n        a = a * a % p;\n        b &gt;&gt;= 1;\n    }\n    return ret;\n}\n</code></pre>","tags":["\u5feb\u901f\u5e42","Math"]},{"location":"Algorithm/String/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/","title":"AC\u81ea\u52a8\u673a","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u4e32 \\(t\\) \u548c\u4e00\u4e2a\u6a21\u5f0f\u4e32 \\(s\\)\uff0c\u8981\u6c42 \\(s\\) \u5728 \\(t\\) \u4e2d\u7684\u6240\u6709\u51fa\u73b0\u53ef\u4ee5\u7528 KMP \u7b97\u6cd5\u5728 \\(\\mathcal{O}(|s+t|)\\) \u7684\u65f6\u95f4\u5185\u5b9e\u73b0\u3002\u4f46\u662f\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\u5462\uff1f\u7ed9\u6bcf\u4e2a\u6a21\u5f0f\u4e32\u90fd\u8dd1\u4e00\u904d KMP \u663e\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u662f \\(|s+t|\\) \u4e58\u4e0a \\(s\\) \u7684\u6570\u91cf\u7684\u7ea7\u522b\u7684\uff0c\u5f53 \\(s\\) \u5f88\u591a\u7684\u65f6\u5019\u5c31\u5bc4\u4e86\u3002</p> <p>\u8003\u8651\u4e00\u4e0b\uff0c\u5f88\u591a\u4e2a\u6a21\u5f0f\u4e32\u7684\u8bdd\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u4ece\u4ed6\u4eec\u7684\u516c\u5171\u524d\u7f00\u5165\u624b\u51cf\u5c11\u5197\u4f59\u7684\u641c\u7d22\u91cf\uff1f\u8fd9\u6837\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\u6a21\u5f0f\u4e32\u5efa\u4e00\u68f5 Trie \u6811\u7136\u540e\u5728 Trie \u6811\u4e0a\u8df3 fail \u6570\u7ec4\u4e0e \\(t\\) \u7684\u5b50\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\u4e14\u5f53\u524d\u7ed3\u70b9\u5b58\u5728\u5bf9\u5e94\u6a21\u5f0f\u4e32\u7684\u8bdd\u5c31\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u7edf\u8ba1\u7684\u7b54\u6848+1.</p> <p>\u4e8e\u662f\u8fd9\u6837\u5c31\u4ea7\u751f\u4e86 AC \u81ea\u52a8\u673a\uff01</p> Note <p>Trie \u6811\u5c31\u662f\u4e00\u79cd\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a (Deterministic Finite Automaton, DFA)\uff0c\u800c KMP \u5728\u6587\u672c\u4e32\u4e2d\u6c42\u4e0d\u65ad\u5339\u914d\u6c42\u524d\u7f00\u51fd\u6570\u7684\u8fc7\u7a0b\u4e5f\u53ef\u4ee5\u770b\u4f5c DFA \u8fd0\u8f6c\u7684\u8fc7\u7a0b\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684 KMP \u81ea\u52a8\u673a\u3002</p> <p>\u8fd9\u6837\u6765\u770b\uff0c\u5176\u5b9e AC \u81ea\u52a8\u673a\u5c31\u662f Trie \u6811\u4e0a\u4f46\u662f\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\u4e0d\u540c\uff08\u548c KMP \u7684\u5dee\u4e0d\u591a\uff09\u7684\u81ea\u52a8\u673a\u3002</p>","tags":["String","DFA","Trie"]},{"location":"Algorithm/String/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#build","title":"Build","text":"<p>\u9996\u5148\u5f53\u7136\u662f\u7528\u6a21\u5f0f\u4e32\u6784\u9020 Trie \u6811\u4e86\uff0c\u5177\u4f53\u6b65\u9aa4\u5c31\u4e0d\u8bf4\u4e86\u3002</p> <pre><code>void insert(string&amp; s) {\n    int u = 0;\n    for (int i = 0; i &lt; s.length(); ++i) {\n        int p = s[i] - 'a';\n        if (!tr[u][p]) tr[u][p] = ++cnt;\n        u = tr[u][p];\n    }\n    tot[u]++;\n}\n</code></pre> <p>\u4e4b\u540e\u5229\u7528 KMP \u7684\u601d\u60f3\u6784\u9020 fail \u6570\u7ec4\u3002</p> <p>\u4e0e KMP \u5728\u6587\u672c\u4e32\u4e0a\u6784\u9020 next (fail) \u6570\u7ec4\u4e0d\u540c\uff0cAC \u81ea\u52a8\u673a\u662f\u5728 Trie \u6811\u4e0a\uff0c\u4e5f\u5c31\u662f\u5bf9\u6a21\u5f0f\u4e32\u6784\u9020 fail \u6570\u7ec4\u7684\u3002</p> Deep Dark Fantasy\u2642 <p>\u6784\u9020 fail \u6570\u7ec4\u90fd\u662f\u5bf9\u81ea\u8eab\u7684\u524d\u540e\u7f00\u8fdb\u884c\u5339\u914d\u7684\u8fc7\u7a0b\uff0cKMP \u5bf9 \\(s\\)+#+\\(t\\) \u7684\u65b0\u4e32\u6784\u9020 fail \u6570\u7ec4\u5176\u5b9e\u662f\u5229\u7528\u4e86\u53ea\u5bf9 \\(t\\) \u7684\u524d\u7f00\u548c \\(s\\) \u8fdb\u884c\u5339\u914d\u662f\u5f88\u65b9\u4fbf\u7684\uff08\\(\\mathcal{O}(|s|)\\)\uff09\u7684\uff0c\u800c AC \u81ea\u52a8\u673a\u7531\u4e8e\u6709\u591a\u4e2a\u6a21\u5f0f\u4e32\u56e0\u6b64\u8fd9\u4e00\u4e2a\u4f18\u52bf\u5931\u6548\u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4 AC \u81ea\u52a8\u673a\u5728 Trie \u6811\u4e0a\u6784\u9020 fail \u6570\u7ec4\u5e76\u4e0d\u662f\u5229\u7528\u4e0a\u9762\u4e00\u70b9\uff0c\u800c\u662f\u4e3a\u4e86\u5339\u914d\u5931\u8d25\u65f6\u80fd\u66f4\u5feb\u5730\u5bfb\u627e\u5230\u4e0b\u4e00\u4e2a\u53ef\u80fd\u5339\u914d\u4e0a\u7684\u6a21\u5f0f\u4e32\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u501f\u52a9\u516c\u5171\u524d\u7f00\u6784\u9020 Trie \u6811\u7684\u539f\u56e0\u3002</p> <p>\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u6309\u7167\u987a\u5e8f BFS \u4e00\u904d Trie \u6811\uff0c\u5047\u8bbe\u5f53\u524d\u7ed3\u70b9\u4e3a \\(u\\) \uff0c\u8981\u5904\u7406\u7684\u8fb9\u4e0a\u5bf9\u5e94\u5b57\u7b26\u4e3a \\(\\mathtt{c}\\) \uff0c\u5e76\u4e14\u6240\u6709\u6df1\u5ea6\u5c0f\u4e8e\u7b49\u4e8e \\(u\\) \u7684\u7ed3\u70b9\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u7684 fail \u6570\u7ec4\u90fd\u5df2\u6784\u9020\u597d\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u65ad\u8df3 <code>fail[u]</code> \u76f4\u5230\u8df3\u5230\u4e00\u4e2a <code>tr[fail[u]][c]</code> \u5b58\u5728\u7684\u7ed3\u70b9\u5373\u53ef\uff0c\u7136\u540e\u518d\u4ee4 <code>fail[tr[u][c]]</code> \u6307\u5411\u8fd9\u4e2a\u7ed3\u70b9\u3002</p> <p>\u4e0d\u8fc7\uff0c\u8df3\u5230\u4e0d\u5b58\u5728\u7684\u7ed3\u70b9 <code>tr[fail[u]][c]</code> \u663e\u7136\u6d6a\u8d39\u4e86\u65f6\u95f4\uff0c\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u5904\u7406\u7ed3\u70b9 \\(u\\) \u65f6\u5c06\u4e0d\u5b58\u5728\u7684\u7ed3\u70b9 <code>tr[u][c]</code> \u4e5f\u5904\u7406\u51fa\u6765\uff0c\u4ee4\u5176\u6307\u5411 <code>tr[fail[u]][c]</code> \u5373\u53ef\u8fdb\u884c\u8def\u5f84\u538b\u7f29\uff0c\u4fdd\u8bc1\u4e86\u8df3 <code>fail[u]</code> \u65f6\u53ea\u9700\u8981\u8df3\u4e00\u6b21\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <p>\u5982\u679c <code>tr[u][c]</code> \u5b58\u5728\uff0c\u90a3\u4e48 <code>fail[tr[u][c]] = tr[fail[u]][c]</code>\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u4ee4 <code>tr[u][c] = tr[fail[u]][c]</code> \uff0c\u7531\u4e8e <code>fail[u]</code> \u7684\u6df1\u5ea6\u5fc5\u7136\u5c0f\u4e8e \\(u\\) \uff0c\u6309\u7167\u524d\u9762\u7684\u5904\u7406\u65b9\u5f0f\uff0c<code>tr[fail[u]][c]</code> \u5fc5\u7136\u5df2\u7ecf\u6709\u4e86\u5bf9\u5e94\u597d\u7684\u7ed3\u70b9\uff0c\u5e76\u4e14\u8fd9\u4e2a\u7ed3\u70b9\u6df1\u5ea6\u540c\u6837\u662f\u5c0f\u4e8e \\(u\\) \u7684\uff0c\u6240\u6709\u5b83\u7684 fail \u6570\u7ec4\u4e5f\u662f\u5df2\u7ecf\u5904\u7406\u597d\u4e86\u7684\uff0c\u5c31\u4e0d\u9700\u8981\u6211\u4eec\u518d\u624b\u52a8\u6307\u5b9a\u4e00\u4e2a <code>fail[tr[u][c]]</code> \u4e86\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u524d\u4e00\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u7ba1 <code>tr[fail[u]][c]</code> \u662f\u5426\u5b58\u5728\u7684\u539f\u56e0\u3002</p> <pre><code>void build() {\n    std::queue &lt;int&gt; q;\n    for (int i = 0; i &lt; 26; ++i){\n        if (tr[0][i]) q.push(tr[0][i]);\n    }\n\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n\n        for (int i = 0; i &lt; 26; ++i) {\n            if (tr[u][i]) {\n                fail[tr[u][i]] = tr[fail[u]][i];\n                q.push(tr[u][i]);\n            } else {\n                tr[u][i] = tr[fail[u]][i];\n            }\n        }\n    }\n}\n</code></pre>","tags":["String","DFA","Trie"]},{"location":"Algorithm/String/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#matching","title":"Matching","text":"<p>\u5339\u914d\u8fc7\u7a0b\u5c31\u662f\u76f4\u63a5\u5728 Trie \u6811\u4e0a\u5bf9 \\(t\\) \u8fdb\u884c\u5339\u914d\uff0c\u6bcf\u8d70\u5230\u4e00\u4e2a\u7ed3\u70b9\u5c31\u4e0d\u65ad\u8df3 fail \u6570\u7ec4\uff0c\u770b\u8df3\u5230\u7684\u7ed3\u70b9\u662f\u5426\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u6a21\u5f0f\u4e32\uff0c\u5982\u679c\u6709\u7684\u8bdd\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6a21\u5f0f\u4e32\u5728\u5f53\u524d \\(t\\) \u7684\u5b50\u4e32\u7684\u540e\u7f00\u4e2d\u51fa\u73b0\u4e86\uff0c\u4e8e\u662f\u5c31\u7ed9\u5b83\u7684\u7b54\u6848\u52a0\u4e00\u5373\u53ef\u3002</p> <pre><code>int query(string&amp; t) {\n    int u = 0, ret = 0;\n    for (int i = 0; i &lt; t.length(); ++i) {\n        int p = t[i] - 'a';\n        u = tr[u][p];\n        for (int j = u; j &gt; 0 &amp;&amp; tot[j] != -1; j = fail[j]) {\n            ret += tot[j];\n            tot[j] = -1;\n        }\n    }\n    return ret;\n}\n</code></pre>","tags":["String","DFA","Trie"]},{"location":"Algorithm/String/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#optimization","title":"Optimization","text":"<p>\u4ece\u524d\u9762\u6784\u9020 fail \u6570\u7ec4\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u6709\u7ed3\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761 fail \u8fb9\uff0c\u5e76\u4e14\u4e00\u5b9a\u6307\u5411\u6df1\u5ea6\u5c0f\u4e8e\u5b83\u7684\u7ed3\u70b9\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e00\u68f5\u6811\u5417\uff1f\u90a3\u4e48\u6211\u4eec\u5339\u914d\u65f6\u4e0d\u65ad\u8df3 fail \u8fb9\u4e0d\u5c31\u76f8\u5f53\u4e8e\u4ece\u5f53\u524d\u7ed3\u70b9\u4e00\u6b65\u4e00\u6b65\u5730\u8df3\u5230\u6839\u8282\u70b9\u5417\uff1f\u65e2\u7136 fail \u6811\u662f\u5df2\u77e5\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u5339\u914d\u90fd\u5f80\u4e0a\u8df3\uff0c\u5b8c\u5168\u53ef\u4ee5\u7ed9\u5f53\u524d\u7ed3\u70b9\u6253\u4e00\u4e2a flag\uff0c\u6700\u540e\u76f4\u63a5\u5728 fail \u6811\u4e0a\u7edf\u8ba1\u7b54\u6848\u561b\u3002</p> <p>\u5f53\u7136\uff0c\u7edf\u8ba1\u7b54\u6848\u53c8\u53ef\u4ee5\u5206\u6210\u597d\u51e0\u79cd\u65b9\u6cd5\uff0c\u6bd4\u5982\u5728\u5efa\u56fe\u65f6\u8bb0\u5f55 fail \u8fb9\u7684\u5165\u5ea6\uff0c\u6700\u540e\u62d3\u6251\u6392\u5e8f\u65f6\u7edf\u8ba1\u5b50\u6811\u7684\u7b54\u6848\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5 DFS \u4e00\u904d fail \u6811\u6c42\u51fa\u5b50\u6811\u548c\u3002</p>","tags":["String","DFA","Trie"]},{"location":"Algorithm/String/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/#code","title":"Code","text":"<p>Luogu P3808 AC\u81ea\u52a8\u673a\uff08\u7b80\u5355\u7248\uff09</p> <p>\u5bf9\u5e94\u65e0 optimization \u7248\u672c\u7684\u4ee3\u7801\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing std::cin;     using std::cout;\nusing std::string;\n\nconst int N = 1e6 + 5;\n\nclass AC_Automaton {\nprivate:\n    int cnt = 0;\n    int tr[N][26], fail[N], tot[N];\n\npublic:\n    void insert(string&amp; s) {\n        int u = 0;\n        for (int i = 0; i &lt; s.length(); ++i) {\n            int p = s[i] - 'a';\n            if (!tr[u][p]) tr[u][p] = ++cnt;\n            u = tr[u][p];\n        }\n        tot[u]++;\n    }\n\n    void build() {\n        std::queue &lt;int&gt; q;\n        for (int i = 0; i &lt; 26; ++i){\n            if (tr[0][i]) q.push(tr[0][i]);\n        }\n\n        while (!q.empty()) {\n            int u = q.front();\n            q.pop();\n\n            for (int i = 0; i &lt; 26; ++i) {\n                if (tr[u][i]) {\n                    fail[tr[u][i]] = tr[fail[u]][i];\n                    q.push(tr[u][i]);\n                } else {\n                    tr[u][i] = tr[fail[u]][i];\n                }\n            }\n        }\n    }\n\n    int query(string&amp; t) {\n        int u = 0, ret = 0;\n        for (int i = 0; i &lt; t.length(); ++i) {\n            int p = t[i] - 'a';\n            u = tr[u][p];\n            for (int j = u; j &gt; 0 &amp;&amp; tot[j] != -1; j = fail[j]) {\n                ret += tot[j];\n                tot[j] = -1;\n            }\n        }\n        return ret;\n    }\n} AC;\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    int n;\n    cin &gt;&gt; n;\n\n    string s;\n    for (int i = 1; i &lt;= n; ++i) {\n        cin &gt;&gt; s;\n        AC.insert(s);\n    }\n    AC.build();\n    cin &gt;&gt; s;\n    cout &lt;&lt; AC.query(s);\n    return 0;\n}\n</code></pre> <p>\u5e26 optimization \u7684\u4ee3\u7801\u7684\u4fee\u6539\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u4e0d\u91cd\u65b0\u5199\u4e86\u3002</p>","tags":["String","DFA","Trie"]},{"location":"Algorithm/String/Manacher/","title":"manacher","text":"<p>\u7531\u4e8e 4 \u5e74\u534a\u524d\uff08\u60ca\u4e86\uff0c\u5c45\u7136\u5df2\u7ecf\u8fc7\u4e86\u8fd9\u4e48\u4e45\u4e86\u5417 QAQ\uff09\u5b66\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u8fd9\u4e25\u683c\u4e0a\u6765\u8bf4\u5e94\u8be5\u662f Re: \u4ece\u96f6\u5f00\u59cb\u7684 mancher \u91cd\u62fe\u7b14\u8bb0\uff08\u8bdd\u8bf4\u6211\u600e\u4e48\u548c\u521d\u5b66\u7684\u72b6\u6001\u4e00\u6837\u554a\uff09</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#introduction","title":"Introduction","text":"<p>\u6211\u4eec\u8fd8\u662f\u5957\u8def\u5f0f\u7684\u4ece intro \u5f00\u59cb\u5427\uff08</p> <p>\u5982\u679c\u60f3\u8981\u5355\u72ec\u6c42\u51fa\u67d0\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u663e\u7136\u5f04\u4e24\u4e2a\u6307\u9488 \\(\\mathcal{O}(n)\\) \u6bd4\u8f83\u4e00\u904d\u5c31\u597d\u4e86\uff0c\u4f46\u662f\u5982\u679c\u8981\u6c42\u51fa\u6240\u6709\u7684\u5b57\u7b26\u4e32\u5462\uff1f\u6700\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u4e2a\u4f18\u5316\u5c31\u662f\uff0c\u53ea\u8981\u6c42\u51fa\u4e86\u4ee5\u4e0b\u6807 \\(i\\) \u4e3a\u4e2d\u5fc3\u7684\u6700\u957f\u56de\u6587\u4e32\uff0c\u90a3\u4e48\u6211\u4eec\u5176\u5b9e\u4e5f\u5c31\u6c42\u51fa\u4e86\u4ee5\u4e0b\u6807 \\(i\\) \u4e3a\u4e2d\u5fc3\u7684\u6240\u6709\u56de\u6587\u4e32\u3002\u5728\u8003\u8651\u4e86\u8fd9\u4e2a\u4f18\u5316\u4e0b\u7684\u66b4\u529b\u7b97\u6cd5\u590d\u6742\u5ea6\u662f \\(\\mathcal{O}(n^2)\\) \u7684\uff0c\u4f46\u662f\u8fd9\u8fd8\u662f\u4e0d\u591f\u4f18\u79c0\u3002</p> <p>\u5982\u679c\u4f7f\u7528\u5b57\u7b26\u4e32\u54c8\u5e0c\u5462\uff1f\u4ecd\u7136\u91c7\u7528\u4e0a\u9762\u7684 trick\uff0c\u8981\u6c42\u6700\u957f\u7684\u957f\u5ea6\u6211\u4eec\u5c31\u518d\u5957\u4e00\u4e2a\u4e8c\u5206\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728 \\(\\mathcal{O}(n\\log n)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6765\u3002</p> <p>\u4f46\u662f\u554a\uff0c\u8fd9\u73a9\u610f\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u7b97\u6cd5\u53ef\u4ee5\u5728 \\(\\mathcal{O}(n)\\) \u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6765\uff0c\u90a3\u5c31\u662f manacher \u7b97\u6cd5\uff08\u70b9\u9898\uff01\uff09\u3002\u9053\u7406\u548c KMP \u662f\u7c7b\u4f3c\u7684\uff0c\u5145\u5206\u5229\u7528\u56de\u6587\u4e32\u7684\u6027\u8d28\uff0c\u9700\u8981\u6709\u5f3a\u5927\u7684\u6ce8\u610f\u529b\u3002</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#manacher","title":"Manacher","text":"<p>\u8fc7\u7a0b\u5f88\u7b80\u5355\uff0c\u7531\u4e8e\u5076\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32\u7684\u6c42\u89e3\u53ef\u4ee5\u901a\u8fc7\u5728\u539f\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0<sub>~\u5947\u5947\u602a\u602a\u7684</sub>~\u5b57\u7b26\u8f6c\u5316\u4e3a\u5bf9\u5947\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32\u7684\u6c42\u89e3\uff0c\u56e0\u6b64\u4e0b\u9762\u53ea\u8003\u8651\u5bf9\u5947\u6570\u957f\u5ea6\u7684\u56de\u6587\u4e32\u7684\u6c42\u89e3\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53f3\u7aef\u70b9\u5177\u6709\u6700\u5927\u4e0b\u6807\u7684\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u4e0b\u6807 \\(id\\) \u548c\u53f3\u7aef\u70b9\u4e0b\u6807 \\(r\\)\uff0c\u8bb0 \\(d[i]\\) \u8868\u793a\u4ee5\u4e0b\u6807 \\(i\\) \u4e3a\u4e2d\u5fc3\u7684\u6700\u957f\u5947\u6570\u957f\u5ea6\u56de\u6587\u4e32\u7684\u534a\u5f84\u5927\u5c0f\u3002</p> <p>\u679a\u4e3e\u4e2d\u5fc3 \\(i\\)\uff0c\u5047\u5982\u5f53\u524d\u679a\u4e3e\u7684\u4e0b\u6807 \\(i&lt;r\\)\uff0c\u90a3\u4e48\u7531\u56de\u6587\u4e32\u7684\u6027\u8d28\uff0c\u5c06 \\(i\\) \u4ee5 \\(id\\) \u4e3a\u4e2d\u5fc3\u5bf9\u79f0\u8fc7\u53bb\u5f97\u5230\u5bf9\u5e94\u7684\u4e0b\u6807 \\(j=id*2-i\\)\uff0c\u5219\u51e0\u4e4e\u53ef\u4ee5\u8ba4\u4e3a \\(d[i]=d[j]\\)\uff0c\u5728\u4e0b\u56fe\u4e2d\u8fd9\u662f\u5f88\u663e\u7136\u7684\uff08\u56fe\u7247\u6765\u81ea oi-wiki\uff09\uff1a</p> <p></p> <p>\u4e0d\u8fc7\u8003\u8651\u5230 \\(j\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u5de6\u7aef\u70b9\u53ef\u80fd\u843d\u5728 \\(id\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u4e4b\u5916\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u780d\u6389\u591a\u51fa\u53bb\u7684\u90e8\u5206\uff0c\u7136\u540e\u518d\u66b4\u529b\u5411\u5916\u6269\u5c55 \\(d[i]\\)\u3002</p> <p>\u53e6\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u5982\u679c\u5f53\u524d\u679a\u4e3e\u7684\u4e0b\u6807 \\(i\\ge r\\)\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u3002</p> <p>\u6700\u540e\u90fd\u8981\u8bb0\u5f97\u7528 \\(i\\) \u7684\u7ed3\u679c\u66f4\u65b0 \\(id\\) \u548c \\(r\\)\u3002</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#complexity","title":"Complexity","text":"<p>\u5728\u4ee5\u4e0a\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u8981 \\(i\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u662f\u5b8c\u6574\u843d\u5728 \\(id\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u5185\u90e8\u7684\uff0c\u90a3\u4e48\u5bf9\u4e8e \\(i\\) \u7684\u6c42\u89e3\u662f \\(\\mathcal{O}(1)\\) \u7684\uff0c\u800c\u4e00\u65e6 \\(i\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u843d\u5728\u4e86 \\(id\\) \u7684\u6700\u957f\u56de\u6587\u4e32\u5916\uff0c\u6211\u4eec\u53ea\u4f1a\u679a\u4e3e\u843d\u5728\u5916\u9762\u7684\u90e8\u5206\uff0c\u5e76\u4e14\u679a\u4e3e\u5b8c\u6210\u540e\u4f1a\u7acb\u5373\u66f4\u65b0 \\(id\\) \u548c \\(r\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u4e0b\u6807\u6700\u591a\u53ea\u4f1a\u88ab\u679a\u4e3e\u4e24\u6b21\uff0c\u4e00\u6b21\u662f\u6210\u4e3a\u5de6\u7aef\u70b9\uff0c\u53e6\u4e00\u6b21\u662f\u6210\u4e3a\u53f3\u7aef\u70b9\uff0c\u6240\u4ee5 manacher \u7b97\u6cd5\u662f \\(\\mathcal{O}(n)\\) \u7684\u3002</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#some-naive-thoughts","title":"Some Naive Thoughts","text":"<p>\u603b\u89c9\u5f97\u8fd9\u79cd\u5b57\u7b26\u4e32\u4e2d KMP \u548c manacher \u89e3\u51b3\u7684\u95ee\u9898\u548c\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u7684\u95ee\u9898\u6709\u70b9\u50cf\uff08\u5f3a\u884c\u8054\u60f3\uff09\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u5b57\u7b26\u4e32\u4e2d\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u90fd\u80fd\u505a\u5230 \\(\\mathcal{O}(n)\\) \u800c\u6392\u5e8f\u7684\u4e0a\u9650\u5e73\u5747\u5c31\u662f \\(\\mathcal{O}(n\\log n)\\) \u7684\u5462\uff1f</p> <p>\u60f3\u8d77\u4e4b\u524d\u5728\u77e5\u4e4e\u4e0a\u5237\u5230\u8fc7\u4e3a\u4ec0\u4e48\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0a\u9650\u662f \\(\\mathcal{O}(n\\log n)\\) \u7684\u95ee\u9898\uff0c\u5e95\u4e0b\u5173\u4e8e\u4fe1\u606f\u8bba\u7684\u56de\u7b54\u4ee4\u6211\u5927\u547c\u5999\u54c9\uff0c\u5c45\u7136\u8fd8\u6709\u8fd9\u79cd\u89d2\u5ea6\uff1f\uff01\u81ea\u6b64\u4e4b\u540e\uff0c\u4fe1\u606f\u8bba\u6210\u4e3a\u4e86\u6211\u5fc3\u4e2d\u7684\u4e00\u672c\u5723\u7ecf\uff0c\u603b\u89c9\u5f97\u8fd9\u73a9\u610f\u7b80\u76f4\u5c31\u662f\u8fd9\u4e16\u754c\u7684\u771f\u7406\uff0c\u5b83\u53ef\u4ee5\u56de\u7b54\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u6c42\u51fa\u4efb\u4f55\u4f18\u5316\u7684\u6781\u9650\uff0c\u7528\u4fe1\u606f\u8bba\u770b\u95ee\u9898\u7b80\u76f4\u548c\u5f00\u4e86\u795e\u4e4b\u773c\u4fef\u89c6\u4e16\u754c\u4e00\u6837\u3002</p> <p>\u6211\u4eec\u518d\u56de\u5230\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u7528\uff08\u6211\u4ee5\u4e3a\u7684\uff09\u4fe1\u606f\u8bba\u6765\u8003\u8651\uff0c\u90a3\u4e00\u5b9a\u662f \\(d[]\\) \u548c \\(next[]\\) \u6570\u7ec4\u76f8\u6bd4\u4e8e\u6392\u5e8f\u95ee\u9898\u4ec5\u4ec5\u63d0\u4f9b\u4e86\u5927\u5c0f\u5173\u7cfb\uff0c\u4ed6\u4eec\u63d0\u4f9b\u4e86\u66f4\u4e30\u5bcc\u7684\u4fe1\u606f\u6765\u964d\u4f4e\u4e0d\u786e\u5b9a\u6027\uff0c\u4fe1\u606f\u91cf\u66f4\u5927\uff0c\u56e0\u6b64\u4f18\u5316\u7684\u7406\u8bba\u6781\u9650\u590d\u6742\u5ea6\u4f1a\u66f4\u4f4e\u3002\u8bdd\u8bf4\u8fd9\u4e0d\u662f\u626f\u4e86\u4e00\u5806\u6700\u540e\u7ed3\u8bba\u662f\u53e5\u5e9f\u8bdd\u561b</p> <p>\u4f46\u662f\u561b\uff0c\u4e00\u76f4\u6ca1\u627e\u5230\u65f6\u95f4\u597d\u597d\u5b66\u5b66\u4fe1\u606f\u8bba\uff0c\u6240\u4ee5\u8fd9\u4ec5\u4ec5\u662f\u4e00\u4e9b\u300cnaive thoughts\u300dQwQ</p> <p>\u6709\u7a7a\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u8ba4\u771f\u5b66\u4fe1\u606f\u8bba\u7684\uff08\u786e\u4fe1</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#problems","title":"Problems","text":"<p>\u677f\u5b50\u5c31\u4e0d\u7279\u610f\u653e\u4e0a\u6765\u4e86\uff0c\u4ec5\u4ec5\u5904\u7406\u5947\u6570\u957f\u5ea6\u56de\u6587\u4e32\u7684\u677f\u5b50\u548c\u4f7f\u7528 trick \u6c42\u51fa\u5947\u5076\u957f\u5ea6\u56de\u6587\u4e32\u7684\u677f\u5b50\u90fd\u5728\u8fd9\u4e24\u9898\u91cc\u6709\u4f53\u73b0\u3002</p>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#luogu-p4555","title":"\u300cLuogu P4555\u300d[\u56fd\u5bb6\u96c6\u8bad\u961f]\u6700\u957f\u53cc\u56de\u6587\u4e32","text":"<p>Luogu</p> <p>\u9012\u63a8\u6c42\u51fa\u4e0b\u6807 \\(i\\) \u5206\u522b\u4f5c\u4e3a\u56de\u6587\u4e32\uff08\u4e0d\u4e00\u5b9a\u662f manacher \u4e2d\u7684\u6700\u957f\u56de\u6587\u4e32\uff09\u7684\u5de6\u53f3\u7aef\u70b9\u65f6\u7684\u6700\u957f\u7684\u56de\u6587\u4e32\u957f\u5ea6\uff0c\u7136\u540e\u679a\u4e3e\u5272\u70b9\u53d6 max \u5373\u53ef\u3002</p> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing std::cin;     using std::cout;\nusing std::string;  using std::vector;\n\nconst int N = 1e5 + 5;\n\nint n;\nchar s[N], t[N &lt;&lt; 1];\nvector &lt;int&gt; l(N &lt;&lt; 1), r(N &lt;&lt; 1), R(N &lt;&lt; 1);\n\nint modify() {\n    int len = 0;\n    t[++len] = '$', t[++len] = '#';\n    for (int i = 0; i &lt; strlen(s); ++i) t[++len] = s[i], t[++len] = '#';\n    t[++len] = '\\0';\n    return len;\n}\n\nvoid manacher() {\n    int mx = 0, mid = 0;\n    for (int i = 1; i &lt;= n; ++i) {\n        R[i] = (i &lt; mx) ? std::min(R[(mid &lt;&lt; 1) - i], mx - i + 1) : 1;\n        while (i - R[i] &gt; 0 &amp;&amp; i + R[i] &lt;= n &amp;&amp; t[i + R[i]] == t[i - R[i]]) R[i]++;\n        if (R[i] + i - 1 &gt; mx) mx = R[i] + i - 1, mid = i;\n\n        l[i - R[i] + 1] = std::max(l[i - R[i] + 1], R[i] - 1);\n        r[i + R[i] - 1] = std::max(r[i + R[i] - 1], R[i] - 1);\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cin &gt;&gt; s;\n    n = modify();\n\n    manacher();\n    for (int i = 2; i &lt;= n; i += 2) l[i] = std::max(l[i], l[i - 2] - 2);\n    for (int i = n - 2; i &gt; 0; i -= 2) r[i] = std::max(r[i], r[i + 2] - 2);\n\n    int ans = 0;\n    for (int i = 2; i &lt;= n; i += 2)\n        if (l[i] &amp;&amp; r[i]) ans = std::max(ans, l[i] + r[i]);\n\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre>","tags":["Palindrome","String"]},{"location":"Algorithm/String/Manacher/#luogu-p1659","title":"\u300cLuogu P1659\u300d[\u56fd\u5bb6\u96c6\u8bad\u961f]\u62c9\u62c9\u961f\u6392\u7ec3","text":"<p>Luogu</p> <p>\u53ea\u9700\u8981\u6c42\u51fa\u5947\u6570\u957f\u5ea6\u7684\u6700\u957f\u56de\u6587\u4e32\uff0c\u6309\u7167\u957f\u5ea6 sort \u4e00\u904d\u679a\u4e3e\u5373\u53ef\uff0c\u6ce8\u610f\u8fd9\u91cc\u9700\u8981\u7528\u5230\u5feb\u901f\u5e42\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing std::cin;     using std::cout;\nusing std::string;  using std::vector;\nusing i64 = long long;\n\nconst int mod = 19930726;\nconst int N = 1e6 + 5;\n\nint n;\ni64 k, ans;\nstring s;\nvector &lt;int&gt; r, d;\n\nvoid manacher() {\n    r = vector &lt;int&gt; (n);\n    for (int i = 0, id = 0, rr = -1; i &lt; n; ++i) {\n        r[i] = (i &lt; rr) ? std::min(r[(id &lt;&lt; 1) - i], rr - i + 1) : 1;\n        while (i - r[i] &gt;= 0 &amp;&amp; i + r[i] &lt; n &amp;&amp; s[i - r[i]] == s[i + r[i]]) ++r[i];\n        if (i + r[i] - 1 &gt; rr) id = i, rr = i + r[i] - 1;\n    }\n}\n\ni64 qpow(i64 a, int b) {\n    i64 ret = 1;\n    while (b) {\n        if (b &amp; 1) ret = ret * a % mod;\n        a = a * a % mod;\n        b &gt;&gt;= 1;\n    }\n    return ret;\n}\n\nvoid count() {\n    int cnt = 0;\n    i64 tot = 0;\n    ans = 1;\n\n    for (int len = r[0], p = 0; len &gt; 0 &amp;&amp; tot &lt; k; len -= 2) {\n        while (p &gt;= 0 &amp;&amp; r[p] == len) cnt++, p++;\n        if (cnt &gt; k - tot) cnt = k - tot;\n        ans = ans * qpow(1ll * len, cnt) % mod;\n        tot += cnt;\n    }\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cin &gt;&gt; n &gt;&gt; k;\n    cin &gt;&gt; s;\n\n    manacher();\n    std::sort(r.begin(), r.end(), [](int a, int b) { return a &gt; b; });\n    for (int i = 0; i &lt; n; ++i) r[i] = (r[i] &lt;&lt; 1) - 1;\n    count();\n\n    cout &lt;&lt; ans;\n    return 0;\n}\n</code></pre>","tags":["Palindrome","String"]},{"location":"Computer%20Science/","title":"Computer Science","text":"<p>Info</p> <p>\u8fd9\u91cc\u662f CS \u76f8\u5173\u8bfe\u7a0b\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u4e3b\u8981\u6db5\u76d6\u4e86\u4e00\u4e9b\u540d\u6821\u516c\u5f00\u8bfe\u4ee5\u53ca\u7ecf\u5178\u6559\u6750\u3002</p>"},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/","title":"UCB CS61C","text":"<p>Info</p> <p>Study notes based on UCB CS61C, Summer 2020 online videos along with its textbooks.</p> <ol> <li>Abstraction</li> <li>Technology Trends</li> <li>Principles of Locality/Memory Hierarchy</li> <li>Parallelism</li> <li>Performance Measurement &amp; Improvement</li> <li>Dependability via Redundancy</li> </ol>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#great-idea-1-levels-of-representation-interpretation","title":"Great Idea #1: Levels of Representation &amp; Interpretation","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#number-representation","title":"Number Representation","text":"<p>lec01.pdf</p> <ul> <li>Number Bases     We use \\(d\\times Base^i\\) to represent a number, and in computer the \\(Base=2\\) . Thus, we can also use bits to represent numbers in computer.</li> <li>Signed Representations<ul> <li>Sign and Magnitude</li> <li>Biased Notation</li> <li>One's Complement</li> <li>Two's Complement</li> </ul> </li> <li>Overflow<ul> <li>most significant bit (MSB): the leftmost bit</li> <li>least significant bit (LSB): the rightmost bit</li> <li>overflow: the proper result cannot be represented by the hardware bits</li> </ul> </li> <li>Sign Extension<ul> <li>Sign and Magnitude: fill with 0's</li> <li>One/Two's Complement: fill with MSB</li> </ul> </li> </ul> Sidenote <p>The RISC-V word is 32 bits long.</p> <p>Quick computation for \\(-x\\): \\(x+\\bar{x}=-1\\) .</p> <p>Foundation of complement method:     Consider subtracting a large number from a small one, the answer is that it would try to borrow a string of leading 0s, so the result would have a string of 1s.     This gives us the idea that leading 0s means positive, and leading 1s means negative.</p> <p>See CS:APP Chapter 2 for more.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#high-level-language-program-eg-c","title":"High-Level Language Program (e.g. C)","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#c-introduction","title":"C: Introduction","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#basic-concepts","title":"Basic Concepts","text":"<p>lec02.pdf</p> <ul> <li>Compilation<ul> <li>Comparison<ul> <li>C: compilers map C programs into architecture-specific machine code</li> <li>Java: converts to architecture-independent bytecode (run by JVM)</li> <li>Python: directly interprets the code</li> </ul> </li> <li>Advantage<ul> <li>Excellent runtime performance: compiler optimizes the code for the given architecture</li> <li>Fair compilation time: only modified files need recompilation</li> </ul> </li> <li>Disadvantage<ul> <li>Compiled files are architecture-specific</li> <li>\"Edit \\(\\to\\) Compile \\(\\to\\) Run [repeat]\" iteration cycle can be slow</li> </ul> </li> </ul> </li> <li>Variable Types</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#c-memory-management","title":"C Memory Management","text":"<p>lec04.pdf</p> <p>The picture below shows the C memory layout.</p> <p> </p> <p>From top to down, we have:</p> <ul> <li>Stack<ul> <li>local variables, grows downward</li> <li>consists of procedure frames, uses a stack pointer (SP) to tell where the current stack frame is</li> </ul> </li> <li>Heap<ul> <li>space requested via <code>malloc()</code> and used with pointers</li> <li>resizes dynamically, grows upward</li> </ul> </li> <li>Static Data<ul> <li>global and static variables, does not grow or shrink<ul> <li>string literals \\(\\in\\) static data<ul> <li><code>char * str = \"hi\";</code> belongs to, but <code>char str[] = \"hi\";</code> does not</li> </ul> </li> </ul> </li> <li>size does not change, but sometimes data can<ul> <li>string literals cannot</li> </ul> </li> </ul> </li> <li>Code<ul> <li>loaded when program starts, does not change</li> <li>typically read only</li> </ul> </li> </ul> <p>When it comes to memory management in C, there can be tons of memory problems. For a better understanding of that, refer to CS11L.</p> Basic Allocation Strategy: K&amp;R Section 8.7 <p>Each continuous spaces allocated by calling <code>malloc()</code> is called a block.</p> <p>To manage those blocks, we use a linked-list with each node pointing to each block.</p> <p>When a <code>free()</code> is called, we insert that block into the list and combine it with adjacent blocks.</p> <p>When a <code>malloc()</code> is called, we first search for the blocks large enough for allocation, then choose one using a method offered below: - Best-fit: choose the smallest, this provides the least concentrative distribution of small blocks yet a slowest service. - First-fit: choose the block with least order, this is fast but tends to concentrate small blocks at beginning. - Next-fit: like first-fit, but resume search from where we last left off. Also fast, and it does not concentrate small blocks at front.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#floating-point","title":"Floating Point","text":"<p>See CS:APP Ch.2 Floating Point.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#single-precision","title":"Single Precision","text":"<p>Use normalized, base 2 scientific representation:</p> <p></p> <p>Split a 32-bit word into 3 fields:</p> <p></p> <p>Here, we use biased notation (\\(bias=-127\\)) for the exponent in order to preserve the linearity of value as well as represent a small number.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#double-precision","title":"Double Precision","text":"<p>Everything stays the same as Single Precision except the length of each field.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#special-cases","title":"Special Cases","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#limitations","title":"Limitations","text":"<ul> <li>Overflow &amp; Underflow</li> <li>Rounding occurs when result runs out of the end of the Significant</li> <li>FP addition is not associative due to rounding errors<ul> <li>As a result, parallel execution strategies that work for integer data may not work for FP</li> </ul> </li> <li>FP cannot represent all integers</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#assembly-language-program-eg-risc-v","title":"Assembly Language Program (e.g. RISC-V)","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#risc-v-introduction","title":"RISC-V: Introduction","text":"<ul> <li>Mainstream Instruction Set Architecture: x86, ARM architectures, RISC-V</li> <li>Complex/Reduced Instruction Set Computing:<ul> <li>Early trend: CISC<ul> <li>difficult to learn</li> <li>less work for the compiler</li> <li>complicated hardware runs more slowly</li> </ul> </li> <li>Later began to dominate: RISC<ul> <li>easier to build fast hardware</li> <li>let software do the complicated operations by composing simpler ones</li> </ul> </li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#assembly-language","title":"Assembly Language","text":"<ul> <li>RISC Design Principles: smaller is faster, keep it simple.</li> <li>RISC-V Registers: <code>s0-s11</code>, <code>t0-t6</code>, <code>x0</code></li> <li>RISC-V Instructions<ul> <li>Arithmetic: <code>add</code>, <code>sub</code>, <code>addi</code></li> <li>Data Tansfer: <code>lw</code>, <code>sw</code><ul> <li>Memory is byte-addressed</li> </ul> </li> <li>Control Flow: <code>beq</code>, <code>bne</code>, <code>j</code></li> <li>Six Steps of Calling a Function<ol> <li>Place arguments</li> <li>Jump to funciton</li> <li>Create local storage (Prologue)</li> <li>Perform desired task</li> <li>Place return value and clean up storage (Epilogue)</li> <li>Jump back to caller</li> </ol> </li> <li>Calling Conventions<ul> <li>Caller-saved registers (Volatile Registers)</li> <li>Callee-saved registers (Saved Registers)</li> </ul> </li> </ul> </li> <li>RISC-V Instruction Formats<ul> <li></li> <li>The Stored Program concept is very powerful.</li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#machine-language-program-risc-v","title":"Machine Language Program (RISC-V)","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#translation-vs-interpretation","title":"Translation vs. Interpretation","text":"<p>Interpreter: Directly executes a program in the source language.</p> <p>Translator: Converts a program from the source language to an equivalent program in another language.</p> <p>Translation vs. Interpretation:</p> <ul> <li>Interpreter is slower, but code is smaller</li> <li>Interpretor provides instruction set independence</li> <li>Translated/compiled code almost always more efficient and therefore higher performance</li> <li>Translation/compilation helps \"hide\" the program \"source\" from the users</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#translation","title":"Translation","text":"<p>C translation steps are as follows:</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#compiler","title":"Compiler","text":"<ul> <li>Input: Higher-level language (HLL) code</li> <li>Output: Assembly language code (may contain pseudo-instructions)</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#assembler","title":"Assembler","text":"<ul> <li>Input: Assembly language code</li> <li>Output: Object code, information tables \\(\\rightarrow\\) Object file</li> </ul> <p>Assembler does this in three steps:</p> <ul> <li>Reads and uses directives<ul> <li>Assembly directives: give directions to assembler, but do not produce machine instructions. (<code>.text</code>, <code>.data</code>, <code>.global sym</code>, etc)</li> </ul> </li> <li>Replaces pseudo-instructions (<code>mv</code>, <code>li</code>, etc)</li> <li>Produces machine language<ul> <li>\"Forward Reference\" problem</li> </ul> </li> </ul> <p>To solve \"Forward Reference\" problem, we make two passes over the program.</p> <ul> <li>Pass 1:<ul> <li>Expands pseudo instructions</li> <li>Remember positions of labels</li> <li>Take out comments, empty lines, etc</li> <li>Error checking</li> </ul> </li> <li>Pass 2:<ul> <li>Use label positions to generate relative addresses</li> <li>Outputs the object file</li> </ul> </li> </ul> <p>For jumps to external labels and references to data, assembler cannot determine yet, but it will create two tables for linker to solve that.</p> <ul> <li>Symbol Table<ul> <li>List of \"items\" that may be used by other files</li> <li>Includes labels and data</li> </ul> </li> <li>Relocation Table<ul> <li>List of \"items\" this file will need the address of later (currently undetermined)</li> <li>Includes:<ul> <li>Any external label jumped to <code>jal</code> or <code>jalr</code></li> <li>Any piece of data</li> </ul> </li> </ul> </li> </ul> <p>The object file format is listed below from top to down:</p> <ol> <li>object file header</li> <li>text segment</li> <li>data segment</li> <li>relocation table</li> <li>symbol table</li> <li>debugging information</li> </ol>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#linker","title":"Linker","text":"<ul> <li>Input: Object code files, information tables</li> <li>Output: Executable code</li> </ul> <p>There are three steps for the linker:</p> <ol> <li>Place code and data modules symbolically in memory</li> <li>Determine the addresses of data and instruction labels</li> <li>Patch both the internal and external references</li> </ol> <p>Note that the linker enables separate compilation of files, which saves a lot of compile-time.</p> <p>Info</p> <p>The text segment starts at address <code>0000 0000 0040 0000</code><sub>hex&lt;/sub    and the data segment at <code>0000 0000 1000 0000</code><sub>hex</sub>. <p>Three types of addresses:</p> <ul> <li>PC-Relative Addressing (<code>beq</code>, <code>bne</code>, <code>jal</code>) \\(\\rightarrow\\) never relocate</li> <li>External Function Reference (usually <code>jal</code>) \\(\\rightarrow\\) always relocate</li> <li>Static Data Reference (often <code>auipc</code> and <code>addi</code>) \\(\\rightarrow\\) always relocate<ul> <li><code>lw</code>, <code>sw</code> to variables in static area, relative to global pointer</li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#loader","title":"Loader","text":"<ul> <li>Input: Executable code</li> <li>Output: \\&lt;program is run&gt;</li> </ul> <p>The loader follows these steps:</p> <ol> <li>Reads executable file's header to determine size of text and data segments</li> <li>Creates an address space large enough for text and data</li> <li>Copies the instructions and data from executable file into memory</li> <li>Copies arguments passed to the program onto the stack</li> <li>Initialize machine registers</li> <li>Jumps to start-up routine that copies program's arguments from stack to registers and sets the PC</li> </ol> <p>Quote</p> <p>Virtually every problem in computer science can be solved by another level of indirection. <p>David Wheeler</p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#logic-circuit-description","title":"Logic Circuit Description","text":"<p>lec10.pdf</p> <p>Synchronous Digital Systems (SDS):</p> <ul> <li>Synchronous<ul> <li>All operations coordinated by a central clock</li> </ul> </li> <li>Digital<ul> <li>Represent all values with two discrete values: 0/1, high/low, true/false </li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#switches-and-transistors","title":"Switches and Transistors","text":"<ul> <li>Switches<ul> <li>The basic elements of physical implementations</li> </ul> </li> <li>Transistors \\(\\rightarrow\\) hardware switches<ul> <li>Modern digital systems designed in CMOS<ul> <li>Understanding CMOS</li> </ul> </li> <li>MOS transistors acts as voltage-controlled switches</li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#cmos-networks","title":"CMOS Networks","text":"<ul> <li>In a word,<ul> <li>high voltage \\(\\rightarrow\\) N-channel ON, P-channel OFF</li> <li>low voltage \\(\\rightarrow\\) N-channel OFF, P-channel ON</li> </ul> </li> <li>V<sub>GS</sub> = V<sub>Gate</sub> - V<sub>Source</sub>; V<sub>SG</sub> = V<sub>Source</sub> - V<sub>Gate</sub>; V<sub>TH</sub> = V<sub>Threshold</sub></li> </ul> <p>In abstraction, we can simply view chips composed of transistors and wires as block diagrams.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#combinational-digital-logic","title":"Combinational Digital Logic","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#combinational-logic-gates","title":"Combinational Logic Gates","text":"<p>Digital Systems consists of two basic types of circuits:</p> <ul> <li>Combinational Logic (CL) e.g. ALUs</li> <li>Sequential Logic (SL) e.g. Registers</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#boolean-algebra","title":"Boolean Algebra","text":"<p>Translate truth table to boolean algebra:</p> <ul> <li>Sum of Products (SoP)</li> <li>Product of Sums (PoS)</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#circuit-simplification","title":"Circuit Simplification","text":"<p>Hardware can have delays, so we should simplify boolean expressions \\(\\rightarrow\\) smaller transistor networks \\(\\rightarrow\\) smaller circuit delays \\(\\rightarrow\\) faster hardware.</p> <p>Summary</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#sequential-digital-logic","title":"Sequential Digital Logic","text":"<p>lec11.pdf</p> <p>State Handout</p> <p>In combinational digital logic, systems are memoryless. However, when we want to sum up a series of numbers without knowing its length, this is impossible to implement with memoryless circuits. Thus, we now introduce registers.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#register-details","title":"Register Details","text":"<p>Inside a register are a number of flip-flops (FFs). Here we're talking about the most common type of flip-flops, called an edge-triggered d-type flip-flop.</p> <p> </p> <p>Take a look at a single FF, here <code>d</code> is referred as input and <code>q</code> as output.</p> <p>On the rising edge of the clock, the input <code>d</code> is sampled and transferred to the output <code>q</code>. At other times, <code>d</code> is simply ignored.</p> <p>When a FF feels that there is a change at the input side, it knows that it maybe time to change. However, just like combinational logic circuits, FF cannot change its value instantaneously. Also, time is needed to transfer inputs internally. The combination of these (the former one called setup time, and the latter called hold time) two create a time window when the input <code>d</code> cannot change. Also, after the FF has successfully captured the new input, it takes a small amount of time to transfer that to the output. This delay is called clk-to-q delay.</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#pipelining-adding-registers-to-improve-performance","title":"Pipelining--Adding Registers to Improve Performance","text":"<p>Consider the example in the slides, we can infer that the maximum clock frequency is limited by the propagation of the critical path.</p> <p>To resolve that issue, we can employ the technique called pipelining. In details, that means to add more registers. Notably that this will cause a signal passing through the same path (ignore the added registers) with more cycles (while the length of a cycle is shrunk), but in the long run, it actually improves performance.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#finite-state-machines","title":"Finite State Machines","text":"<p>To represent sequential logic, finite state machines are a good idea. Correspondingly, with combinational logic and registers, any FSM can be implemented in hardware.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#functional-units-aka-execution-unit","title":"Functional Units (a.k.a. Execution Unit)","text":"<p>Take a look at the examples in the slides.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#hardware-architecture-description","title":"Hardware Architecture Description","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#cpu","title":"CPU","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#datapath-and-control","title":"Datapath and Control","text":"<p>A CPU involves two parts:</p> <ul> <li>Datapath: contains the hardware necessary to perform operations required by the processor</li> <li>Control: decides what each piece of datapath should do</li> </ul> <p></p> <p>The picture above shows the basic architecture of a single-cycle RISC-V RV32I datapath.</p> <p>Single Cycle CPU: All stages of an instruction completed within one long clock cycle.</p> <p></p> <p>Processor design principles:</p> <ul> <li>Five steps:<ol> <li>Analyze instruction set \\(\\rightarrow\\) datapath requirements</li> <li>Select set of datapath components &amp; establish clock methodology</li> <li>Assemble datapath meeting the requirements</li> <li>Analyze implementation of each instruction to determine setting of control points that effects the register transfer</li> <li>Assemble the control logic<ul> <li>Formulate Logic Equations</li> <li>Design Circuits</li> </ul> </li> </ol> </li> <li>Determining control signs</li> </ul> <p>Control construction options:</p> <ul> <li>ROM<ul> <li>Can be easily reprogrammed</li> <li>Popular when design control logic manually</li> </ul> </li> <li>Combinatorial Logic<ul> <li>Not easily re-programmable because requires modifying hardware</li> <li>Likely less expensive, more complex</li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#performance-analysis","title":"Performance Analysis","text":"<p><code>lw</code> instruction needs to do all the things, so it is the bottleneck of a single cycle. </p> <p>\"Iron law\" of processor performance:</p> \\[\\frac{\\mathtt{Time}}{\\mathtt{Program}}=\\frac{\\mathtt{Instructions}}{\\mathtt{Program}}\\cdot\\frac{\\mathtt{Cycles}}{\\mathtt{Instruction}}\\cdot\\frac{\\mathtt{Time}}{\\mathtt{Cycle}}\\]","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#great-idea-4-parallelism","title":"Great Idea #4: Parallelism","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#pipelining","title":"Pipelining","text":"<p>Noticed that since we have to set the maximum clock frequency to  the lowest value to fit in <code>lw</code> instruction, there will always be chips idle when performing other instructions.</p> <p>As an analogy to doing laundry, we can use pipelining to increase throughput of entire workload.</p> <p></p> <p>To align the five instruction stages, we place a register between each two stages as a buffer.</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#hazards","title":"Hazards","text":"<p>lec14.pdf</p> <p>With pipelining, we successfully improve single cycle performance, however, this also leads to some problems which is called hazard.</p> <p>A hazard is a situation that prevents starting the next instruction in the next clock cycle.</p> <ol> <li>Structural hazard: a required resource is busy<ul> <li>Solution 1: stalling</li> <li>Solution 2: add more hardware<ul> <li>Can always solve a structural hazard by adding more hardware</li> <li>Regfile Structural Hazards<ul> <li>Solution 1: build Regfile with independent read and write ports</li> <li>Solution 2: double pumping</li> <li>Read and Write during same clock cycle is okay (write first, then read)</li> </ul> </li> <li>Memory Structural Hazards<ul> <li>Solution: build memory with separate instruction/data units/caches</li> <li>RISC ISAs designed to avoid such hazards</li> </ul> </li> </ul> </li> </ul> </li> <li>Data hazard: data dependency between instructions<ol> <li>R-type instructions<ul> <li>Solution 1: stalling</li> <li>Solution 2: forwarding (a.k.a bypassing)</li> </ul> </li> <li>Load instructions<ul> <li>Solution 1: stalling = <code>nop</code></li> <li>Solution 2: let the compiler/assembler put an unrelated instruction in that slot (slot after a load is called a load delay slot)</li> </ul> </li> </ol> </li> <li>Control hazard: flow of execution depends on previous instruction<ul> <li>Solution 1: stalling</li> <li>Solution 2: move branch comparator to ID stage</li> <li>Solution 3: branch prediction - guess outcome of a branch, fix afterwards if necessary</li> </ul> </li> </ol>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#great-idea-3-principle-of-locality","title":"Great Idea #3: Principle of Locality","text":"","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#caches","title":"Caches","text":"<p>Principle of Locality: Programs access only a small portion of the full address space at any instant time</p> <ul> <li>Temporary Locality (time)</li> <li>Spatial Locality (space)</li> </ul> <p></p> <p>In typical memory hierarchy, from top to down we have:</p> <ul> <li>RegFile</li> <li>First Level Cache (consists of Instr Cache &amp; Data Cache) \\(\\rightarrow\\) <code>$L1</code></li> <li>Second Level Cache (SRAM) \\(\\rightarrow\\) <code>$L2</code></li> <li>Main Memory (DRAM)</li> <li>Secondary Memory (Disk or Flash)</li> </ul> <p>Upper above the Main Memory are On-Chip Components.</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#fully-associative-caches","title":"Fully Associative Caches","text":"<p>Fully associative: each memory block can map anywhere in the cache.</p> <p></p> <p>In the cache:</p> <ul> <li>Each cache slot contains the actual data block (\\(8\\times 2^{\\mathrm{Offset}}\\) bits)</li> <li><code>Tag</code> field as identifier (\\(\\mathrm{Tag}\\) bits)</li> <li><code>Valid</code> bit indicate whether cache slot was filled in (\\(1\\) bit)</li> <li>Any necessary replacement management bits (\"LRU(Least Recently Used) bits\" - variable \\(\\#\\) bits)</li> </ul> <p>Total bits in cache = \\(\\#\\, \\mathrm{slots}\\times(8\\times 2^{\\mathrm{Offset}}+\\mathrm{Tag}+1+?)\\) bits</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#direct-mapped-caches","title":"Direct-Mapped Caches","text":"<p>Direct-mapped cache: each memory address is associated with one possible block within the cache</p> <p></p> <p>Within the cache:</p> <ul> <li>Index: which row/block<ul> <li>\\(\\# \\mathrm{blocks}/ \\mathrm{cache}=\\dfrac{\\mathrm{bytes/ cache}}{\\mathrm{bytes/ block}}\\)</li> </ul> </li> <li>Offset: which byte within the block</li> <li>Tag: distinguish between all the memory addresses that map to the same location<ul> <li>\\(\\mathrm{tag \\, length=addr \\, length - offset - index}\\)</li> </ul> </li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#n-way-set-associative-caches","title":"N-Way Set Associative Caches","text":"<p>pros:</p> <ul> <li>avoids a lot of conflict misses</li> <li>hardware cost isn't that bad: only need N comparators</li> </ul> <p>1-way set assoc \\(\\leftarrow\\) directly mapped</p> <p>M-way set assoc \\(\\leftarrow\\) fully assoc</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#writes-block-sizes-misses","title":"Writes, Block Sizes, Misses","text":"<ul> <li>Effective<ul> <li>Hit rate (HR)</li> <li>Miss rate (MR)</li> </ul> </li> <li>Fast<ul> <li>Hit time (HT)</li> <li>Miss penalty (MP)</li> </ul> </li> </ul> <p>Handle cache hits:</p> <ul> <li>Read hits (<code>I$</code> &amp; <code>D$</code>)<ul> <li>Fasted possible scenario</li> </ul> </li> <li>Write hits (<code>D$</code>)<ol> <li>Write-Through Policy: always write to cache and memory (through cache)<ul> <li>Write buffer</li> </ul> </li> <li>Write-Back Policy: write only to cache, update memory when block is removed<ul> <li>Dirty bit</li> </ul> </li> </ol> </li> </ul> <p>Handle cache misses:</p> <ul> <li>Read misses (<code>$I</code> &amp; <code>$D</code>)<ul> <li>Stall, fetch from memory, put in cache</li> </ul> </li> <li>Write misses (<code>$D</code>)<ul> <li>Write Allocate Policy: bring the block into the cache after a write miss</li> <li>No Write Allocate Polity: only change main memory</li> <li>Write allocate \\(\\leftrightarrow\\) write back, every slot needs an extra <code>dirty</code> bit</li> <li>No write allocate \\(\\leftrightarrow\\) write-through</li> </ul> </li> </ul> <p>Block size tradeoff:</p> <ul> <li>Benefits of larger block size<ul> <li>Spatial Locality</li> <li>Very applicable with Stored-Program Concept</li> <li>Works well for sequential array accesses</li> </ul> </li> <li>Drawbacks of larger block size<ul> <li>Larger miss penalty</li> <li>If block size is too big relative to cache size, then there are too few blocks \\(\\rightarrow\\) Higher miss rate</li> </ul> </li> </ul> <p></p> <p>Types of cache misses:</p> <ol> <li>Compulsory Misses</li> <li>Conflict Misses (Direct-Mapped Cache only)<ul> <li>Solution 1: Make the cache size bigger</li> <li>Solution 2: Multiple distinct blocks can fit in the same cache Index</li> </ul> </li> <li>Capacity Misses (primary for Fully Associative Cache)</li> </ol> <p>How to categorize misses:</p> <p></p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#block-replacement-policy","title":"Block Replacement Policy","text":"<ul> <li>LRU (Least Recently Used)</li> <li>FIFO</li> <li>Random</li> </ul>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/UCB%20CS61C/#average-memory-access-time","title":"Average Memory Access Time","text":"<p>AMAT = Hit Time \\(+\\) Miss Penalty \\(\\times\\) Miss Rate</p> Details <p>Why not \"Hit Time \\(\\times\\) Hit Rate \\(+\\) Miss Time \\(\\times\\) Miss Rate\"?</p> <p>AMAT = Hit Time \\(\\times\\) (1 \\(-\\) Miss Rate) + (Miss Penalty \\(-\\) Hit Time) \\(\\times\\) Miss Rate</p> Summary <p>Big Idea: If something is expensive but we want to do it repeatedly, do it once and cache the result</p> <p>Cache Design Choices: - size of cache: speed vs. capacity - block size - write policy - associativity choice of N - block replacement policy - 2nd level cache - 3rd level cache</p>","tags":["Computer-Architecture"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/","title":"CS:APP \u7b2c\u4e8c\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"<p>\u672c\u7ae0\u4e3b\u8981\u5185\u5bb9\u4e3a\u6574\u6570\u3001\u6d6e\u70b9\u6570\u7684\u5b58\u50a8\u4e0e\u903b\u8f91\u8fd0\u7b97\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#information-storage","title":"Information Storage","text":"<p>1 byte = 8 bits \uff0c\u4e3a memory \u7684\u6700\u5c0f\u5b58\u50a8\u5355\u5143\u7684\u5927\u5c0f\u3002</p> <p>word size \u662f\u4e3b\u8981\u7684 pointer data \u7684\u5927\u5c0f\uff0c\u4e5f\u662f virtual address space \u7684\u6700\u5927 size \u3002</p> <p>C \u8bed\u8a00\u4e2d\uff0c\u5e94\u8be5\u4f7f\u7528 <code>signed char</code> \u6765\u5f97\u5230\u4e00\u4e2a 1 byte \u7684\u6709\u7b26\u53f7\u503c\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#byte-ordering","title":"Byte Ordering","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570 <code>0x01234567</code> \uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u6709\u4e24\u79cd\u8868\u793a\u65b9\u6cd5\uff1aBig endian \u548c Little endian \u3002</p> <p>Big endian \u76f8\u5bf9\u6765\u8bf4\u66f4\u7b26\u5408\u4e60\u60ef\uff0c\u5728\u5b58\u50a8\u5355\u5143\u4e2d\uff0c\u4f4e\u4f4d address \u5b58\u50a8\u9ad8\u4f4d byte \uff0c\u5373 <code>01 23 45 67</code> \u8fd9\u6837\u4f9d\u6b21\u5b58\u50a8\u3002</p> <p>Little endian \u5219\u662f\u9ad8\u4f4d address \u5b58\u50a8\u9ad8\u4f4d byte \uff0c\u8fd9\u6837\u770b\u6765\u53c8\u663e\u5f97\u6bd4\u8f83\u7b26\u5408\u4e60\u60ef\u4e86\uff0c\u5373 <code>67 45 23 01</code> \u4f9d\u6b21\u5b58\u50a8\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u5c06\u5bc4\u5b58\u5668\u6216\u5b58\u50a8\u5355\u5143\u4e2d\u7684 bytes \u8868\u8fbe\u51fa\u6765\u4e60\u60ef\u5c06 address \u5c0f\u7684\u5199\u5728\u524d\u9762\uff0c\u6240\u4ee5 Little endian \u4f1a\u8ba9\u4eba\u611f\u89c9\u5f88\u5947\u602a\uff0c\u4f46\u662f\u5b9e\u9645\u8bbf\u95ee\u67d0\u4e2a\u5b58\u50a8\u5355\u5143\u65f6\uff0c\u6211\u4eec\u66f4\u591a\u7684\u662f\u7c7b\u4f3c\u4e8e\u6808\u4e00\u6837\u4ece\u9ad8\u4f4d\u5730\u5740\u5f00\u59cb\u5411\u4f4e\u4f4d\u5730\u5740\u4f9d\u6b21\u8bbf\u95ee\uff0c\u8fd9\u6837\u4e00\u6765\uff0cLittle endian \u4f9d\u6b21\u8bbf\u95ee\u5230\u7684 bytes \u5b9e\u9645\u4e0a\u662f\u4ece\u5c0f\u5230\u5927\u7684\u4e86\u3002</p> <p>\u8ba1\u7b97\u673a\u4f7f\u7528\u54ea\u79cd\u8868\u793a\u65b9\u5f0f\uff0c\u65e2\u4e0e CPU \u6709\u5173\u53c8\u4e0e OS \u6709\u5173\u3002</p> <p>string \u7684\u8868\u793a\u4e0e byte ordering \u65e0\u5173\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#shift-operations-in-c","title":"Shift Operations in C","text":"<p>\u5de6\u79fb\u90fd\u662f\u5f80\u4f4e\u4f4d\u8865 0 \uff0c\u53f3\u79fb\u5219\u5206\u4e3a logical \u548c arithmetic \uff0clogical \u662f\u9ad8\u4f4d\u8865 0 \uff0carithmetic \u662f\u6839\u636e\u6700\u9ad8\u4f4d\u51b3\u5b9a\u8865 0 \u8fd8\u662f 1 \u3002</p> <p>\u5bf9\u4e8e signed data \uff0c\u4e00\u822c\u4f7f\u7528 arithmetic \u3002</p> <p>\u5bf9\u4e8e unsigned data \uff0c\u5fc5\u987b\u4f7f\u7528 logical \u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#integer-representations","title":"Integer Representations","text":"<p>unsigned integer \u7684\u8868\u793a\u5c31\u662f\u4e00\u822c\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002</p> <p>signed integer \u5219\u91c7\u7528\u8865\u7801 (two\\'s-complement encoding)\uff0c\u6700\u9ad8\u4f4d\u4e3a\u7b26\u53f7\u4f4d\uff0c\u82e5 word size \u4e3a \\(\\omega\\) \uff0c\u90a3\u4e48\u6700\u9ad8\u4f4d\u8868\u793a\u4e3a \\(-2^{\\omega-1}\\cdot x_{\\omega-1}\\) \uff0c\u5176\u4f59\u4f4d\u7684\u8868\u793a\u4e0e unsigned \u76f8\u540c\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#convertions-between-signed-and-unsigned","title":"Convertions between Signed and Unsigned","text":"<p>word size \u76f8\u540c\u65f6\uff0cbit \u4f4d\u7684\u8868\u793a\u4e0d\u53d8\uff0c\u4ec5\u4ec5\u6539\u53d8\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362\u65b9\u5f0f\u3002</p> <p>\u5f53\u5224\u65ad\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u662f signed \u8fd8\u662f unsigned \u7684\u65f6\uff0c\u4e00\u822c\u51fa\u73b0\u4e86 unsigned \u5c31\u662f unsigned \uff0c\u5e76\u4e14\u4f1a\u5c06 signed \u9690\u5f0f\u8f6c\u6362\u4e3a unsigned \uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5f88\u5bb9\u6613\u53d1\u751f\u610f\u60f3\u4e0d\u5230\u7684\u9519\u8bef\uff0c\u6240\u4ee5\u4e00\u822c\u5c3d\u91cf\u4e0d\u4f7f\u7528 unsigned integer \u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#expanding-the-bit-representation","title":"Expanding the Bit Representation","text":"<p>\u5bf9\u4e8e unsigned integer \uff0c\u76f4\u63a5\u5728\u9ad8\u4f4d\u8865 0 \u3002</p> <p>\u5bf9\u4e8e signed integer \uff0c\u5219\u5728\u9ad8\u4f4d\u8865\u539f\u6765\u7684\u6700\u9ad8\u4f4d\u7684 bit \uff0c\u7c7b\u4f3c\u4e8e arithmetic right shift \u3002</p> <p>\u5982\u679c\u65e2\u8981\u589e\u52a0\u957f\u5ea6\uff0c\u53c8\u8981\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u4f1a\u5148\u589e\u52a0\u957f\u5ea6\u518d\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#truncating-numbers","title":"Truncating Numbers","text":"<p>\u5bf9\u4e8e unsigned integer \uff0c\u76f4\u63a5\u628a\u591a\u4f59\u7684\u9ad8\u4f4d\u53bb\u6389\uff0c\u5047\u8bbe\u53ea\u4fdd\u7559\u4f4e k \u4f4d bits \uff0c\u5219\u76f8\u5f53\u4e8e \\(\\bmod{\\ 2^k}\\) \u3002</p> <p>\u5bf9\u4e8e signed integer \uff0c\u5148\u8f6c\u6362\u4e3a unsigned \u518d\u505a unsigned truncation \uff0c\u4e4b\u540e\u518d\u8f6c\u6362\u56de signed \uff0c\u5176\u5b9e\u4e5f\u76f8\u5f53\u4e8e\u5bf9 \\(2^k\\) \u53d6\u6a21\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#integer-arithmetic","title":"Integer Arithmetic","text":"","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#addition-and-negation","title":"Addition and Negation","text":"<p>unsigned integer \u7684\u52a0\u6cd5\uff0c\u76f4\u63a5\u4e22\u5f03\u6ea2\u51fa\u7684\u90a3\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u6a21 \\(2^{\\omega}\\) \u3002</p> <p>\u5224\u65ad overflow \uff1a\u770b <code>s = x + y</code> \u662f\u5426\u6709 <code>s &lt; x</code> \u6216 <code>s &lt; y</code> \u3002</p> <p>unsigned integer \u7684\u53d6\u53cd\uff1a</p> \\[ -x\\mapsto\\begin{cases}     x, &amp;x=0 \\\\\\     2^{\\omega}-x, &amp;x&gt;0 \\end{cases} \\] <p>signed integer \u7684\u52a0\u6cd5\uff0c\u8fc7\u7a0b\u540c unsigned \uff0coverflow \u6709 positive overflow \u548c negative overflow \uff0c\u4ecd\u7136\u76f8\u5f53\u4e8e\u6a21 \\(2^{\\omega}\\) \u3002</p> <p>\u5224\u65ad overflow \uff1a\u8bbe <code>s = x + y</code> \uff0c\u53d1\u751f positive overflow \u5f53\u4e14\u4ec5\u5f53 <code>x &gt; 0 &amp;&amp; y &gt; 0 &amp;&amp; s &lt;= 0</code> \uff0c\u53d1\u751f negative overflow \u5f53\u4e14\u4ec5\u5f53 <code>x &lt; 0 &amp;&amp; y &lt; 0 &amp;&amp; s &gt;= 0</code> \u3002</p> <p>signed integer \u7684\u53d6\u53cd\uff1a\u5f53\u6210 unsigned \u6765\u53d6\u53cd\u5373\u53ef\uff0c\u6709</p> \\[ -x\\mapsto\\begin{cases}     TMin_{\\omega}, &amp;x=TMin_{\\omega} \\\\\\     -x, &amp;x&gt;TMin_{\\omega} \\end{cases} \\] <p>Note</p> <p>\u5728 UCB CS61C \u4e2d\u8bb2\u5230\u53ef\u4ee5\u5229\u7528 \\(x+\\bar{x}=-1\\) \u6765\u5feb\u901f\u8ba1\u7b97 \\(-x\\)\uff0c\u5373 \\(-x=\\bar{x} + 1\\)\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#multiplication","title":"Multiplication","text":"<p>\u90fd\u662f\u4e22\u9ad8\u4f4d\uff0c\u76f8\u5f53\u4e8e\u6a21 \\(2^{\\omega}\\) \u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u4e58\u6570\u662f\u5e38\u6570\uff0c\u5219\u4f1a\u4f18\u5316\u4e3a\u79fb\u4f4d\u8fd0\u7b97\u3001\u52a0\u6cd5\u8fd0\u7b97\u548c\u51cf\u6cd5\u8fd0\u7b97\u7684\u7ed3\u5408\u3002</p> <p>\u4f18\u5316\u7684\u6027\u80fd\u4e0e\u8fd9\u4e9b\u6307\u4ee4\u7684\u76f8\u5bf9\u901f\u5ea6\u3001\u673a\u5668\u672c\u8eab\u6709\u5173\u3002\u5927\u90e8\u5206\u7f16\u8bd1\u5668\u53ea\u4f1a\u5728\u53ea\u6709\u5c11\u91cf\u4f4d\u79fb\u3001\u52a0\u6cd5\u3001\u51cf\u6cd5\u7684\u60c5\u51b5\u4e0b\u91c7\u53d6\u8fd9\u79cd\u4f18\u5316\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#dividing-by-powers-of-2","title":"Dividing by Powers of 2","text":"<p>\u90fd\u4f1a\u4f18\u5316\u4e3a\u53f3\u79fb\u8fd0\u7b97\u3002</p> <p>\u5176\u4e2d unsigned integer \u662f\u76f4\u63a5 logical right shift \uff0c\u76f8\u5f53\u4e8e\u5411\u4e0b\u53d6\u6574\u4e86\u3002</p> <p>signed integer \u5219\u662f arithmetic right shift \uff0c\u6548\u679c\u4e5f\u662f\u5411\u4e0b\u53d6\u6574\uff0c\u5982\u679c\u5e0c\u671b\u5411\u4e0a\u53d6\u6574\uff08\u5bf9\u4e8e\u8d1f\u6570\u5c31\u662f\u5411\u96f6\u53d6\u6574\u4e86\uff09\uff0c\u5219\u9700\u8981\u5148\u52a0\u4e0a bias \u5728\u53f3\u79fb\uff0c\u5176\u4e2d bias \u5b9a\u4e49\u4e3a \\(2^k-1\\) \uff0ck \u662f\u8981\u53f3\u79fb\u7684\u4f4d\u6570\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#summary","title":"Summary","text":"<p>unsigned integer \u548c signed integer \u5728\u5904\u7406\u8fd9\u4e9b\u7b80\u5355\u7684\u8fd0\u7b97\u7684\u6ea2\u51fa\u65f6\u76f8\u5f53\u4e8e\u4e8e\u6a21 \\(2^{\\omega}\\) \uff0c\u8865\u7801\u7684\u8868\u793a\u65b9\u5f0f\u4f7f\u5f97\u4e8c\u8005\u5728 bit \u8868\u793a\u5c42\u9762\u8fdb\u884c\u8fd0\u7b97\u7684\u5f62\u5f0f\u4e00\u81f4\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#floating-point","title":"Floating Point","text":"<p>\u6d6e\u70b9\u6570\u7684\u8868\u793a\u4e00\u76f4\u662f\u4e2a\u96be\u9898\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#ieee-floating-point","title":"IEEE floating point","text":"<p>IEEE floating point \u5c06\u4e00\u4e2a\u6d6e\u70b9\u6570\u8868\u793a\u4e3a \\(V=(-1)^{s}\\times M\\times 2^{E}\\) \u7684\u5f62\u5f0f\u3002</p> <ol> <li>sign bit \uff0c\u4e3a\u7b26\u53f7\u4f4d \\(s\\)</li> <li>\\(n\\)-bit fraction field \uff0c\u4e3a \\(M\\) \uff0c\u4e0b\u6587\u8bb0 fraction field \u4e3a \\(f=f_{n-1}\\cdots f_1 f_0\\)</li> <li>\\(k\\)-bit exponent field \uff0c\u4e3a \\(E\\) \uff0c\u4e0b\u6587\u8bb0 exponent field \u4e3a unsigned number \\(e=e_{k-1}\\cdots e_1e_0\\)</li> </ol> <p>\u6839\u636e \\(E\\) \u7684\u4e0d\u540c\uff0c\u6d6e\u70b9\u6570\u88ab\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <ul> <li>Normalized values:</li> <li>exponent field \u4e0d\u5168\u4e3a 0 \u4e5f\u4e0d\u5168\u4e3a 1</li> <li>\\(M=1.f_{n-1}\\cdots f_1 f_0\\)</li> <li>\\(E=e-Bias\\) \uff0c\u5176\u4e2d \\(Bias=2^{k-1}-1\\)</li> <li>Denormalized values:</li> <li>exponent field \u5168\u4e3a 0</li> <li>\\(M=0.f_{n-1}\\cdots f_1 f_0\\)</li> <li>\\(E=1-Bias\\)</li> <li>Special values:</li> <li>exponent field \u5168\u4e3a 1</li> <li>\u5f53 fraction field \u5168\u4e3a 0 \u65f6\uff1a<ul> <li><code>s = 0</code> \uff0c\\(+\\infty\\)</li> <li><code>s = 1</code> \uff0c\\(-\\infty\\)</li> </ul> </li> <li>\u5f53 fraction field \u4e0d\u5168\u4e3a 0 \u65f6\uff0c\u8868\u793a <code>NaN</code></li> </ul> <p>\u5176\u4e2d\uff0c\u4e0d\u540c\u4f4d\u6570\u7684\u6d6e\u70b9\u6570\u7684\u4e0d\u540c field \u6709\u4e0d\u540c\u7684\u957f\u5ea6\uff1a</p> <ul> <li>64 \u4f4d ( <code>double</code> ) : k = 11, n = 52</li> <li>32 \u4f4d ( <code>float</code> ) : k = 8, n = 23</li> </ul> <p>\u5982\u679c\u7b80\u5355\u5730\u4f7f\u7528\u4e8c\u8fdb\u5236\u8868\u793a \\(E\\) \u548c \\(M\\) \u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>\\(E\\) \u9700\u8981\u662f\u8d1f\u6570\u624d\u80fd\u8868\u793a\u63a5\u8fd1 0 \u7684\u6570\uff0c\u5360\u7528\u4e86 \\(e\\) \u7684\u4e00\u4e2a\u4f4d\u800c\u5bfc\u81f4\u80fd\u8868\u793a\u7684\u6700\u5927\u6570\u7f29\u5c0f\u4e00\u534a</li> <li>\u82e5 \\(M=0.f_{n-1}\\cdots f_1 f_0\\) \uff0c\u5219\u4e0d\u540c\u7684 \\(E\\) \u53ef\u80fd\u4f1a\u5f97\u5230\u540c\u4e00\u4e2a\u503c\uff0c\u4e0d\u65b9\u4fbf\u8fdb\u884c\u6d6e\u70b9\u6570\u4e4b\u95f4\u7684\u6bd4\u8f83</li> </ul> <p>\u800c IEEE \u91c7\u7528\u7684\u8868\u793a\u65b9\u6cd5\uff0c</p> <ul> <li>\u52a0\u5165\u4e86 \\(Bias\\) \u89e3\u51b3\u4e86\u7b2c\u4e00\u4e2a\u95ee\u9898</li> <li>\u7279\u6b8a\u60c5\u51b5\u4e0b\u8ba9 \\(M\\) \u7684 leading bit \u53d8\u4e3a 1 \u4f7f\u5f97\u4e24\u4e2a\u6d6e\u70b9\u6570\u672c\u8eab\u7684\u5927\u5c0f\u4e0e\u5176\u4e8c\u8fdb\u5236\u7f16\u7801\u770b\u4f5c unsigned \u540e\u7684\u5927\u5c0f\u4e00\u81f4</li> </ul>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#example-numbers","title":"Example Numbers","text":"<p>exponent field \u548c fraction field \u5168\u4e3a 0 \uff0c\u8868\u793a \\(\\pm0.0\\) \u3002</p> <p>exponent field \u5168\u4e3a 0 \u800c fraction field \u6700\u4f4e\u4f4d\u4e3a 1 \u5176\u4ed6\u4f4d\u4e3a 0 \uff0c\u662f\u80fd\u8868\u793a\u7684\u6700\u63a5\u8fd1 0 \u7684\u6570\uff0c\u4e3a \\(2^{2-2^k-n}\\) \u3002</p> <p>exponent field \u6700\u9ad8\u4f4d\u4e3a 0 \u5176\u4ed6\u4f4d\u5168\u4e3a 1 \uff0cfraction field \u5168\u4e3a 0 \uff0c\u8868\u793a \\(\\pm1.0\\) \u3002</p> <p>exponent field \u6700\u4f4e\u4f4d\u4e3a 0 \u5176\u4ed6\u4f4d\u5168\u4e3a 1 \uff0cfraction field \u5168\u4e3a 1 \uff0c\u662f\u80fd\u8868\u793a\u7684\u6700\u5927\u7684\u6570\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#rounding","title":"Rounding","text":"<ul> <li>round-to-even \uff1a\u300c\u56db\u820d\u516d\u5165\u4e94\u6210\u53cc\u300d\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f</li> <li>rounf-toward-zero</li> <li>round-down</li> <li>round-up</li> </ul>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Architecture/CSAPP/Chapter%202/#floating-point-operations","title":"Floating-Point Operations","text":"<p>\u9664\u4e86\u4e00\u90e8\u5206\u7279\u6b8a\u503c\uff0c\u6d6e\u70b9\u6570\u7684\u8fd0\u7b97\u5b9a\u4e49\u4e3a\u5148\u8fdb\u884c\u7cbe\u786e\u7684\u8fd0\u7b97\u4e4b\u540e\u518d\u8fdb\u884c\u820d\u5165\u3002</p> <p>\u6d6e\u70b9\u6570\u7684\u52a0\u6cd5\u3001\u4e58\u6cd5\u4f1a\u53d1\u751f\u6ea2\u51fa\u3001\u820d\u5165\uff0c\u56e0\u6b64\u4e0d\u7b26\u5408\u7ed3\u5408\u5f8b\u3001\u5206\u914d\u5f8b\uff0c\u4f46\u662f\u6ee1\u8db3\u4ea4\u6362\u5f8b\u3002</p>","tags":["OS","CS-APP"]},{"location":"Computer%20Science/Computer%20Network/","title":"Computer Network","text":"<p>Info</p> <p>Computer Network \u76f8\u5173\u5b66\u4e60\u7b14\u8bb0\u3002</p>"},{"location":"Computer%20Science/Computer%20Network/CNATDA/","title":"None","text":"<p>Info</p> <p>\u300cComputer Networking: A Top Down Approach\u300d(8th Edition) \u5b66\u4e60\u7b14\u8bb0</p>"},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/","title":"CNATDA \u7b2c\u4e8c\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"<p>Info</p> <p>\u300cComputer Networking: A Top Down Approach\u300d(8th Edition)</p> <p>\u56e0\u4e3a\u8001\u5e08\u8bb2\u7684\u592a\u5feb\u6ca1\u529e\u6cd5\u7ec6\u8bfb\u4e66\u4e0a\u7684\u5185\u5bb9\uff0c\u4e5f\u5f88\u96be\u6709\u65f6\u95f4\u8ba4\u771f\u601d\u8003\u5199\u4e00\u4e0b\u4e00\u7bc7\u6709\u6df1\u5ea6\u7684 \uff08CNATDA \u597d\u50cf\u4ecb\u7ecd\u7684\u6df1\u5ea6\u4e5f\u4e0d\u662f\u5f88\u5927\uff09 \u5b66\u4e60\u7b14\u8bb0\uff0c\u6240\u4ee5\u8fd9\u7bc7\u7b14\u8bb0\u5f88\u5927\u7a0b\u5ea6\u4e0a \u6284\u88ad \u501f\u9274\u4e86 ouuan dalao \u7684\u7b14\u8bb0\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#principles-of-network-applications","title":"Principles of Network Applications","text":"<p>\u73b0\u4ee3\u4e3b\u8981\u4f7f\u7528\u7684 application architecture \u6709\u4e24\u79cd\uff1aclient-server \u548c peer-to-peer (P2P) .</p> <p>process \u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5728 end system \u4e0a\u8fd0\u884c\u7684 program \uff0c\u4e0d\u540c end system \u4e0a\u7684 process \u901a\u8fc7\u5728\u7f51\u7edc\u4e0a\u4ea4\u6362 messages (application layer packets) \u8fdb\u884c\u901a\u4fe1\u3002</p> <p>process \u4e0e transport layer \u4e4b\u95f4\u7684 API \u662f socket \u3002</p> <p>host \u4f7f\u7528 IP address \u8bc6\u522b\uff0cprocess (socket) \u4e4b\u95f4\u901a\u8fc7 IP + port number \u8bc6\u522b\u3002</p> <p>transport layer \u4e2d\u6700\u4e3b\u8981\u7684\u4e24\u4e2a protocol \u662f TCP \u548c UDP \u3002TCP \u63d0\u4f9b connection-oriented service (\u901a\u8fc7 handshaking \u5efa\u7acb connection) \u3001reliable data transfer (data sent without error and in order) \u3001congestion-control (\u63a7\u5236 sending rate \u6765\u51cf\u5c11 network layer \u7684\u62e5\u585e\u4ee5\u51cf\u5c11\u4e22\u5305\u91cd\u4f20) \uff0c\u800c UDP \u5219\u662f connectionless (no handshaking) \u3001unreliable (\u4e0d\u4fdd\u8bc1 message \u9001\u5230\u548c\u662f\u5426\u6709\u5e8f) \uff0c\u5e76\u4e14 sending rate \u662f\u5f88\u968f\u610f\u7684\uff0c\u4e5f\u53ef\u4ee5\u8bf4 UDP \u63d0\u4f9b\u7684\u662f\u300cbest effort\u300dservice \u3002</p> <p>application layer \u5728\u9009\u62e9 transport layer protocol \u7684\u65f6\u5019\u9700\u8981\u6839\u636e\u81ea\u8eab\u662f\u5426 loss-tolerant \u3001time-sensitive \u6765\u8003\u8651\u3002</p> <p>application-layer protocol \u51b3\u5b9a\u4e86 process \u4e4b\u95f4\u4ea4\u6362\u7684 messages \u7684 type, syntax, semantics, rules \u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0capplication-layer protocols \u53ea\u662f network application \u4e2d\u7684\u4e00\u4e2a\u90e8\u5206\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#the-web-and-http","title":"The Web and HTTP","text":"<p>HTTP (Hyper Text Transfer Protocol) \u662f Web \u7684 application-layer protocol \u3002</p> <p>HTTP \u4e0d\u7ef4\u62a4 client \u7684\u4fe1\u606f\uff0c\u662f\u4e00\u4e2a stateless protocol \u3002</p> <p>HTTP/1.0 \u3001HTTP/1.1 \u3001HTTP/2 \u4f7f\u7528\u7684\u90fd\u662f TCP \uff0c\u800c HTTP/3 \u4f7f\u7528\u7684\u662f UDP \u3002</p> <p>\u7531\u4e8e TCP \u662f connection-oriented \uff0c\u6240\u4ee5\u9700\u8981\u8003\u8651\u6bcf\u4e00\u5bf9 req/res \u9700\u8981\u5efa\u7acb\u5728\u4e0d\u540c\u8fd8\u662f\u76f8\u540c\u7684 connection \u4e0a\uff0c\u4ece\u800c\u5206\u4e3a\u4e86 non-persistent connection \u548c persistent connection \u4e24\u79cd\u3002</p> <ul> <li>non-persistent: \u6bcf\u4e00\u6b21 req/res \u90fd\u4f1a\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684 TCP connection \uff0c\u7ed3\u675f\u4e4b\u540e\u90fd\u4f1a\u5173\u95ed connection \u3002\u9700\u8981\u7684\u65f6\u95f4\u662f RTT * 2 (handshaking + req/res) + \u6587\u4ef6\u4f20\u8f93\u7528\u65f6\u3002</li> <li>persistent: \u540c\u4e00\u5bf9 client-server \u4e4b\u95f4\u7684\u6240\u6709 req/res \u5171\u7528\u4e00\u4e2a TCP connection \uff0c\u5e76\u4e14 client \u5728\u6536\u5230 response \u4e4b\u524d\u53ef\u4ee5\u4e00\u6b21\u6027\u53d1\u9001\u591a\u4e2a request (pipelining) \uff0c\u7701\u4e0b\u4e86\u591a\u6b21\u5efa\u7acb TCP connection \u7684\u65f6\u95f4\u3002</li> </ul> <p>HTTP/1.0 \u4f7f\u7528\u7684\u662f non-persistent connection \uff0cHTTP/1.1 \u548c HTTP/2 \u4f7f\u7528\u7684\u662f persistent connection \u3002</p> <p>HTTP message \u662f ASCII text \u3002</p> <p>HTTP request:</p> <p></p> <pre><code>GET /somedir/page.html HTTP/1.1\nHost: www.someschool.edu\nConnection: close\nUser-agent: Mozilla/5.0\nAccept-language: fr\n</code></pre> <p>HTTP response:</p> <p></p> <pre><code>HTTP/1.1 200 OK\nConnection: close\nDate: Tue, 18 Aug 2015 15:44:04 GMT\nServer: Apache/2.2.3 (CentOS)\nLast-Modified: Tue, 18 Aug 2015 15:11:03 GMT\nContent-Length: 6821\nContent-Type: text/html\n(data data data data data ...)\n</code></pre> <p>server \u53ef\u4ee5\u901a\u8fc7 cookies \u6765\u8bc6\u522b\u7528\u6237\uff0c\u901a\u8fc7\u5728 response \u7684 header lines \u4e2d\u52a0\u5165 <code>Set-cookie</code> \u6765\u53d1\u9001\u7528\u6237\u7684 cookies\uff0c\u4e4b\u540e client \u6bcf\u6b21\u53d1\u9001 request \u5219\u5728 header lines \u4e2d\u52a0\u5165 <code>cookie: 1678</code> \u3002</p> <p>ISP \u53ef\u4ee5\u8bbe\u7f6e Web Cache \uff0c\u7528\u6237\u5148\u5411 Web Cache \u53d1\u9001 request \uff0c\u5982\u679c cache hit \u5219\u76f4\u63a5\u53d1\u9001 response \uff0c\u5426\u5219\u5c31\u7531 web cache \u5148\u5411 origin server \u53d1\u9001 request \u7136\u540e\u518d\u5411\u7528\u6237\u53d1\u9001 response \u3002Web Cache \u7684\u5b58\u5728\u53ef\u4ee5\u51cf\u5c11\u5ef6\u8fdf\uff0c\u964d\u4f4e\u5e26\u5bbd\u538b\u529b\u3002</p> <p>client \u901a\u8fc7\u5728 header \u4e2d\u52a0\u5165 <code>If-Modified-Since:&lt;date&gt;</code> \u8fdb\u884c conditional GET \uff0c\u5982\u679c server \u68c0\u67e5\u5bf9\u5e94\u7684\u6587\u4ef6\u5728 <code>&lt;date&gt;</code> \u4e4b\u524d\u6ca1\u6709\u66f4\u6539\u8fc7\uff0c\u5c31\u53d1\u9001 body \u4e3a\u7a7a\u7684 304 Not Modified \u3002</p> <p>HTTP/2 \u4f7f\u7528\u4e86 request and response multiplexing\u3001prioritization\u3001server push \u6765\u63d0\u9ad8 server \u7aef\u53d1\u9001\u7684\u7075\u6d3b\u6027\u3002</p> <ul> <li>multiplexing: \u4f7f\u7528 persistent connection \u867d\u7136\u51cf\u5c0f\u4e86 RTT \u7684\u6b21\u6570\uff0c\u4f46\u662f\u5e26\u6765\u4e86 Head of Line (HOL) blocking (\u8f83\u5c0f\u7684\u6587\u4ef6\u9700\u8981\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u7b49\u5f85\u8f83\u5927\u6587\u4ef6\u4f20\u8f93\u5b8c\u6210\u624d\u80fd\u4f20\u8f93) \u3002HTTP/1.1 \u5c3d\u7ba1\u4f7f\u7528 persistent connection \uff0c\u4f46\u662f\u8fd8\u662f\u5efa\u7acb\u4e86\u591a\u4e2a TCP connection \u6765\u907f\u514d HOL \uff0c\u800c HTTP/2 \u5219\u662f\u5c06\u6587\u4ef6\u5206\u6210\u8f83\u5c0f\u7684 frames \uff0c\u4ea4\u66ff\u53d1\u9001\u4e0d\u540c\u6587\u4ef6\u7684 frame (interleaving) \u4ece\u800c\u51cf\u5c11\u4e86\u5c0f\u6587\u4ef6\u7684\u7b49\u5f85\u65f6\u95f4\u3002</li> <li>prioritization: client \u53d1\u9001\u591a\u6b21 request \u65f6\uff0c\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684 response \u8bbe\u7f6e\u4f18\u5148\u7ea7\uff0cserver \u901a\u8fc7\u4f18\u5148\u7ea7\u8c03\u6574 response \u7684\u53d1\u9001\u987a\u5e8f\uff0c\u53e6\u5916\uff0cclient \u8fd8\u53ef\u4ee5\u8bbe\u7f6e response \u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>push: server \u53ef\u4ee5\u5bf9\u4e00\u4e2a request \u53d1\u9001\u591a\u4e2a response \uff0c\u5c06\u5f53\u524d\u9875\u9762\u5f15\u7528\u7684\u4f46\u662f unrequested \u7684\u5176\u4ed6\u8d44\u6e90\u4e5f push \u8fc7\u53bb\u3002</li> </ul> <p>HTTP/3 \u4f7f\u7528\u57fa\u4e8e UDP \u7684 QUIC protocol \u66ff\u4ee3\u4e86 TCP \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#electronic-mail-in-the-internet","title":"Electronic Mail in the Internet","text":"<p>mail system \u4e3b\u8981\u7531 user agent\u3001mail servers \u548c SMTP \u7ec4\u6210\u3002</p> <p>\u5f53 Alice \u53d1\u9001 email \u7ed9 Bob \u65f6\uff0c\u4f1a\u5c06\u5199\u597d\u7684\u90ae\u4ef6\u901a\u8fc7\u5979\u7684 user agent \u4f20\u9012\u7ed9\u5979\u7684 mail server \uff0c\u518d\u7531 mail server \u53d1\u9001\u7ed9 Bob \u7684 mail server \uff0cBob \u901a\u8fc7\u4ed6\u7684 user agent \u4ece mail server \u4e2d\u53d6\u51fa\u90ae\u4ef6\u8fdb\u884c\u9605\u8bfb\u3002</p> <p>\u53d1\u9001\u7aef\u7684 mail server \u4f1a\u7ef4\u62a4\u4e00\u4e2a message queue \uff0c\u5982\u679c\u8981\u53d1\u9001\u7684 mail server \u5728\u5f53\u65f6\u4e0d\u53ef\u7528\uff0c\u5219\u4f1a\u9694\u4e00\u6bb5\u65f6\u95f4\u91cd\u65b0\u53d1\u9001\uff0c\u591a\u6b21\u5931\u8d25\u540e\u5219\u4f1a\u9000\u56de\u90ae\u4ef6\u3002</p> <p>\u53d1\u9001\u7aef\u7684 mail server \u5373\u4e3a SMTP client \uff0c\u63a5\u6536\u7aef\u7684 mail server \u5219\u662f SMTP server \u3002</p> <p>SMTP \u662f\u4e00\u4e2a\u4e0a\u53e4\u534f\u8bae\uff0c\u56e0\u6b64\u6574\u4e2a message \u90fd\u53ea\u80fd\u662f 7bit-ASCII \u683c\u5f0f\uff0c\u540c\u65f6\uff0c\u5b83\u4f7f\u7528\u7684\u4e5f\u662f TCP \u534f\u8bae\uff0c\u9ed8\u8ba4\u7aef\u53e3\u662f 25 \u3002</p> <pre><code>S: 220 smtp.example.com ESMTP Postfix\nC: HELO relay.example.org\nS: 250 Hello relay.example.org, I am glad to meet you\nC: MAIL FROM:&lt;bob@example.org&gt;\nS: 250 Ok\nC: RCPT TO:&lt;alice@example.com&gt;\nS: 250 Ok\nC: RCPT TO:&lt;theboss@example.com&gt;\nS: 250 Ok\nC: DATA\nS: 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;\nC: From: \"Bob Example\" &lt;bob@example.org&gt;\nC: To: \"Alice Example\" &lt;alice@example.com&gt;\nC: Cc: theboss@example.com\nC: Date: Tue, 15 Jan 2008 16:02:43 -0500\nC: Subject: Test message\nC:\nC: Hello Alice.\nC: This is a test message with 5 header fields and 4 lines in the message body.\nC: Your friend,\nC: Bob\nC: .\nS: 250 Ok: queued as 12345\nC: QUIT\nS: 221 Bye\n</code></pre> <p>SMTP \u5728\u5efa\u7acb\u5b8c TCP connection (handshaking) \u4e4b\u540e\u4f1a\u5148\u81ea\u6211\u4ecb\u7ecd\u4e00\u904d (<code>HELO</code>) \u518d\u4f20\u8f93\u6570\u636e\uff0c\u4ed6\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u4f7f\u7528\u7684\u662f\u540c\u4e00\u4e2a TCP connection \u3002</p> <p>email \u7684\u4f20\u9012\u662f user agent -&gt; mail server -&gt; mail server -&gt; user agent \uff0c\u591a\u4e00\u4e2a mail server \u4f5c\u4e3a\u4e2d\u95f4\u5a92\u4ecb\u662f\u56e0\u4e3a user agent \u7ecf\u5e38\u4e0d\u5728\u7ebf\uff0c\u4e00\u4e2a mail server \u7684\u5b58\u5728\u53ef\u4ee5\u63d0\u9ad8\u5728\u7ebf\u7387\u5e76\u5b9e\u73b0\u5931\u8d25\u91cd\u53d1\u3002</p> <p>user agent \u53d1\u9001\u5230 mail server \u7684\u8fc7\u7a0b\u53ef\u4ee5\u4f7f\u7528 SMTP/HTTP \uff0cmail server \u5230 mail server \u4f7f\u7528 SMTP \uff0c\u800c\u4ece mail server \u62c9\u53d6\u90ae\u4ef6\u5230 user agent \u4f7f\u7528\u7684\u662f HTTP/IMAP \uff0c\u4e0d\u80fd\u4f7f\u7528 SMTP \u662f\u56e0\u4e3a SMTP \u662f\u4e00\u4e2a push protocol \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#dnsthe-internets-directory-service","title":"DNS\u2014\u2014The Internet's Directory Service","text":"<p>host \u53ef\u4ee5\u7531 hostname \u548c IP \u8bc6\u522b\uff0c\u5176\u4e2d hostname \u5bf9\u4eba\u7c7b\u66f4\u53cb\u597d\uff0c\u800c IP \u5219\u5bf9 routers \u66f4\u53cb\u597d\u3002</p> <p>DNS (Domain Name System) \u7684\u4e3b\u8981\u4efb\u52a1\u5c31\u662f\u5c06 hostname \u7ffb\u8bd1\u6210 IP \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#services-provided-by-dns","title":"Services Provided by DNS","text":"<p>DNS \u662f\u7531\u4e0d\u540c\u5c42\u7ea7\u7684 DNS servers \u5171\u540c\u6784\u6210\u7684\u4e00\u4e2a distributed database \uff0c\u4e5f\u662f\u4e00\u4e2a\u8ba9 hosts \u53ef\u4ee5\u8bf7\u6c42\u8fd9\u4e2a distributed database \u7684 application-layer protocol \u3002</p> <p>DNS \u4f7f\u7528 UDP \u534f\u8bae\uff0c\u9ed8\u8ba4\u7aef\u53e3\u4e3a 53 .</p> <p>DNS \u5728\u63d0\u4f9b hostname \u5230 IP \u7684\u7ffb\u8bd1\u4e4b\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>host aliasing: \u4e00\u4e2a host \u5728\u62e5\u6709 canonical hostname \u4e4b\u5916\u8fd8\u80fd\u62e5\u6709\u591a\u4e2a alias \u3002</li> <li>mail server aliasing: \u540c\u4e00\u4e2a hostname \u5728\u4f5c\u4e3a Web server \u548c mail server \u65f6\u53ef\u4ee5\u5206\u522b\u6307\u5411\u4e0d\u540c\u7684 host \u3002</li> <li>load distribution: \u540c\u4e00\u4e2a hostname \u53ef\u4ee5\u6307\u5411\u591a\u4e2a host \uff0c\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u7684\u65f6\u5019 rotate addresses \u7684\u987a\u5e8f\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#overview-of-how-dns-works","title":"Overview of How DNS Works","text":"<p>\u5355\u70b9\u5f0f\u7684 DNS \u4f1a\u9762\u4e34\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ul> <li>a single point of failure</li> <li>traffic volume</li> <li>distant centralized database</li> <li>maintainance</li> </ul> <p>\u56e0\u6b64\uff0cDNS \u5fc5\u987b\u662f\u5206\u5e03\u5f0f\u3001\u591a\u5c42\u7ea7\u7684\u3002</p> <p>DNS \u4e00\u822c\u5206\u4e3a\u4ee5\u4e0b\u51e0\u5c42\uff1a</p> <ul> <li>root DNS server: \u5206\u5e03\u5728\u5168\u7403\u7684 13 \u4e2a root servers \u4e00\u5171\u6709\u8d85\u8fc7 1000 \u4e2a copy \uff0c\u7528\u6765\u67e5\u8be2 TLD server\u3002</li> <li>top-level domain (TLD) servers: \u6bcf\u4e2a TLD \u90fd\u6709\u81ea\u5df1\u7684 TLD server \uff0c\u7528\u6765\u67e5\u8be2 authoritative DNS servers\u3002</li> <li>authoritative DNS servers: \u6bcf\u4e2a subdomain \u90fd\u6709\u81ea\u5df1\u7684 authoritative DNS server \uff0c\u7528\u6765\u67e5\u8be2 hostname \u5230 IP \u7684\u6620\u5c04\u3002</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0cTLD servers \u548c authoritative DNS servers \u4e4b\u95f4\u8fd8\u53ef\u80fd\u6709 intermediate DNS server (IXP) \u3002</p> <p>\u53e6\u5916\uff0cISP \u4e00\u822c\u90fd\u4f1a\u6709\u4e00\u4e2a local DNS server (default name server) \uff0c\u4f5c\u4e3a proxy \u4ee3\u66ff host \u5411 DNS server \u8fdb\u884c\u67e5\u8be2\u3002</p> <p>\u5728\u5411 DNS server \u67e5\u8be2\u65f6\uff0c\u5206\u4e3a iterative query (\u5206\u522b\u5411\u4e0d\u540c\u7684 DNS server \u67e5\u8be2) \u548c recursive query (\u7531\u5f53\u524d\u67e5\u8be2\u7684 DNS server \u66ff\u4f60\u5411\u5176\u4ed6 DNS server \u67e5\u8be2) \uff0c\u5b9e\u9645\u4e2d\uff0crequesting host \u5230 local DNS server \u7684\u67e5\u8be2\u662f recursive \u7684\uff0c\u800c local DNS server \u4ece root DNS server \u5f00\u59cb\u5411\u4e0b\u67e5\u8be2\u662f iterative \u7684\u3002</p> <p>\u4e3a\u4e86\u51cf\u5c11\u67e5\u8be2\u7684\u6570\u91cf\uff0cDNS \u91c7\u7528\u4e86 caching \u7684\u529e\u6cd5\u3002\u6bcf\u4e2a\u67e5\u8be2\u7684\u53d1\u8d77\u8005\u90fd\u4f1a\u5c06\u67e5\u8be2\u7ed3\u679c\u4fdd\u5b58\u4e00\u6bb5\u65f6\u95f4\uff0c\u76f4\u5230 cache miss \u624d\u4f1a\u53d1\u8d77\u67e5\u8be2\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#dns-records-and-messages","title":"DNS Records and Messages","text":"<p>DNS distributed database \u7684\u5b58\u50a8\u5355\u5143\u662f RR (resource record) \u3002</p> <p>RR \u662f\u4e00\u4e2a\u56db\u5143\u7ec4 (Name, Value, Type, TTL) \uff0cTTL \u8868\u793a cache \u591a\u4e45\u8fc7\u671f\uff0cName \u548c Value \u7684\u542b\u4e49\u7531 Type \u51b3\u5b9a\u3002\u5e38\u89c1\u7684 Type \u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>A: name = hostname, value = IP address, \u4ee3\u8868\u4e00\u4e2a hostname \u5230 IP \u5730\u5740\u7684\u6620\u5c04\u3002</li> <li>NS: name = domain, value = name server \u7684 hostname \uff0c\u4ee3\u8868\u53ef\u4ee5\u5728\u8fd9\u4e2a name server \u8fdb\u884c\u8fd9\u4e2a domain \u7684\u4e0b\u4e00\u6b65\u67e5\u8be2\u3002</li> <li>CNAME: name = alias hostname, value = canonical hostname \uff0c\u7528\u6765\u4f7f\u7528 host aliasing \u3002</li> <li>MX: name = alias hostname, value = canonical hostname \uff0c\u7528\u6765\u4f7f\u7528 mail server aliasing \u3002</li> </ul> <p>hostname \u5bf9\u5e94\u7684 authoritative DNS server \u4f1a\u5305\u542b\u5bf9\u5e94\u7684 A record \uff0c\u800c\u5176\u4ed6\u7684 authoritative DNS servers \u5219\u4f1a\u5305\u542b\u5b83\u7684 NS record \u3002</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u81ea ouuan's blog \u3002</p> type name value NS <code>.</code> <code>a.root-servers.net.</code> A <code>a.root-servers.net.</code> <code>198.41.0.4</code> NS <code>moe.</code> <code>ns1.dns.nic.moe.</code> A <code>ns1.dns.nic.moe.</code> <code>156.154.144.114</code> NS <code>ouuan.moe.</code> <code>amos.ns.cloudflare.com.</code> A <code>amos.ns.cloudflare.com.</code> <code>172.64.35.120</code> A <code>ouuan.moe.</code> <code>172.67.181.123</code> <p>DNS \u6700\u65e9\u53ea\u80fd\u901a\u8fc7\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u7b49\u65b9\u5f0f\u9759\u6001\u66f4\u65b0\uff0c\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 DDNS \u901a\u8fc7 DNS message \u8fdb\u884c\u52a8\u6001\u66f4\u65b0\u3002</p> <p>DNS message \u683c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>identification \u8868\u793a\u8fd9\u662f query \u8fd8\u662f reply \uff0c\u7531 client \u8bbe\u7f6e\u3002</p> <p>flags \u5305\u62ec\uff1a</p> <ul> <li>query/reply: \u8868\u793a\u8fd9\u6761 message \u662f query \u8fd8\u662f reply \u3002</li> <li>authoritative or not: \u8868\u793a\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u5426\u662f\u6700\u7ec8\u7ed3\u679c\u3002</li> <li>recursion desired: client \u662f\u5426\u5e0c\u671b server \u8fdb\u884c recursive query \u3002</li> <li>recursion available: \u8868\u793a server \u662f\u5426\u53ef\u4ee5\u8fdb\u884c recursive query \u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#peer-to-peer-file-distribution","title":"Peer-to-Peer File Distribution","text":"<p>P2P \u67b6\u6784\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u662f self-scalable \u7684\u3002</p> <p>\u6700\u6d41\u884c\u7684 P2P file distribution protocol \u662f BitTorrent \uff0c\u5b83\u4ee5 chunk \u4e3a\u57fa\u672c\u4e0b\u8f7d\u5355\u4f4d\u3002\u5728\u4e00\u4e2a peer \u521a\u52a0\u5165 torrent \u65f6\u53ea\u80fd\u4ece\u5176\u4ed6 peer \u4e0b\u8f7d chunk\uff0c\u83b7\u53d6\u5230\u4e00\u4e9b trunk \u540e\u5c31\u4f1a\u4e0a\u4f20\u7ed9\u5176\u4ed6 peer \u3002</p> <p>\u6bcf\u4e2a torrent \u90fd\u4f1a\u6709\u4e00\u4e2a tracker \uff0cpeer \u7684\u52a0\u5165\u548c\u79bb\u5f00\u90fd\u4f1a\u901a\u77e5 tracker \uff0c\u5e76\u4e14\u4f1a\u5728\u8fc7\u7a0b\u4e2d\u5b9a\u671f\u544a\u77e5 tracker \u81ea\u5df1\u4ecd\u5728\u6d3b\u52a8\uff0ctracker \u4f1a\u7ed9\u6bcf\u4e2a peer \u5176\u4ed6 peer \u7684 IP \u5730\u5740\u4e0e\u7aef\u53e3\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%202/#video-streaming-and-content-distribution-networks","title":"Video Streaming and Content Distribution Networks","text":"<p>\u4e0a\u8bfe\u7684\u65f6\u5019\u8001\u5e08\u6ca1\u8bb2\uff0c\u867d\u7136\u6211\u540e\u6765\u8fd8\u662f\u628a\u8fd9\u90e8\u5206\u5185\u5bb9\u770b\u5b8c\u4e86\uff0c\u4f46\u662f\u65f6\u95f4\u539f\u56e0\uff0c\u5b66\u4e60\u7b14\u8bb0\u5c31\u5148\u5495\u4e86\uff0c\u540e\u9762\u6709\u7a7a\u7684\u65f6\u5019\u518d\u5199\u3002</p> <p>CDN \u8fd8\u662f\u633a\u91cd\u8981\u7684\u4e3a\u4ec0\u4e48\u4e0d\u8bb2\uff1f</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/","title":"CNATDA \u7b2c\u4e09\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#introduction-and-transport-layer-services","title":"Introduction and Transport-Layer Services","text":"<p>transport layer \u5c06 application layer messages \u5c01\u88c5\u6210 segments\uff0c\u7136\u540e\u4ea4\u7ed9 network layer \u8fdb\u884c\u4f20\u8f93\uff0c\u5c06 network layer \u63d0\u4f9b\u7684 logical communication between hosts \u6269\u5c55\u4e3a logical communication between processes\u3002</p> <p>\u6700\u4e3b\u8981\u7684\u4e24\u4e2a transport layer protocol \u662f TCP \u548c UDP\uff0c\u5176\u4e2d UDP unreliable\u3001connectionless \u7684\uff0cTCP reliable\u3001connection-oriented \u7684\u3002</p> <p>UDP \u4ec5\u4ec5\u63d0\u4f9b data delivery \u548c error checking \u7684\u670d\u52a1\uff0c\u4e0d\u4fdd\u8bc1 datagram \u662f\u5426\u9001\u8fbe\u3001\u662f\u5426\u6709\u5e8f\uff0c\u662f\u5426\u5b8c\u6574\u3001\u6b63\u786e\uff0c\u4e5f\u4e0d\u4f1a\u63a7\u5236\u4f20\u8f93\u901f\u5ea6\u3002</p> <p>TCP \u5219\u63d0\u4f9b reliable data transfer\u3001flow control\u3001\u4fdd\u8bc1 datagram \u6b63\u786e\u3001\u6709\u5e8f\u9001\u8fbe\uff0c\u8fd8\u4f1a\u63d0\u4f9b congestion control\u3002</p> <p>\u800c network layer protocol \u6700\u91cd\u8981\u7684 IP protocol \u63d0\u4f9b\u7684\u662f\u4e00\u4e2a best-effort delivery (unreliable) \u670d\u52a1\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#multiplexing-and-demultiplexing","title":"Multiplexing and Demultiplexing","text":"<p>\u5728 transport layer \u4e2d\uff0cmultiplexing \u6307 sender \u7684 transport layer \u5c06\u4e0d\u540c socket \u7684 message \u6536\u96c6\u5e76\u53d1\u9001\u7ed9 network layer \u7684\u8fc7\u7a0b\uff0c\u800c demultiplexing \u6307 receiver \u7684  transport layer \u5c06 network layer \u53d1\u9001\u6765\u7684 datagrams \u62c6\u5206\u540e\u4f20\u9012\u7ed9\u5bf9\u5e94\u7684 socket \u7684\u8fc7\u7a0b\u3002</p> <p>multiplexing \u548c demultiplexing \u9700\u8981\u6bcf\u4e2a socket \u6709 unique identifier\u3002</p> <p>UDP socket \u7684 identifier \u4e3a\u4e8c\u5143\u7ec4 <code>(dest IP addr, dest port num)</code> \uff0c\u5b83\u4e5f\u4f1a\u5b58\u6709 source port number \u7b49\u5176\u4ed6 field\uff0c\u4f46\u662f\u4e0d\u4f5c\u4e3a identifier\u3002</p> <p>TCP socket \u7684 identifier \u4e3a\u56db\u5143\u7ec4 <code>(src IP addr, src port num, dest IP addr, dest port num)</code>\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#connectionless-transport-udp","title":"Connectionless Transport: UDP","text":"<p>UDP \u4ec5\u63d0\u4f9b multiplexing/demultiplexing \u548c error checking\u3002\u4e00\u4e9b application \u9009\u62e9 UDP \u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u51e0\u70b9\u539f\u56e0\uff1a</p> <ul> <li>\u66f4\u597d\u5730\u63a7\u5236\u53d1\u9001\u4ec0\u4e48\u6570\u636e\u3001\u4ec0\u4e48\u65f6\u5019\u53d1\u9001\uff1aTCP \u6709 congestion control\uff0c\u53ef\u4ee5\u4f1a\u5ef6\u8fdf\u53d1\u9001\u6570\u636e\uff0c\u800c\u4e14\u4f1a\u9519\u8bef\u91cd\u4f20\u5bfc\u81f4\u53d1\u9001\u8f83\u6162\u3002</li> <li>\u4e0d\u9700\u8981\u5efa\u7acb\u8fde\u63a5\uff1a\u5efa\u7acb\u8fde\u63a5\u7684\u8fc7\u7a0b\u4f1a\u4ea7\u751f delay\u3002</li> <li>\u65e0\u8fde\u63a5\u72b6\u6001\uff1a\u53ef\u4ee5\u51cf\u5c0f\u7cfb\u7edf\u8d44\u6e90\u6d88\u8017\u3002</li> <li>\u8f83\u5c0f\u7684 header\uff1aTCP segment header \u957f\u5ea6\u901a\u5e38\u4e3a 20 bytes\uff0c\u800c UDP \u53ea\u6709 8 bytes\u3002</li> </ul> <p>\u4f46\u662f\uff0c\u5728\u4f7f\u7528 UDP \u4f20\u8f93\u5927\u91cf\u6570\u636e\u65f6\uff0c\u4f1a\u5bfc\u81f4 packet overflow at routers\uff0cUDP \u4e22\u5305\u4e25\u91cd\uff0cTCP \u4f20\u8f93\u8fc7\u6162\u3002</p> <p>UDP datagram header \u5171\u6709 4 \u4e2a fields\uff0c\u6bcf\u4e2a\u957f\u5ea6\u90fd\u662f 2 bytes\u3002</p> <ul> <li>length\uff1a\u8bb0\u5f55 UDP segment \u7684\u603b\u957f\u5ea6\u3002</li> <li>checksum\uff1a\u5bf9\u6240\u6709 16-bit \u7684\u6570\u636e\u6c42\u548c\u540e\u4f7f\u7528 1s complement \u68c0\u6d4b\u662f\u5426\u5168\u4e3a 1\u3002</li> <li>source port</li> <li>destination port</li> </ul> <p>UDP \u7684 checksum \u4ec5\u4ec5\u8fdb\u884c error detecting\uff0c\u4e0d\u4f1a\u8fdb\u884c error correcting\uff0c\u5f53\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03/\u901a\u77e5 application\u3002</p> <p>\u5c3d\u7ba1\u5f88\u591a link layer protocol \u4e5f\u63d0\u4f9b\u4e86 error checking\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u8def\u4e0a\u6240\u6709\u7684 link layer \u90fd\u63d0\u4f9b\u4e86\uff0c\u540c\u65f6 error \u4e5f\u4e0d\u4e00\u5b9a\u662f link-to-link \u7684\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\uff0c\u56e0\u6b64 UDP \u4ecd\u7136\u9700\u8981\u63d0\u4f9b checksum \u7684\u670d\u52a1\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#principles-of-reliable-data-transfer","title":"Principles of Reliable Data Transfer","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#stop-and-wait","title":"Stop-And-Wait","text":"<p>\u5728 stop-and-wait \u4e2d\uff0csender \u6bcf\u6b21\u9700\u8981\u6536\u5230 receiver \u53d1\u9001\u7684\u5bf9\u5e94\u7684 ACK/NAK \u624d\u4f1a\u53d1\u9001\u4e0b\u4e00\u4e2a packet\u3002</p> <ul> <li>checksum\uff1a\u4f20\u8f93\u8fc7\u7a0b\u53ef\u80fd\u51fa\u9519\uff0c\u9700\u8981\u8fdb\u884c error detection\u3002</li> <li>acknowledgment\uff1areceiver \u9700\u8981\u544a\u77e5 sender \u662f\u5426\u4e22\u5305\u3001\u51fa\u73b0\u9519\u8bef\u3002</li> <li>retransmission\uff1a\u4e22\u5305\uff08\u8d85\u65f6\uff09\u6216\u8005\u6536\u5230 NAK \u65f6\u9700\u8981\u91cd\u4f20\u3002</li> <li>timeout\uff1a\u51fa\u73b0\u4e22\u5305\u73b0\u8c61\u9700\u8981\u4f7f\u7528 timeout \u6765\u8fdb\u884c\u5224\u65ad\u3002timeout \u7684\u65f6\u95f4\u592a\u957f\u4f1a\u5f71\u54cd\u6027\u80fd\uff0c\u6240\u4ee5\u4e00\u822c\u8bbe\u7f6e\u4e3a\u6709\u53ef\u80fd\u4e22\u5305\u4f46\u662f\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\u662f\u5426\u662f\u4e22\u5305\u7684\u503c\u3002</li> <li>sequence number\uff1asender \u53d1\u9001\u7684 packet \u4e0e receiver \u53d1\u9001\u7684 ACK \u90fd\u6709\u76f8\u5e94\u7684 sequence number\u3002\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0cACK \u4e5f\u6709\u53ef\u80fd\u51fa\u9519\uff0c\u4ece\u800c\u5bfc\u81f4 duplicate packet\uff0c\u56e0\u6b64\u52a0\u4e0a sequence number \u6765\u8bc6\u522b duplicate packet\u3002\u53e6\u5916\uff0c\u5728 stop-and-wait \u4e2d\uff0csequence number \u4ec5\u7531 0/1 \u7ec4\u6210\uff0c\u56e0\u6b64\u53c8\u88ab\u79f0\u4e3a alternating-bit protocol\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#pipelined-reliable-data-transfer","title":"Pipelined Reliable Data Transfer","text":"<p>\u7531\u4e8e\u662f stop-and-wait \u7684\u673a\u5236\uff0c\u6240\u4ee5\u6027\u80fd\u4e0d\u9ad8\u3002</p> <p>\u5b9a\u4e49 sender \u7684 utilization \u7684\u5927\u5c0f\u4e3a sender \u5b9e\u9645\u5728\u4f20\u8f93\u7684\u65f6\u95f4\u4e0e\u603b\u65f6\u95f4\u7684\u6bd4\u503c\uff0c\u5728 stop-and-wait protocol \u4e2d\uff0c\u5927\u5c0f\u7ea6\u4e3a \\(U_{\\mathrm{sender}}=\\dfrac{L/R}{RTT+L/R}\\) \uff0c\u5b9e\u9645\u503c\u975e\u5e38\u5c0f\u3002</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u5c31\u662f\u8ba9 sender \u65e0\u9700\u7b49\u5f85\u5373\u53ef\u4e00\u6b21\u4f20\u8f93\u591a\u4e2a packets\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53eb pipelining\uff0c\u4f7f\u7528\u8fd9\u79cd\u529e\u6cd5\u4e5f\u610f\u5473\u7740\uff1a</p> <ul> <li>sequence number \u6570\u91cf\u589e\u5927\u3002</li> <li>sender \u548c receiver \u90fd\u9700\u8981 buffer \u66f4\u591a\u7684 packets\u3002</li> </ul> <p>\u6709\u4e24\u79cd\u57fa\u7840\u7684\u5b9e\u73b0\u65b9\u6cd5\uff1aGo-Back-N \u548c selective repeat\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#go-back-n-gbn","title":"Go-Back-N (GBN)","text":"<p>window \u7684\u5927\u5c0f\u6536\u5230 packet \u4e2d sequence number \u7684 field \u7684\u9650\u5236\uff0c\u82e5 sequence number field \u7684\u957f\u5ea6\u4e3a \\(k\\)\uff0c\u5219 window size \u4e3a \\(2^k\\)\uff0csequence number \u8303\u56f4\u4e3a \\([0,2^k-1]\\)\u3002</p> <p></p> <p>sender: - \u4f7f\u7528\u4e00\u4e2a sliding window \u8868\u793a\u5f53\u524d\u6709\u6548\u7684 sequence number \u7684\u8303\u56f4\u3002 - \u5982\u679c window \u5185\u6240\u6709 sequence number \u90fd\u88ab\u4f7f\u7528\u4e86\u5c31\u4e0d\u80fd\u53d1\u9001\u65b0\u7684 packet\u3002 - \u6536\u5230\u7684 ACK \u88ab\u79f0\u4e3a cumulative acknowledgement\uff0c\u5373 sequence number \u5c0f\u4e8e\u5f53\u524d ACK \u7684 number \u7684\u672a\u88ab ACK \u7684 packets \u4e5f\u4f1a\u88ab\u89c6\u4e3a ACK'd \u3002 - \u6536\u5230\u4e00\u4e2a ACK \u5c31\u4f1a\u5c06 window \u6ed1\u5230\u5b83\u5bf9\u5e94 sequence number \u540e\u9762\u3002 - \u6240\u6709\u7684\u672a\u88ab ACK \u7684 packets \u5171\u7528\u4e00\u4e2a timer\u3002 - retransmit \u65f6\u4f1a\u91cd\u53d1\u6240\u6709\u672a\u88ab ACK \u7684 packets\u3002</p> <p></p> <p>receiver: \u53ea\u63a5\u6536\u987a\u5e8f\u6b63\u786e\u7684 packet\uff0c\u5426\u5219\u4f1a\u76f4\u63a5\u4e22\u5f03\uff0c\u800c\u5982\u679c\u662f\u987a\u5e8f\u6b63\u786e\u4f46\u662f\u51fa\u73b0\u9519\u8bef\u7684 packet \u5219\u4f1a\u901a\u8fc7\u53d1\u9001\u4e0a\u4e00\u4e2a packet \u7684 ACK \u8fdb\u884c NAK\u3002</p> <p>GBN \u76f8\u5bf9 selective repeat \u7684\u4f18\u52bf\u5728\u4e8e receiver \u4e0d\u9700\u8981 buffer\uff0c\u4f46\u662f\u76f8\u5e94\u7684\uff0c\u4e00\u4e2a packet \u51fa\u9519\u5c31\u8981\u91cd\u53d1\u6240\u6709\u672a\u88ab ACK \u7684 packets\uff0c\u9020\u6210\u4e86\u5f88\u591a\u6d6a\u8d39\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#selective-repeat-sr","title":"Selective Repeat (SR)","text":"<p>sender:</p> <ul> <li>window \u9664\u4e86\u7b2c\u4e00\u4e2a\u4e00\u5b9a\u662f\u672a\u88ab ACK \u7684\u5176\u4f59\u90fd\u6709\u53ef\u80fd\u662f ACK \u6216\u8005\u672a\u88ab ACK \u7684\u3002</li> <li>\u6bcf\u4e2a packet \u7684 ACK\uff0ctimer\uff0cretransmission \u90fd\u662f\u72ec\u7acb\u7684\u3002</li> <li>\u6536\u5230\u5f00\u5934\u7684 ACK \u65f6 window \u6ed1\u52a8\u5230\u7b2c\u4e00\u4e2a\u672a\u88ab ACK \u5904\u3002</li> </ul> <p>receiver\uff1a</p> <ul> <li>\u540c\u6837\u7ef4\u62a4\u4e00\u4e2a sliding window\uff0cwindow size \u53ef\u80fd\u4e0e sender \u4e0d\u540c\uff0c\u7b2c\u4e00\u4e2a\u662f\u5c1a\u672a\u6536\u5230\u7684\u6700\u5c0f\u7684 packet\u3002</li> <li>\u6536\u5230\u975e window \u5f00\u5934\u7684\u4f1a buffer \u4e0b\u6765\u3002</li> <li>\u6536\u5230 window \u5f00\u5934\u7684\u4f1a\u5c06\u5176\u4e0e buffer \u4e2d\u5b58\u50a8\u7684\u8fde\u7eed\u7684\u4e00\u6574\u6bb5\u4f20\u7ed9 application layer\uff0c\u7136\u540e\u6ed1\u52a8 window\u3002</li> <li>\u6536\u5230\u6bd4 window \u5f00\u5934\u5c0f\u7684 packet \u65f6\u8bf4\u660e\u4e4b\u524d\u7684 ACK \u4f20\u8f93\u51fa\u4e86\u95ee\u9898\uff0c\u4ecd\u7136\u9700\u8981\u53d1\u9001 ACK\u3002</li> <li>\u5982\u679c\u6536\u5230 packet \u5b58\u5728 error\uff0c\u5219\u4e22\u5f03\u4e0d\u7ba1</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f sender \u548c receiver \u7684 window size \u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u4f46\u662f\u90fd\u4e0d\u80fd\u8d85\u8fc7 sequence number \u5927\u5c0f\u8303\u56f4\u7684\u4e00\u534a\u3002</p> <p>\u4e0d\u7ba1\u662f GBN \u8fd8\u662f SR\uff0csequence number \u7684\u8303\u56f4\u90fd\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u662f\u5faa\u73af\u4f7f\u7528\u7684\uff0c\u5982\u679c\u4e00\u4e2a duplicate packet/ACK \u7684\u4f20\u8f93\u8017\u65f6\u8fc7\u4e45\u5bfc\u81f4\u5360\u7528\u4e86\u73b0\u6709\u7684 sequence number\uff0c\u5b9e\u8df5\u4e2d\u7684\u89e3\u51b3\u529e\u6cd5\u662f\u8ba4\u5b9a\u4e00\u4e2a packet/ACK \u5728\u4f20\u8f93\u51e0\u5206\u949f\u4e4b\u540e\u5c31\u6ca1\u4e86\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#connection-oriented-transport-tcp","title":"Connection-Oriented Transport: TCP","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#the-tcp-connection","title":"The TCP Connection","text":"<p>TCP \u88ab\u79f0\u4e3a connection-oriented \u662f\u56e0\u4e3a\u5f53\u4e24\u4e2a process \u4e4b\u95f4\u80fd\u591f\u4f20\u8f93 data \u4e4b\u524d\u9700\u8981\u5148\u8fdb\u884c handshake\u3002</p> <p>TCP \u9700\u8981\u5148\u5efa\u7acb connection\uff0c\u8fd9\u4e2a connection \u53ea\u662f logical \u7684\uff0c\u662f\u5728\u4e24\u4e2a end system \u4e0a\u5efa\u7acb\u4e00\u4e9b state variable\uff0c\u6ca1\u6709 physical \u4e0a\u7684\u8fde\u63a5\u3002</p> <p>TCP connection \u662f full-duplex \u7684\uff0c\u5373\u53cc\u65b9\u5efa\u7acb\u8fde\u63a5\u4e4b\u540e\u4e92\u76f8\u53ef\u4ee5\u53d1\u9001\u4fe1\u606f\uff1b\u662f point-to-point \u7684\uff0c\u4e0d\u80fd\u8fdb\u884c multicasting\u3002</p> <p>TCP connection \u901a\u8fc7 three-way handshake \u5efa\u7acb\uff0c\u5728 handshake \u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u5efa\u7acb send/receive buffer\uff0c\u53d1\u9001/\u6536\u5230 message \u65f6\u4f1a\u5148\u653e\u5165 send/receive buffer \u7136\u540e\u518d\u4f20\u9012\u7ed9 application/link layer\u3002</p> <p>TCP \u4f1a\u6839\u636e MTU (maximum transmission unit\uff0c\u6700\u5927\u7684\u80fd\u4f20\u8f93\u7684 link layer frame size) \u8ba1\u7b97\u51fa\u5408\u9002\u7684 MSS (maximum segment size\uff0csegment \u5305\u542b data \u7684\u6700\u5927 size) \u4f7f\u5f97 data \u52a0\u4e0a TCP header \u548c IP header \u540e\u4e0d\u8d85\u8fc7 MTU\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#tcp-segment-structure","title":"TCP Segment Structure","text":"<p>TCP \u7684 header \u957f\u5ea6\u901a\u5e38\u662f 20 bytes\uff0c\u4f46\u662f Options \u662f\u53ef\u53d8\u957f\u5ea6\u7684\uff0c\u6240\u4ee5\u4e5f\u4e0d\u4e00\u5b9a\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#sequence-numbers-and-acknowledgment-numbers","title":"Sequence Numbers and Acknowledgment Numbers","text":"<p>TCP \u5c06 data \u89c6\u4e3a\u4e00\u4e2a\u65e0\u7ed3\u6784\u4f46\u6709\u5e8f\u7684 byte stream\u3002sequence number \u6307\u7684\u662f\u5f53\u524d segment \u7684 data \u7684\u7b2c\u4e00\u4e2a byte \u5728 byte stream \u4e2d\u7684\u5e8f\u53f7\uff1backnowledgment number \u6307\u7684\u662f\u671f\u5f85\u5bf9\u65b9\u4e0b\u4e00\u4e2a\u4f20\u9001\u6765\u7684 segment \u7684 sequence number\u3002</p> <p>\u7531\u4e8e TCP \u53ea\u4f1a acknowledge \u5b83\u91cd\u65b0\u7ec4\u6210\u7684 byte stream \u4e2d\u7684\u7b2c\u4e00\u4e2a missing byte\uff0c\u6240\u4ee5\u4e5f\u88ab\u79f0\u4e3a cumulative acknowledgments\u3002</p> <p>\u5f53 TCP \u6536\u5230 out-of-order segments \u65f6\uff0c\u53ef\u4ee5\u9009\u62e9\u4e22\u5f03\u6216\u8005\u5c06\u5176 buffer \u4e0b\u6765\u5e76\u7b49\u5f85 missing bytes\uff0c\u663e\u7136\u540e\u8005\u5bf9\u4e8e\u7f51\u7edc\u5e26\u5bbd\u7684\u5229\u7528\u66f4\u9ad8\u6548\uff0c\u4e5f\u662f\u5b9e\u8df5\u4e2d\u91c7\u7528\u7684\u529e\u6cd5\u3002</p> <p>\u4e3a\u4e86\u5c3d\u53ef\u80fd\u51cf\u5c0f\u6536\u5230\u7684\u4e0a\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 connection \u4e2d\u4ecd\u7136\u7559\u5b58\u5728 network \u4e2d\u7684 segment \u7684 sequence number \u4e0e\u73b0\u5728\u5408\u6cd5\u7684 sequence number \u641e\u6df7\uff0cTCP \u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u521d\u59cb\u7684 sequence number\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#round-trip-time-estimation-and-timeout","title":"Round-Trip Time Estimation and Timeout","text":"<p>\u4e00\u4e2a segment \u7684 sample RTT (\\(s\\)) \u6307\u7684\u662f\u4ece\u53d1\u9001\u5230\u6536\u5230\u5bf9\u5e94\u7684 ACK \u7684\u7528\u65f6\u3002</p> <p>TCP \u4e00\u822c\u5728\u8ba1\u7b97\u67d0\u4e2a segment \u7684 sample RTT \u540e\u4e0d\u4f1a\u518d\u8ba1\u7b97\u540c\u65f6\u4e5f\u5728\u4f20\u8f93\u7684\u5176\u4ed6 segment \u7684 sample RTT\uff0c\u800c\u4e14\u53ea\u4f1a\u8ba1\u7b97\u4e00\u4e2a\u5c31\u4f20\u8f93\u6210\u529f\u7684 segment\uff0c\u4e0d\u4f1a\u8ba1\u7b97 retransmitted segment \u7684 sample RTT\u3002</p> <p>\u7531\u4e8e network \u7684\u62e5\u5835\u60c5\u51b5\u4f1a\u53d8\u5316\uff0c\u6240\u4ee5\u53e6\u5916\u8fd8\u9700\u8981\u8ba1\u7b97\u8fd9\u4e9b sample RTT \u7684 EWMA (exponential weighted moving average) \u4f5c\u4e3a estimated RTT (\\(e\\)) \u6765\u5e73\u7f13 RTT \u7684\u6ce2\u52a8\uff1a\\(e=(1-\\alpha)\\cdot e+\\alpha\\cdot s\\) \u3002</p> <p>\u4f7f\u7528 dev RTT (\\(d\\)) \u6765\u8861\u91cf RTT \u7684\u6ce2\u52a8\uff1a\\(d=(1-\\beta)\\cdot d+\\beta\\cdot |s-e|\\) \u3002</p> <p>\\(\\alpha\\) \u548c \\(\\beta\\) \u7684\u5efa\u8bae\u53d6\u503c\u4e3a 0.125 \u548c 0.25 \u3002</p> <p>time interval (\\(t\\)) \u5728 estimated RTT \u7684\u57fa\u7840\u4e0a\u6839\u636e dev RTT \u63d0\u4f9b\u4e86\u4e00\u5b9a\u7684\u5197\u4f59\uff1a\\(t=e+4\\cdot d\\) \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#reliable-data-transfer","title":"Reliable Data Transfer","text":"<p>TCP \u4e00\u822c\u53ea\u4f7f\u7528\u4e00\u4e2a timer\uff0c\u662f\u7528\u6765\u7ed9\u6700\u65e9\u7684\u672a\u88ab ACK \u7684 packet \u8ba1\u65f6\u7684\uff0c\u5e76\u4e14\u6bcf\u6b21 timeout \u53ea\u4f1a retransmit \u8fd9\u4e00\u4e2a packet\u3002</p> <ul> <li> <p>doubling the timeout interval\uff1a\u6bcf\u6b21\u53d1\u751f retransmission \u65f6\uff0cTCP \u4f1a\u5c06\u4e0b\u4e00\u4e2a time interval \u7ffb\u500d\uff0c\u800c\u4e0d\u662f\u7531 estimated RTT \u548c dev RTT \u8ba1\u7b97\u5f97\u5230\u3002\u4f46\u662f\u4e00\u65e6\u5728\u6536\u5230 application \u4f20\u6765\u7684 data \u6216\u8005\u6536\u5230 ACK \u540e\u91cd\u542f\u7684 timer \u7684 time interval \u7684\u503c\u4ecd\u7136\u8bbe\u7f6e\u4e3a \\(t=e+4\\cdot d\\) \u3002</p> </li> <li> <p>fast retransmit\uff1adoubling the timeout interval \u867d\u7136\u80fd\u51cf\u5c0f\u56e0\u987a\u5e8f\u9519\u8bef\u5bfc\u81f4\u6536\u5230 duplicate ACK \u7684\u6b21\u6570\uff0c\u4f46\u662f\u589e\u52a0\u4e86 end-to-end delay\u3002\u7531\u4e8e\u591a\u4e8e 2 \u4e2a duplicate ACKs \u53ef\u4ee5\u8868\u660e\u9519\u8bef\u539f\u56e0\u4e0d\u662f\u987a\u5e8f\u95ee\u9898\uff08\u8f83\u5927 number \u7684 packet \u5148\u5230\u8fbe\uff09\u800c\u662f\u4e22\u5305\uff0c\u56e0\u6b64 TCP \u5728\u6536\u5230 3 \u4e2a duplicate ACKs\uff08\u76f8\u540c sequence number \u7684\u7b2c\u56db\u4e2a ACK\uff09\u65f6\u4f1a\u5728 time out \u524d\u7acb\u5373\u91cd\u53d1\u3002</p> </li> </ul> <p>TCP \u53ea\u7ef4\u62a4\u6700\u5c0f\u7684\u672a\u88ab ACK \u7684 sequence number (sender) \u548c\u987a\u5e8f\u6b63\u786e\u7684 sequence number (receiver)\uff0c\u8fd9\u70b9\u4e0a\u770b\u7c7b\u4f3c GBN\uff0c\u4f46\u662f TCP \u6bcf\u6b21\u53ea\u4f1a\u91cd\u4f20\u4e00\u4e2a packet\uff0c\u800c receiver \u4e5f\u4f1a buffer \u987a\u5e8f\u9519\u8bef\u7684 packets\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#flow-control","title":"Flow Control","text":"<p>sender \u548c receiver \u90fd\u4f1a\u53e6\u5916\u7ef4\u62a4\u4e00\u4e2a buffer \u5b58\u50a8 packets\uff0csender \u6536\u5230 application \u7684 data \u4f1a buffer \u4e0b\u6765\u4e0d\u4e00\u5b9a\u7acb\u5373\u53d1\u9001\uff0creceiver \u6536\u5230 packet \u4e5f\u4f1a buffer \u4e0b\u6765\u7b49\u5f85 application \u8bfb\u53d6\u3002</p> <p>\u4e3a\u4e86\u9632\u6b62 sender \u53d1\u9001\u8fc7\u5feb\u5bfc\u81f4 receiver \u7684 buffer overflow\uff0cTCP \u63d0\u4f9b\u4e86 flow control \u7684\u670d\u52a1\u3002</p> <p>TCP \u7684 header \u9700\u8981\u5305\u542b rwnd (receive window) \u7528\u6765\u8868\u793a buffer \u7684\u5269\u4f59\u7a7a\u95f4\uff0csender \u5219\u9700\u8981\u4fdd\u8bc1\u53d1\u51fa\u7684\u672a\u88ab ACK \u7684 packets \u6570\u91cf\u4e0d\u8d85\u8fc7 rwnd\u3002</p> <p>\u5bf9\u4e8e receiver\uff1a\\(\\mathrm{rwnd=RcvBuffer-[lastByteRcvd-LastByteRead]}\\)</p> <p>\u5bf9\u4e8e sender\uff1a\\(\\mathrm{LastByteSent-LastByteAcked\\le rwnd}\\)</p> <p>\u5f53 \\(\\mathrm{rwnd}=0\\) \u65f6\u4f1a\u5bfc\u81f4 sender \u65e0\u6cd5\u53d1\u9001 packet \u5373\u4f7f receiver \u4e4b\u540e\u62e5\u6709\u4e86\u53ef\u7528 buffer\uff0c\u56e0\u6b64\u9700\u8981 sender \u5728\u8fd9\u4e4b\u540e\u7ee7\u7eed\u53d1\u9001\u5927\u5c0f\u4e3a 1 byte \u7684 segment\uff0c\u800c receiver \u6709\u4e86\u53ef\u7528\u7684 buffer \u540e\u4f1a ACK \u8fd9\u4e2a segment\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#tcp-connection-management","title":"TCP Connection Management","text":"<p>three-way handshake\uff1a</p> <ol> <li>client \u53d1\u9001 SYN bit \u4e3a 1 \u7684 SYN segment\uff0c\u5e76\u4e14 data \u4e3a\u7a7a\uff0crand \u4e00\u4e2a initial sequence number (client_isn) \u3002</li> <li>server \u63a5\u6536\u5230 SYN segment \u540e\u5206\u914d TCP buffer \u548c variables \u7ed9\u8fd9\u4e2a connection\uff0c\u7136\u540e\u53d1\u9001 SYN bit \u4e3a 1\uff0cacknowledge number \u4e3a client_isn + 1 \uff0cdata \u4e3a\u7a7a\u7684 SYNACK segment\uff0c\u5e76\u4e14 rand \u4e00\u4e2a initial sequence number (server_isn) \u3002</li> <li>client \u6536\u5230 SYNACK segment \u540e\u5206\u914d buffer \u548c variables \u7ed9\u8fd9\u4e2a connection\uff0c\u7136\u540e\u53d1\u9001 SYN bit \u4e3a 0\uff0cacknowledge number \u4e3a sever_isn + 1 \uff0cdata \u4e3a\u7a7a\u7684 ACK segment\uff0c\u5e76\u4e14\u53ef\u4ee5\u6dfb\u52a0 data\u3002</li> </ol> <p>\u65ad\u5f00\u8fde\u63a5\u65f6\uff0c\u53cc\u65b9\u90fd\u8981\u4e92\u53d1 FIN bit \u4e3a 1 \u7684 FIN segment\uff0c\u6536\u5230\u4e4b\u540e\u90fd\u9700\u8981\u53d1\u9001\u5bf9\u5e94\u7684 ACK\uff0c\u5e76\u4e14\u63d0\u51fa\u65ad\u5f00\u8fde\u63a5\u7684\u4e00\u65b9\u4f1a\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u65ad\u5f00\u8fde\u63a5\u6765\u8ba9\u5bf9\u65b9\u6709\u673a\u4f1a\u5728 ACK \u4e22\u5305\u65f6\u91cd\u4f20 FIN segment\u3002</p> <p>\u5982\u679c\u5c1d\u8bd5\u8fde\u63a5\u4e00\u4e2a\u4e0d\u63a5\u53d7 TCP connection \u7684\u7aef\u53e3\uff0c\u4f1a\u6536\u5230 RST bit \u4e3a 1 \u7684 RST segment\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#principles-of-congestion-control","title":"Principles of Congestion Control","text":"<p>congestion \u4f1a\u5bfc\u81f4\uff1a</p> <ul> <li>large queue delay</li> <li>router buffer overflow \u5bfc\u81f4\u4e22\u5305\u548c retransmission</li> <li>large delay \u5bfc\u81f4 premature timeout \u4ece\u800c\u5bfc\u81f4 unneeded retransmission</li> <li>\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e00\u4e2a router \u51fa\u73b0\u4e22\u5305\uff0c\u5219\u524d\u9762\u6240\u6709 router \u7684\u5de5\u4f5c\u90fd\u6d6a\u8d39\u4e86</li> </ul> <p>congestion control \u4e3b\u8981\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li>end-to-end: network layer \u4e0d\u63d0\u4f9b\u4efb\u4f55\u6709\u5173 congestion \u7684\u4fe1\u606f\uff0c\u4ec5\u7531 retransmission \u548c delay \u7684\u589e\u52a0\u6765\u63a8\u65ad\u51fa congestion</li> <li>network-assisted: router \u63d0\u4f9b congestion feedback\uff08\u4f8b\u5982\u7528\u4e00\u4e2a bit \u8868\u793a\u662f\u5426 congested\uff0c\u6216\u8005\u63d0\u4f9b\u66f4\u590d\u6742\u7684\u4fe1\u606f\uff0c\u5982 maximum host sending rate\uff09\uff0c\u53ef\u4ee5\u662f\u7531 router \u53d1\u9001\u4e00\u4e2a\u65b0\u7684 packet\uff0c\u4e5f\u53ef\u4ee5\u662f router \u4fee\u6539\u6b63\u5728\u4f20\u8f93\u7684\u67d0\u4e2a packet \u7684\u76f8\u5173 field\uff0c\u7136\u540e\u7531 receiver \u901a\u77e5 sender\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#tcp-congestion-control","title":"TCP Congestion Control","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#classic-tcp-congestion-control","title":"Classic TCP Congestion Control","text":"<p>sender \u4f1a\u4f7f\u7528\u4e00\u4e2a congestion window (\\(\\mathrm{cwnd}\\)) \u6765\u9650\u5236\u53d1\u9001\u7684\u901f\u7387\uff0c\u4f7f\u5f97 \\(\\mathrm{LastByteSent-LastByteAcked\\le \\min\\{cwnd, rwnd\\}}\\)\uff0c\u4ece\u800c\u53d1\u9001\u7684\u901f\u7387\u5927\u7ea6\u4e3a \\(\\mathrm{cwnd/RTT}\\).</p> <p>classic TCP congestion control \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u539f\u5219\uff1a</p> <ul> <li>\u4e22\u5305\u610f\u5473\u7740 congestion\uff0c\u56e0\u800c sender \u5e94\u8be5\u8981\u51cf\u5c0f \\(\\mathrm{cwnd}\\)</li> <li>ACK \u8868\u660e\u6ca1\u6709 congestion\uff0c\u56e0\u800c sender \u53ef\u4ee5\u589e\u5927 \\(\\mathrm{cwnd}\\)</li> <li>\u53ef\u4ee5\u4e0d\u65ad\u589e\u5927 \\(\\mathrm{cwnd}\\) \u6765\u8bd5\u63a2\u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u9001 congestion</li> </ul> <p>TCP congestion-control algorithm \u4e3b\u8981\u6709 3 \u4e2a\u90e8\u5206\uff1a</p> <ul> <li>slow start: \u521d\u59cb\u72b6\u6001\u4ee5\u53ca timeout \u540e\u5230\u8fbe\u7684\u72b6\u6001\u3002\u4ece \\(\\mathrm{cwnd=1\\,MSS}\\) \u5f00\u59cb\uff0c\u6bcf\u6536\u5230\u4e00\u4e2a ACK \u5c31\u589e\u5927 \\(\\mathrm{1\\,MSS}\\)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a RTT \\(\\mathrm{cwnd}\\) \u7ffb\u500d\uff0c\u76f4\u5230 \\(\\mathrm{cwnd\\ge ssthresh}\\) \u8fdb\u5165 congestion avoidance\u3002</li> <li>congestion avoidance: \u6bcf\u4e2a ACK \u589e\u5927 \\(\\mathrm{MSS\\cdot (MSS/cwnd)}\\)\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a RTT \u589e\u5927 \\(\\mathrm{1\\,MSS}\\)\u3002</li> <li>fast recovery: \u6536\u5230 3 \u4e2a duplicate ACK \u540e\u4f1a\u8fdb\u884c fast retransmit\uff0c\u4e4b\u540e\u8f6c\u79fb\u5230 fast recovery\u3002\u4ece \\(\\mathrm{cwnd=ssthresh+3\\, MSS}\\) \u5f00\u59cb\uff0c\u6bcf\u6b21\u518d\u6536\u5230\u4e00\u4e2a duplicate ACK \u5c31\u589e\u5927 \\(\\mathrm{1\\, MSS}\\)\uff0c\u6536\u5230 new ACK \u5219\u8f6c\u79fb\u5230 congestion avoidance\u3002</li> </ul> <p></p> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u5728 congestion avoidance \u548c fast recovery \u4e4b\u95f4\u53cd\u590d\u5207\u6362\uff0c\u6b64\u65f6 cwnd \u7684\u589e\u957f\u662f\u7ebf\u6027\u7684\uff0c\u51cf\u5c11\u5219\u662f\u51cf\u534a\uff0c\u79f0\u4e3a additive-increase, multiplicateive-decrease (AIMD)\uff0cAIMD \u7684 congestion control \u4f1a\u5bfc\u81f4 cwnd \u5448\u73b0\u952f\u9f7f\u72b6\u7684\u53d8\u5316\u3002</p> <p>\u4e0a\u9762\u63cf\u8ff0\u7684\u6240\u6709\u5185\u5bb9\u52a0\u8d77\u6765\u662f TCP Reno\uff0c\u5982\u679c\u7528 slow start \u66ff\u4ee3 fast recovery \u5219\u662f\u66f4\u53e4\u8001\u7684 TCP Tahoe\u3002</p> <p>TCP Reno \u7684\u4e0a\u5347\u66f2\u7ebf\u662f\u7ebf\u6027\u7684\uff0c\u4e0d\u80fd\u5feb\u901f\u6062\u590d\u5230\u63a5\u8fd1 congestion \u7684\u4e34\u754c\u503c\uff0c\u5bf9\u5e26\u5bbd\u7684\u5229\u7528\u4e0d\u662f\u5f88\u9ad8\u6548\uff0cTCP CUBIC \u5219\u662f\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\u4f18\u5316\u540e\u7684\u7248\u672c\u3002</p> <p>\u8bb0 \\(W_{max}\\) \u4e3a TCP \u68c0\u6d4b\u5230\u4e22\u5305\u65f6\u7684 cwnd \u7684\u5927\u5c0f\uff0c\\(k\\) \u4e3a cwnd \u91cd\u65b0\u589e\u957f\u5230 \\(W_{max}\\) \u7684\u5927\u6982\u65f6\u95f4\uff0c\u5f53\u5f53\u524d\u65f6\u95f4\u8ddd\u79bb \\(k\\) \u8f83\u8fdc\u7684\u65f6\u5019\u5219\u5feb\u901f\u589e\u52a0 cwnd\uff0c\u63a5\u8fd1 \\(k\\) \u7684\u65f6\u5019\u5219\u7f13\u6162\u589e\u52a0\uff0c\u5373\u4fbf\u8d85\u8fc7\u4e86 \\(W_{max}\\) \u4f46\u662f\u6ca1\u6709\u68c0\u6d4b\u5230\u4e22\u5305\u65f6\u4e5f\u9075\u5faa\u540c\u6837\u7684\u89c4\u5219\u3002</p> <p></p> <p>\u6839\u636e TCP Reno \u7684\u7ebf\u6027\u589e\u957f\u7684\u7279\u6027\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5927\u81f4\u7684\u5e73\u5747 throughput \u4e3a \\(\\dfrac{0.75\\cdot W}{RTT}\\)\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#network-assisted-explicit-congestion-notification-and-delayed-based-congestion-control","title":"Network-Assisted Explicit Congestion Notification and Delayed-based Congestion Control","text":"<p>Explicit Congestion Control (ECN) \u662f\u4e00\u79cd network-assisted congestion control\uff0c\u5b83\u5bf9 TCP \u548c IP \u7684 header \u90fd\u8fdb\u884c\u4e86\u6269\u5c55\u3002</p> <p>ECN \u5728 IP datagram header \u4e2d\u4f7f\u7528\u4e86\u4e24\u4e2a bit\uff0c\u4e00\u4e2a\u7ed9 router \u6765\u8868\u793a\u662f\u5426 congested\uff08\u4e00\u822c\u5728\u5b9e\u9645\u53d1\u751f\u524d\u8bbe\u7f6e\uff09\uff0c\u53e6\u4e00\u4e2a\u7ed9 sender \u8bbe\u7f6e\u6765\u544a\u8bc9 router \u81ea\u5df1\u548c receiver \u662f\u5426\u662f ECN-capable \u7684\u3002</p> <p>\u5f53 receiver \u6536\u5230 router \u7684 congestion \u4fe1\u606f\u540e\uff0c\u4f1a\u5728 ACK \u4e2d\u8bbe\u7f6e ECE (explicit congestion notification echo) flag\uff0csender \u6536\u5230\u540e\u4f1a\u5c06 cwnd \u51cf\u534a\uff0c\u7136\u540e\u5728\u4e0b\u4e00\u4e2a segment \u4e2d\u8bbe\u7f6e CWR (congestion window reduced) flag\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#delayed-based-congestion-control","title":"Delayed-based Congestion Control","text":"<p>delay-based congestion control \u4e5f\u80fd\u5728\u4e22\u5305\u53d1\u751f\u524d\u5c31\u68c0\u6d4b\u5230 congestion\u3002</p> <p>TCP Vegas \u4f1a\u7ef4\u62a4\u5386\u53f2\u6700\u5927\u7684 throughput (\\(\\mathrm{cwnd/RTT}\\))\uff0c\u5982\u679c\u5f53\u524d\u7684 throughput \u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u5219\u8bf4\u660e\u53d1\u751f\u4e86 congestion\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#fairness","title":"Fairness","text":"<p>\u5047\u8bbe\u5f53\u524d\u6709 \\(K\\) \u4e2a TCP connection \u5171\u7528\u4e00\u4e2a transmission rate \u4e3a \\(R\\) \u7684 bottleneck link\uff0c\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u6570\u636e\u4f20\u8f93\u3002\u5982\u679c\u6bcf\u4e2a connection \u7684\u5e73\u5747 throughput \u90fd\u662f \\(R/K\\)\uff0c\u5219\u79f0\u4f7f\u7528\u7684 congestion control mechanism \u662f fair \u7684\u3002</p> <p>\u5728\u5404\u65b9\u7684 RTT \u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0cAIMD \u662f fair \u7684\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u4f46\u662f\u5f53\u5404\u65b9 RTT \u4e0d\u540c\u65f6\uff0cRTT \u66f4\u5c0f\u7684\u5f80\u5f80\u53ef\u4ee5\u83b7\u5f97\u66f4\u5927\u7684 throughput\u3002</p> <p>UDP \u662f\u6ca1\u6709 congestion control \u7684\uff0c\u4f1a\u5bfc\u81f4 unfairness\u3002\u53e6\u5916\uff0capplication layer \u53ef\u80fd\u4f1a\u4f7f\u7528\u591a\u4e2a parallel TCP connection \u4e5f\u4f1a\u5bfc\u81f4 unfairness\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%203/#evolution-of-transport-layer-functionality","title":"Evolution of Transport-Layer Functionality","text":"<p>\u73b0\u5728\u6709\u8bb8\u591a\u79cd\u4e0d\u540c\u7684 TCP/UDP \u7248\u672c\uff0c\u4e22\u5f03\u4e86\u67d0\u4e9b\u539f\u6709\u7684\u529f\u80fd/\u65b0\u589e\u52a0\u4e00\u4e9b\u529f\u80fd\u6765\u9002\u5e94\u65b0\u7684\u73af\u5883\u3002</p> <p>QUIC \u662f\u4e00\u4e2a\u57fa\u4e8e UDP \u7684 application layer protocol\uff0c\u5177\u6709\u4ee5\u4e0b feature:</p> <ul> <li>connection-oriented and secure\u3002\u9700\u8981 handshake \u6765\u5efa\u7acb\u8fde\u63a5\uff0c\u5e76\u4e14\u6240\u6709\u6570\u636e\u52a0\u5bc6\u3002connection-establishment handshake \u548c authentication and encryption handshake \u88ab\u5408\u5e76\u5728\u4e86\u4e00\u8d77\uff0c\u4ece\u800c\u6bd4 TLS \u66f4\u5feb\u3002</li> <li>stream\u3002\u4ee5 stream \u4e3a\u5355\u4f4d\u4f20\u8f93 application data\uff0c\u800c\u591a\u4e2a stream \u53ef\u4ee5\u653e\u5728\u5355\u4e2a packet \u4e2d\u4f20\u8f93\u3002</li> <li>reliable, TCP-friendly congestion-controlled data transfer\u3002\u5176\u4e2d in-order delivery \u662f\u5bf9\u6bcf\u4e2a stream \u5206\u522b\u4fdd\u5e8f\uff0c\u800c\u4e00\u4e2a stream \u53ef\u4ee5\u653e\u5728\u4e0d\u540c\u7684 packet \u4e2d\uff0c\u6240\u4ee5\u4e0d\u540c stream \u4e4b\u95f4\u4e0d\u4f1a\u5e26\u6765\u963b\u585e (HOL blocking)\u3002\u53e6\u5916\u4e5f\u91c7\u53d6\u4e86\u4e0e TCP \u7c7b\u4f3c\u7684 congestion control\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/","title":"CNATDA \u7b2c\u56db\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"<p>\u4f60\u53e3\u5b89\u8ba1\u7f51\u600e\u4e48\u5185\u5bb9\u53c8\u591a\u8bfe\u65f6\u53c8\u5c11\u8003\u7684\u8fd8\u65e9\u554a\uff08\u607c\uff09</p> <p>\u7b2c\u4e09\u7ae0\u8bb2\u7684\u592a\u5feb\u6ca1\u6765\u53ca\u770b\u4e66\uff0c\u5c31\u5148\u5495\u5495\u5495\u4e86\u3002</p> <p>\u73b0\u5728\u8865\u5b8c\u7b2c\u4e09\u7ae0\u4e86</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#overview-of-network-layer","title":"Overview of Network Layer","text":"<p>Network layer \u53ef\u4ee5\u7ec6\u5206\u6210\u4e24\u4e2a\u90e8\u5206\uff1adata plane \u548c control plane\u3002</p> <p>data plane \u7684\u4e3b\u8981\u529f\u80fd\u662f forwarding\uff08\u4e5f\u53eb\u505a switching \uff09\uff0c\u4e5f\u5c31\u662f\u7531 router \u51b3\u5b9a\u5c06 input link \u6536\u5230\u7684\u6570\u636e\u8f6c\u53d1\u5230\u54ea\u4e2a output link\u3002</p> <p>router \u4e2d\u4f7f\u7528\u4e00\u4e2a forwarding table\uff0c\u6839\u636e packet header \u4e2d\u7684\u67d0\u4e9b fields \u6765 index forwarding table\uff0c\u4ece\u800c\u5f97\u5230 outgoing link interface\u3002</p> <p>control plane \u7684\u4e3b\u8981\u529f\u80fd\u662f routing\uff0c\u5373\u51b3\u5b9a\u4ece sending host \u5230 receiving host \u5230\u8def\u5f84\u3002</p> <p>\u8ba1\u7b97 forwarding table \u4e5f\u662f control plane \u7684\u4efb\u52a1\uff0c\u5b83\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ul> <li>the traditional approach\uff1arouter \u4e4b\u95f4\u901a\u8fc7 router protocol \u8fdb\u884c\u901a\u4fe1\uff0c\u7136\u540e\u4f7f\u7528 routing algorithm \u8ba1\u7b97\u5f97\u5230 forwarding table\u3002</li> <li>the SDN approach\uff1arouter \u53ea\u8fdb\u884c forwarding\uff0crouting \u7531\u4e00\u4e2a remote controller \u5b8c\u6210\u2014\u2014router \u5411 remote controller \u53d1\u9001\u4fe1\u606f\uff0c\u7531 remote controller \u8ba1\u7b97\u5f97\u5230 forwarding table \u53d1\u9001\u7ed9 router\u3002\u8fd9\u4e2a remote controller \u901a\u5e38\u7531\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a software-defined networking\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#whats-inside-a-router","title":"What's Inside a Router?","text":"<p>router  \u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>input ports:</li> <li>incoming link \u7684 physical layer \u548c link layer</li> <li>look up:<ul> <li>\u4ece forwarding table \u67e5\u627e\u5bf9\u5e94\u7684 output port</li> <li>\u5c06 control packets forward \u5230 routing processor</li> </ul> </li> <li>\u5b58\u5728 input queue</li> <li>switching fabric: \u8fde\u63a5 input ports \u548c output ports</li> <li>output ports:</li> <li>outgoing link \u7684 physical layer \u548c link layer</li> <li>\u5b58\u5728 output queue</li> <li>routing processor: \u6267\u884c control-plane \u7684\u529f\u80fd\uff0c\u8ba1\u7b97 forwarding table\uff0c\u8fdb\u884c network management</li> <li>traditional: \u6267\u884c routing protocols</li> <li>SDN: \u4e0e remote controller \u8fdb\u884c\u901a\u4fe1</li> </ul> <p>input ports\u3001output ports \u548c switching fabric \u901a\u5e38\u4f7f\u7528\u786c\u4ef6\u5b9e\u73b0\uff0c\u8fd9\u6837\u4f7f\u5f97 forwarding \u7684\u901f\u7387\u5728 ns \u7ea7\u4ece\u800c\u4fdd\u8bc1\u901a\u4fe1\u901f\u7387\u3002\u800c control plane \u7684\u529f\u80fd\u4e00\u822c\u53ea\u9700\u4fdd\u6301\u5728 ms \u6216 s \u7ea7\uff0c\u53ef\u4ee5\u7528\u8f6f\u4ef6\u5b9e\u73b0\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#input-port-processing-and-destination-based-forwarding","title":"Input Port Processing and Destination-Based Forwarding","text":"<p>forwarding table \u4e00\u822c\u7531 routing processors \u66f4\u65b0\u6216\u8005\u63a5\u6536\u81ea\u4e00\u4e2a remote SDN controller\u3002</p> <p>\u591a\u4e2a input ports \u53ef\u4ee5\u5408\u5e76\u5728\u4e00\u4e2a line card \u4e0a\uff0cforwarding table \u4f1a\u4ece routing processor \u7ed9\u6bcf\u4e2a line card \u590d\u5236\u4e00\u4efd\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5c40\u90e8\u5206\u522b\u8ba1\u7b97\u3002</p> <p>destination-based forwarding \u7684 forwarding table \u4e00\u822c\u4ee5 IP \u5730\u5740\u524d\u7f00\u4e3a index\uff0clink interface \u4e3a value \u8fdb\u884c longest prefix matching\u3002</p> <p>lookup \u9700\u8981\u5728 ns \u7ea7\u522b\u5b9e\u73b0\uff0c\u800c forwarding table \u4e00\u822c\u5f88\u5927\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u4f7f\u7528\u7279\u6b8a\u7684\u7b97\u6cd5\u6216\u5b58\u50a8\u5668\u3002</p> <p>input ports \u7684 processing \u8fd8\u9700\u8981\u5305\u62ec physical-layer \u548c link-layer processing\uff0c\u5bf9 packets \u7684 version number\u3001checksum\u3001TTL \u7684\u68c0\u67e5\u4e0e\u66f4\u6539\uff0c\u5bf9 network management \u7684 couters \u8fdb\u884c\u66f4\u65b0\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#switching","title":"Switching","text":"<p>switching \u6709\u591a\u79cd\u5f62\u5f0f\uff1a</p> <ul> <li>via memory: \u4ece input port \u590d\u5236\u5230 memory \u518d\u590d\u5236\u5230 output port\uff0c\u5982\u679c\u4f7f\u7528\u96c6\u4e2d\u7684 memory \u800c\u4e0d\u662f\u6bcf\u4e2a line card \u5355\u72ec\u7684 memory \u4f1a\u5bfc\u81f4\u4f20\u8f93\u901f\u7387\u6536\u5230 memory \u7684\u901f\u7387\u9650\u5236\uff0c\u800c\u4e14\u4e00\u6b21\u53ea\u80fd\u4f20\u8f93\u4e00\u4e2a packet</li> <li>via a bus: \u5c06 packet \u52a0\u4e0a\u4e00\u4e2a label \u7136\u540e\u901a\u8fc7 bus \u4f20\u8f93\u5230\u6240\u6709\u7684 output port\uff0c\u6839\u636e label \u51b3\u5b9a\u662f\u5426\u7559\u4e0b\uff0c\u4f20\u8f93\u901f\u7387\u6536\u5230 bus \u7684\u901f\u7387\u9650\u5236\uff0c\u4e00\u6b21\u53ea\u80fd\u4f20\u8f93\u4e00\u4e2a packet</li> <li>via an interconnection network: \u6bcf\u4e2a input port \u5bf9\u5e94\u4e00\u4e2a bus\uff0c\u6bcf\u4e2a output port \u5bf9\u5e94\u4e00\u4e2a bus\uff0c\u6bcf\u5bf9 input port bus \u548c output port bus \u4e4b\u95f4\u90fd\u6709 crosspoint\uff0c\u901a\u8fc7\u63a7\u5236 crosspoint \u6765\u63a7\u5236\u4ece\u54ea\u4f20\u5230\u54ea\u3002\u8fd9\u662f non-blocking \u7684\uff0c\u53ea\u8981\u4e24\u4e2a pakcet \u7684 output port \u4e0d\u540c\u5c31\u80fd\u540c\u65f6\u4f20\u8f93\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#input-queuing","title":"Input Queuing","text":"<p>\u5982\u679c switching fabric \u7684\u901f\u7387\u5927\u4e8e\u6240\u6709 input port \u7684\u901f\u7387\u4e4b\u548c\uff0c\u5219\u4e00\u822c\u4e0d\u4f1a\u53d1\u751f input queuing\uff0c\u4f46\u662f\u5982\u679c\u5b83\u4eec\u7684 output port \u90fd\u76f8\u540c\u7684\u8bdd\u8fd8\u662f\u4f1a\u5b58\u5728 queuing\u3002</p> <p>\u4ee5 switching via interconnection network \u4e3a\u4f8b\uff0c\u4e00\u4e2a packet \u5373\u4f7f\u6ca1\u6709\u548c\u5b83 output port \u76f8\u540c\u7684 packet \u4e5f\u53ef\u80fd\u56e0\u4e3a input queue \u4e2d\u5728\u5b83\u524d\u9762\u7684\u5176\u4ed6 packet \u800c\u88ab block\uff0c\u5373 HOL blocking\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#output-queueing","title":"Output Queueing","text":"<p>\u5982\u679c packet \u5230\u8fbe output port \u7684\u901f\u7387\u8d85\u8fc7\u4e86 output line \u7684\u901f\u7387\u5219\u4f1a\u53d1\u751f output queuing\u3002</p> <p>\u5f53 packet \u5230\u8fbe output port \u7684\u65f6\u5019 buffer \u6ee1\u4e86\u5219\u9700\u8981\u8003\u8651\u4e22\u5f03\u54ea\u4e2a packet\u3002\u5728 buffer \u6ee1\u4e4b\u524d\u8fdb\u884c pakcet dropping \u6216\u8005 marking \u79f0\u4e3a active queue management (AQM)\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#how-much-buffer-is-enough","title":"How Much Buffer Is \"Enough\" ?","text":"<p>\u5b58\u5728 \\(N\\) \u4e2a TCP connection flow \u7ecf\u8fc7\u4e00\u4e2a\u5e26\u5bbd\u4e3a \\(C\\) \u7684 link \u65f6\uff0c\u9700\u8981\u7684 buffer \u5927\u5c0f\u4e3a \\(\\mathrm{B=RTT\\cdot C/\\sqrt{N}}\\)\u3002</p> <p>\u62e5\u6709\u66f4\u5927\u7684 buffer \u867d\u7136\u80fd\u51cf\u5c11 loss\uff0c\u4f46\u662f\u4e5f\u4f1a\u5e26\u6765\u66f4\u5927\u7684 queuing delay\u3002TCP \u53ef\u80fd\u4f1a\u4f7f\u5f97 buffer \u4e00\u76f4\u4e0d\u88ab\u6e05\u7a7a\uff0c\u4ece\u800c\u5bfc\u81f4 queuing delay \u662f constant \u4e14 persistent \u7684\uff0c\u8fd9\u88ab\u79f0\u4e3a\u662f bufferfloat\uff0c\u53ef\u4ee5\u901a\u8fc7\u91c7\u53d6 AQM \u6765\u51cf\u7f13\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#packet-scheduling","title":"Packet Scheduling","text":"<p>\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>FIFO (First In First Out)</li> <li>priority queuing: \u4f18\u5148\u7ea7\u9ad8\u7684\u5148\u5f00\u59cb\u4f20\u8f93</li> <li>weight fair queuing (WFQ): \u7ed9\u6bcf\u4e2a class \u4e00\u4e2a\u6743\u91cd\u6765\u4f9d\u6b21\u4f20\u8f93\uff0c\u4fdd\u8bc1\u8fd9\u4e2a class \u7684\u4f20\u8f93\u9891\u7387\u662f \\(\\frac{w_i}{\\sum w}\\)</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#the-internet-protocol-ip","title":"The Internet Protocol (IP)","text":"<p>\u73b0\u5728\u4f7f\u7528\u6700\u591a\u7684 Internet protocol \u662f IPv4 \uff0c\u540c\u65f6 IPv6 \u4e5f\u5728\u9010\u6e10\u53d6\u4ee3 IPv4 \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#ipv4-datagram-format","title":"IPv4 Datagram Format","text":"<p>IPv4 \u7684 datagram \u683c\u5f0f\u5982\u4e0b\u3002</p> <p></p> <ul> <li>version number: \u957f\u5ea6\u4e3a 4 bit \uff0c\u8868\u793a IP \u534f\u8bae\u7684\u7248\u672c\u3002</li> <li>header length: \u7531\u4e8e\u975e\u5b9a\u957f\u7684 options field \u7684\u5b58\u5728\uff0c\u9700\u8981\u7528 header length \u8868\u793a header \u7684\u957f\u5ea6\uff0c\u4f46\u662f\u4e00\u822c options \u4e3a\u7a7a\uff0c\u6240\u4ee5 header length \u4e00\u822c\u4e3a 20 byte \u3002</li> <li>type of service (TOS) : \u7528\u6765\u533a\u5206\u4e0d\u540c\u7c7b\u522b\u7684 datagram \u3002</li> <li>datagram length: header + data \u7684\u957f\u5ea6\u3002</li> <li>identifier\u3001flags\u3001fragmentation offset: \u8f83\u5927\u7684 datagram \u4f1a\u88ab\u5206\u6210\u4e00\u4e9b\u8f83\u5c0f\u7684 datagram \u5e76\u5206\u522b forward \uff0c\u8fd9\u4e9b\u662f\u7528\u6765\u8bc6\u522b\u5b83\u4eec\u7684\u3002</li> <li>time-to-live: \u6bcf\u88ab\u4e00\u4e2a router \u52a0\u5de5\u5c31\u4f1a\u51cf\u5c11 1 \uff0c\u6210\u4e3a 0 \u7684\u65f6\u5019\u5c31\u4f1a\u88ab\u4e22\u5f03\uff0c\u7528\u6765\u9632\u6b62\u6b7b\u5faa\u73af\u3002</li> <li>protocol: \u53ea\u4f1a\u5728\u5230\u8fbe\u7ec8\u70b9\u7684 network layer \u65f6\u4f7f\u7528\uff0c\u8868\u660e\u5e94\u8be5\u4ea4\u7ed9\u54ea\u4e2a transport layer \u7684\u534f\u8bae\u3002</li> <li>header checksum: \u68c0\u9a8c bit errors \uff0cheader \u90e8\u5206\u6bcf 2 bytes \u7d2f\u52a0\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u518d\u53d6\u53cd\uff0c\u68c0\u67e5\u662f\u5426\u4e0e\u5b58\u50a8\u5728\u8fd9\u4e2a field \u7684\u503c\u76f8\u540c\u3002\u82e5\u4e0d\u540c\uff0c\u5219\u76f4\u63a5\u4e22\u5f03\u3002</li> <li>source and destination IP address: \u8d77\u70b9\u4e0e\u7ec8\u70b9\u7684 IP \u5730\u5740\u3002</li> <li>options: \u5141\u8bb8 IP header \u5f97\u4ee5\u62d3\u5c55\uff0c\u4f46\u662f\u5f88\u5c11\u88ab\u4f7f\u7528\u5230\u3002</li> <li>data (payload): \u5305\u62ec transport layer \u7684 segment \uff0c\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u578b\u7684 data \uff0c\u5982 ICMP messages \u3002</li> </ul> <p>\u5982\u679c options \u4e3a\u7a7a\uff0c\u5219\u4e00\u4e2a IP header \u957f\u5ea6\u662f 20 bytes \uff0c\u5982\u679c\u4f7f\u7528 TCP \u534f\u8bae\uff0c\u5219\u8fd9\u4e2a datagram \u7684\u603b\u7684 header \u957f\u5ea6\u4e3a 40 bytes \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#ipv4-addressing","title":"IPv4 Addressing","text":"<p>\u4e00\u4e2a host \u548c\u4ed6\u7684 physical link \u4e4b\u95f4\u7684\u8fb9\u754c\u5c31\u662f interface \uff0c\u7c7b\u4f3c\u7684\uff0c\u4e00\u4e2a router \u548c\u5b83\u6bcf\u4e00\u4e2a\u8fde\u63a5\u7684 link \u4e4b\u95f4\u7684\u8fb9\u754c\u4e5f\u662f\u4e00\u4e2a interface \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5176\u5b9e\u76f8\u6bd4\u4e8e\u4e00\u4e2a IP \u5730\u5740\u8bc6\u522b\u7684\u662f\u4e00\u4e2a host \uff0c\u5b83\u8bc6\u522b\u7684\u662f\u4e00\u4e2a interface \u7684\u8bf4\u6cd5\u66f4\u51c6\u786e\u3002</p> <p>IP \u5730\u5740\u957f\u5ea6\u4e3a 32 bits \uff0c\u7528 dotted-decimal notation \u8868\u793a\u3002</p> <p>host interfaces \u548c\u5b83\u4eec\u8fde\u63a5\u7684 router \u7684 interface \u5171\u540c\u7ec4\u6210\u4e00\u4e2a subnet \uff0c\u4e5f\u79f0\u4e3a network \u3002</p> <p>IP \u5730\u5740\u6309\u7167 <code>223.1.1.0/24</code> \u7684\u5f62\u5f0f\u5206\u914d\u7ed9 subnet \uff0c\u5176\u4e2d <code>24</code> \u79f0\u4e3a subnet mask \uff0c\u662f IP \u5730\u5740\u5339\u914d\u8fc7\u7a0b\u4e2d\u81f3\u5c11\u9700\u8981\u5339\u914d\u7684 prefix \u7684\u957f\u5ea6\uff0c\u800c <code>223.1.1.0</code> \u7684\u524d 24 bits \u5c31\u662f\u8fd9\u4e2a subnet \u7684\u5730\u5740\u3002</p> <p>Internet \u5206\u914d IP \u5730\u5740\u7684\u7b56\u7565\u662f Classless Interdomain Routing (CIDR) \u3002\u5728 CIDR \u88ab\u91c7\u7528\u4e4b\u524d\uff0c\u6700\u5e38\u91c7\u7528\u7684\u662f classful addressing \uff0csubnet mask length \u53ea\u80fd\u4e3a 8\u300116\u300124 bits \uff0c\u5206\u522b\u79f0\u4e3a class A, B, C network \uff0c\u5bfc\u81f4\u4e0d\u540c subnet \u53ef\u5206\u914d\u5730\u5740\u6570\u91cf\u5dee\u5f02\u8fc7\u5927\uff0c\u96be\u4ee5\u6309\u9700\u5206\u914d\u3002</p> <p>longest prefix matching \u4f7f\u5f97 address aggregation \u6210\u4e3a\u53ef\u80fd\uff1a\u62e5\u6709\u76f8\u540c prefix \u7684 subnet \u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u66f4\u5927\u7684 subnet \u3002</p> <p><code>255.255.255.255</code> \u662f\u4e00\u4e2a\u7279\u6b8a\u7684 IP \u5730\u5740\uff0c\u8868\u793a broadcast \u5730\u5740\u3002destination address \u4e3a broadcast \u5730\u5740\u7684 datagram \u4f1a\u88ab\u53d1\u9001\u7ed9 subnet \u5185\u7684\u6240\u6709 host \uff0c\u4e5f\u53ef\u80fd\u53d1\u9001\u7ed9 neighboring subnet \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#obtaining-addresses","title":"Obtaining Addresses","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#obtaining-a-block-of-addresses","title":"Obtaining a Block of Addresses","text":"<p>IP address block \u7531 ICANN \u7ba1\u7406\u5e76\u5206\u914d\u7ed9 ISP \u548c\u4e00\u4e9b organizations \uff0c\u5b83\u4eec\u5f97\u5230\u4e4b\u540e\u8fd8\u53ef\u4ee5\u5c06 IP address block \u66f4\u7ec6\u5206\u7136\u540e\u5206\u914d\u7ed9\u7528\u6237\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#obtaining-a-host-address-dhcp","title":"Obtaining a Host Address: DHCP","text":"<p>router \u7684 IP \u5730\u5740\u4e00\u822c\u662f\u624b\u52a8\u8bbe\u7f6e\u7684\uff0c\u800c host \u7684\u5730\u5740\u5219\u662f\u901a\u8fc7 Dynamic Host Configuration Protocol (DHCP) \u83b7\u5f97\u7684\u3002</p> <p>\u6bcf\u4e2a subnet \u90fd\u4f1a\u6709\u81f3\u5c11\u4e00\u4e2a DHCP server \u6216\u8005\u4e00\u4e2a\u77e5\u9053 DHCP server address \u7684 DHCP relay agent (\u4e00\u4e2a router ) \uff0c\u7531\u5b83\u4eec\u6765\u7ed9 host \u63d0\u4f9b\u4e34\u65f6\u7684 IP \u5730\u5740\u3002</p> <p>DHCP \u83b7\u53d6 IP \u5730\u5740\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>DHCP server discovery: \u65b0\u6765\u7684 host \u901a\u8fc7 UDP \u53d1\u9001\u7ed9 <code>255.255.255.255</code> \uff0cport 67 \uff0c\u4f7f\u7528 transaction ID \u4f5c\u4e3a identifier \u3002</li> <li>DHCP server offer(s): DHCP server \u6536\u5230 discover message \u540e\u53d1\u9001 offer message \u7ed9 <code>255.255.255.255</code> \uff0cport 68 \uff0c\u5305\u542b yiaddr \u3001transaction IP \u3001DHCP server IP \u3001Lifetime \u3002</li> <li>DHCP request: host \u6536\u5230 DHCP offer \u540e\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u4f5c\u4e3a IP \u5730\u5740\uff0c\u7136\u540e\u4ee5 broadcast \u7684\u65b9\u5f0f\u53d1\u9001 DHCP request\uff0c\u4e0e DHCP offer \u5177\u6709\u76f8\u4f3c\u7684\u7ed3\u6784\u3002</li> <li>DHCP ACK: DHCP server \u6536\u5230 DHCP request \u540e\u53d1\u9001 DHCP ACK \u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#network-address-translation-nat","title":"Network Address Translation (NAT)","text":"<p>subnet \u9700\u8981\u4e00\u6bb5\u8fde\u7eed\u7684 IP \u5730\u5740\uff0c\u5982\u679c\u8bbe\u5907\u6570\u91cf\u8d85\u8fc7\u4e86\u539f\u5148\u5206\u914d\u7684 IP address block \u7684\u6570\u91cf\u5c31\u96be\u4ee5\u5206\u914d\u65b0\u7684\u5730\u5740\uff0c\u4e8e\u662f\u5f15\u5165\u4e86 Network Address Translation (NAT) \u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u4f7f\u7528 NAT \u65f6\uff0csubnet \u5185\u90e8\u4f7f\u7528 IP address space reserved for private network \uff0810.0.0.0/8\u3001172.168.0.0/16\u3001192.168.0.0/16\uff09\uff0c\u7528\u4e00\u4e2a router \u4e0e\u5916\u754c\u8fde\u63a5\u5e76\u8fdb\u884c NAT \uff0c\u8fd9\u4e2a router \u5bf9\u5916\u754c\u8868\u73b0\u4e3a a single device with a single IP address\uff0c\u901a\u8fc7 NAT translation table \u5728 private address + port \u4e0e WAN-side address + port \u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff08\u7ed9\u6bcf\u4e2a host \u4ee5\u53ca application port \u5206\u914d\u4e00\u4e2a NAT port \u8fdb\u884c\u533a\u5206\uff09\u3002\u8fd9\u4e2a router \u7684 public address \u4ece ISP \u83b7\u5f97\uff0c\u540c\u65f6\u5b83\u4f5c\u4e3a DHCP server \u4e3a subnet \u5185\u90e8\u63d0\u4f9b private address \u3002</p> <p>NAT \u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982 subnet \u5185\u7684 port \u4e00\u822c\u4f1a\u53d8\uff0c\u800c\u67d0\u4e9b\u65f6\u5019\u9700\u8981\u7279\u5b9a\u7684\u4e0d\u53d8\u7684 port \uff0c\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7 NAT traversal \u6765\u89e3\u51b3\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#ipv6","title":"IPv6","text":"<p>\u4e3a\u4e86\u89e3\u51b3 IPv4 \u5730\u5740\u5373\u5c06\u88ab\u8017\u5c3d\u7684\u95ee\u9898\uff0c\u4eba\u4eec\u53d1\u660e\u4e86 IPv6 \uff0c\u9664\u4e86\u5c06\u5730\u5740\u957f\u5ea6\u4ece 32 bits \u6269\u5c55\u5230\u4e86 128 bits \uff0cIPv6 \u8fd8\u89e3\u51b3\u4e86 IPv4 \u4e2d\u5176\u4ed6\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>IPv6 datagram \u7684\u4e3b\u8981\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e3b\u8981\u53d8\u5316\u6709\uff1a</p> <ul> <li>\u5728 unicast \u548c broadcast \u7684\u57fa\u7840\u4e0a\u5f15\u5165\u4e86 anycast address\uff0c\u5141\u8bb8\u4e86\u5411\u591a\u4e2a\u5730\u5740\u4e4b\u4e00\u53d1\u9001 datagram\u3002</li> <li>\u4f7f\u7528\u5b9a\u957f\u4e3a 40 bytes \u7684 header\u3002</li> <li>\u5f15\u5165 flow table \u4f7f\u5f97 router \u53ef\u4ee5\u5bf9 flow \u8fdb\u884c\u7279\u6b8a\u5904\u7406\u3002</li> <li>\u5220\u9664 fragmentation \u63d0\u9ad8\u6027\u80fd\uff0c\u5982\u679c datagram \u592a\u5927\u5219\u76f4\u63a5\u4e22\u5f03\u5e76\u53d1\u9001\u76f8\u5e94\u7684 ICMP error message\u3002</li> <li>\u5220\u9664 header checksum \u5197\u4f59\u529f\u80fd\u63d0\u9ad8\u4e86\u6548\u7387\u3002</li> <li>\u5220\u9664 options \uff0c\u5176\u4e2d next header \u4e0d\u4e00\u5b9a\u662f transport layer protocol \uff0c\u4e5f\u53ef\u4ee5\u662f option\u3002</li> <li>TOS \u6539\u4e3a traffic class \uff0cTTL \u6539\u4e3a hop limit \uff0cdatagram length \u6539\u4e3a payload length\uff08\u4e0d\u5305\u542b header length\uff09\uff0cprotocol \u6539\u4e3a next header\u3002</li> </ul> <p>\u7531\u4e8e IPv4 \u5230 IPv6 \u7684\u8f6c\u6362\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u4e3a\u4e86\u517c\u5bb9\u65e7\u7684\u8bbe\u5907\uff0c\u91c7\u7528 tunneling \u5c06 IPv6 \u7684 datagram \u4f5c\u4e3a IPv4 \u7684 payload \u8fdb\u884c\u4f20\u8f93\uff0c\u5176\u4e2d\u4e24\u4e2a IPv6 router \u4e4b\u95f4\u7684 IPv4 router \u88ab\u79f0\u4e3a tunnel \u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#generalized-forwarding-and-sdn","title":"Generalized Forwarding and SDN","text":"<p>Generalized Forwarding \u57fa\u4e8e \u201cmatch-plus-action\u201d \u7684\u539f\u5219\uff0c\u76f8\u5bf9\u4e8e destination-based forwarding\uff0c\u201cmatch\u201d \u65f6\u8fd8\u53ef\u4ee5\u8003\u8651 IP header field \u4e2d destination \u4ee5\u5916\u7684 fields \uff0c\u4e5f\u53ef\u4ee5\u8003\u8651 link-layer header\u3001transport-layer header \u7b49\uff0c\u800c \u201caction\u201d \u9664\u4e86 forward \u8fd8\u53ef\u4ee5 drop\u3001\u4fee\u6539 header field \u7b49\u3002</p> <p>OpenFlow \u662f\u4e00\u4e2a generalized forwarding \u7684\u534f\u8bae\uff0c\u89c4\u5b9a\u4e86 match \u65f6\u53ef\u4ee5/\u4e0d\u80fd\u4f7f\u7528\u54ea\u4e9b field\uff0c\u4ee5\u53ca\u53ef\u4ee5\u91c7\u53d6\u54ea\u4e9b action\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%204/#middleboxes","title":"Middleboxes","text":"<p>network \u4e2d\u9664\u4e86 forwarding \u4e4b\u5916\u7528\u6765\u5b9e\u73b0\u4e00\u4e9b\u5176\u4ed6\u529f\u80fd\u7684\u8bbe\u5907\u79f0\u4e3a middlebox\uff0c\u5b83\u4eec\u4e3b\u8981\u63d0\u4f9b\u4e00\u4e0b\u51e0\u79cd\u529f\u80fd\uff1a</p> <ul> <li>NAT translation</li> <li>security services\uff0c\u5982 firewall</li> <li>performance enhancement\uff0c\u5982 Web cache</li> </ul> <p>middlebox \u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7834\u574f\u4e86 network \u5c42\u7684 layered architecture \uff0c\u4e5f\u5c31\u662f abstraction \u7684\u6982\u5ff5\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/","title":"CNATDA \u7b2c\u4e94\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#introduction","title":"Introduction","text":"<p>control plane \u8ba1\u7b97 forwarding \u548c flow tables \u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>per-router control: router \u4e4b\u95f4\u8fdb\u884c\u4ea4\u6d41\uff0c\u5206\u522b\u8ba1\u7b97\u81ea\u5df1\u7684 forwarding table</li> <li>logically centralized control: \u7531\u4e00\u4e2a remote controller \u6536\u96c6\u4fe1\u606f\uff0c\u8ba1\u7b97\u5e76\u5206\u53d1\u7ed3\u679c</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#routing-algorithms","title":"Routing Algorithms","text":"<p>\u5728 routing algorithms \u4e2d\uff0cnetwork \u88ab\u62bd\u8c61\u4e3a\u4e00\u5f20\u56fe\uff0c\u7efc\u5408\u8003\u8651 physical length\u3001link speed\u3001monetary cost \u7b49\u4f5c\u4e3a\u8fb9\u6743\u3002</p> <p>routing algorithm \u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>centralized / decentralized: \u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u662f\u5426\u77e5\u9053\u6574\u5f20\u56fe\u7684\u4fe1\u606f</li> <li>static / dynamic: \u662f\u5426\u5bf9\u7f51\u7edc\u8d1f\u8f7d\u3001\u62d3\u6251\u7ed3\u6784\u7b49\u7684\u53d8\u5316\u4f5c\u51fa\u54cd\u5e94</li> <li>load-sensitive / load-insensitive: \u662f\u5426\u8003\u8651 congestion \u7684\u72b6\u51b5</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#the-link-state-ls-routing-algorithm","title":"The Link-State (LS) Routing Algorithm","text":"<p>LS \u662f centralized routing algorithm\uff0c\u9700\u8981\u6bcf\u4e2a\u7ed3\u70b9\u5c06 attached links \u7684\u4fe1\u606f\u8fdb\u884c\u5e7f\u64ad (link-state broadcast) \u8ba9\u6240\u6709\u7ed3\u70b9\u62e5\u6709\u6574\u5f20\u56fe\u7684\u4fe1\u606f\uff0c\u518d\u7528 Dijkstra \u7b49\u7b97\u6cd5\u8ba1\u7b97\u6700\u77ed\u8def\u3002</p> <p>\u5bf9\u4e8e load-sensitive routing algorithm\uff0ctraffic load \u7684\u6539\u53d8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0 oscillations\uff0c\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u6539\u6210 load-insensitive \u7684\u6216\u8005\u4fdd\u8bc1\u4e0d\u662f\u6240\u6709\u7ed3\u70b9\u90fd\u5728\u540c\u65f6\u8fd0\u884c LS\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#the-distance-vector-dv-routing-algorithm","title":"The Distance-Vector (DV) Routing Algorithm","text":"<p>DV \u662f distributed\u3001 iterative\u3001decentralized \u7684 routing algorithm\u3002</p> <p>\u6bcf\u4e2a\u7ed3\u70b9\u7ef4\u62a4\u81ea\u5df1\u5230\u5176\u4ed6\u6bcf\u4e2a\u7ed3\u70b9\u7684 distance vector\uff0c\u5f53\u81ea\u5df1\u7684 distance vector \u66f4\u65b0\u4e86\u5c31\u5c06\u81ea\u5df1\u7684 distance vector \u53d1\u9001\u7ed9 neighbor\uff0c\u5e76\u4e14\u4e5f\u4f1a\u7531 neighbor \u7684 distance vector \u66f4\u65b0\u81ea\u5df1\u7684\uff0c\u5f53 link state \u53d1\u751f\u6539\u53d8\u65f6\uff0cDV \u4f1a\u7ecf\u8fc7\u591a\u8f6e\u8fed\u4ee3\u5e76\u8fdb\u884c\u4f20\u64ad\u6700\u7ec8\u6536\u655b\u3002</p> <p>\u5f53 link-cost \u51cf\u5c0f\u65f6\uff0c\u6536\u655b\u8f83\u5feb\u3002\u4f46\u662f\u5f53 link-cost \u589e\u5927\u65f6\uff0c\u7531\u4e8e\u4e0d\u5728\u8fd9\u4e2a link \u4e0a\u7684\u90a3\u4e2a\u7ed3\u70b9\u7684\u6d88\u606f\u6ede\u540e\u6027\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4 \\(y\\) \u7528 \\(z\\) \u6765\u66f4\u65b0 \\(D_y(x)\\)\uff0c\u7136\u540e \\(z\\) \u7528 \\(y\\) \u6765\u66f4\u65b0 \\(D_z(x)\\)\uff0c\u4e24\u8005\u4e92\u76f8\u66f4\u65b0\u6700\u7ec8\u9700\u8981\u8fb9\u6743\u503c\u57df\u5927\u5c0f\u6b21\u7684\u8fed\u4ee3\uff08\u79f0\u4e3a count to infinity problem\uff09\uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u4ea7\u751f routing loop\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4f7f\u7528 poisoned reverse \u53ef\u4ee5\u907f\u514d\u51fa\u73b0\u4e8c\u5143\u73af\uff1a\u5982\u679c \\(u\\) \u901a\u8fc7 \\(v\\) \u8d70\u4e86 \\((u, w)\\) \u8fd9\u6761\u8def\u5f84\uff0c\u5219\u5728 \\(u\\) \u901a\u77e5 \\(v\\) \u7684\u65f6\u5019\u5c06 \\(D_u(w)\\) \u6539\u6210 \\(\\infty\\)\u3002</p> <p>\u5f53\u51fa\u73b0\u5927\u4e8e 2 \u4e2a\u7ed3\u70b9\u7684 loop \u65f6\uff0cpoisoned reverse \u4f1a\u5931\u6548\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#a-comparison-of-ls-and-dv-routing-algorithms","title":"A Comparison of LS and DV Routing Algorithms","text":"<ul> <li>message complexity: LS \u9700\u8981\u6bcf\u4e2a\u7ed3\u70b9\u83b7\u5f97\u5168\u5c40\u7684\u4fe1\u606f\uff0c\u800c\u4e14\u9700\u8981\u7ed3\u70b9\u5c06\u4fe1\u606f\u9001\u5230\u5f88\u8fdc\u7684\u5730\u65b9\uff1bDV \u4ec5\u4ec5\u9700\u8981\u7ed3\u70b9\u77e5\u9053 neighbor \u7684\u4fe1\u606f\u3002</li> <li>speed of convergence: LS \u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\uff08Dijkstra \u53ef\u4ee5\u4f7f\u7528\u4f18\u5148\u961f\u5217\u4f18\u5316\u5230 \\(\\mathcal{O}(n\\log n)\\) \uff09\uff1b DV \u5219\u8f83\u6162\uff0c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0 routing loop\uff0c\u8fd8\u6709 count-to-infonity problem\u3002</li> <li>robustness: \u5728 LS \u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u53ef\u4ee5\u53d1\u9001\u9519\u8bef\u7684 link state \u7ed9\u5176\u4ed6\u7ed3\u70b9\uff0c\u4f46\u662f\u7531\u4e8e\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u8ba1\u7b97\u81ea\u5df1\u7684 forwarding table\uff0c\u4e0d\u4f9d\u8d56\u4e8e\u5176\u4ed6\u7ed3\u70b9\u7684\uff0c\u6240\u4ee5\u5f71\u54cd\u8f83\u5c0f\uff1bDV \u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u7684\u8ba1\u7b97\u7ed3\u679c\u90fd\u662f\u5176\u4ed6\u7ed3\u70b9\u7684\u7ed3\u679c\u7684\u4e00\u90e8\u5206\uff0c\u5f71\u54cd\u8f83\u5927\u3002</li> </ul> <p>\u5b9e\u9645\u4e0a Internet \u540c\u65f6\u91c7\u7528\u4e86\u8fd9\u4e24\u79cd\u7b97\u6cd5\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#intra-as-routing-in-the-internet-ospf","title":"Intra-AS Routing in the Internet: OSPF","text":"<p>\u5982\u679c\u7edf\u4e00\u7ba1\u7406\u6240\u6709\u7684 routers\uff0c\u4f1a\u89c4\u6a21\u8fc7\u5927\u6027\u80fd\u65e0\u6cd5\u63a5\u53d7\uff0c\u4e5f\u4e0d\u80fd\u6ee1\u8db3\u81ea\u6cbb\u7684\u9700\u6c42\u3002\u56e0\u6b64\uff0crouters \u88ab\u5212\u5206\u6210\u4e86\u5f88\u591a\u4e2a autonomous system (AS)\uff0c\u6bcf\u4e2a AS \u6709\u4e00\u4e2a ICANN \u8d4b\u4e88\u7684\u7f16\u53f7\uff0c\u6bcf\u4e2a ISP \u53ef\u80fd\u7ba1\u7406\u4e00\u4e2a\u6216\u591a\u4e2a AS\u3002</p> <p>\u6bcf\u4e2a AS \u5185\u90e8\u90fd\u4f1a\u4f7f\u7528\u4e00\u79cd intra-AS routing protocol\uff0c\u4f8b\u5982 OSPF (Open Shortest Path First)\u3002</p> <p>OSPF \u4f7f\u7528 LS routing algorithm\uff0c\u8fb9\u6743\u7531\u7ba1\u7406\u5458\u8bbe\u5b9a\uff0crouter \u5411\u6574\u4e2a AS \u5185\u90e8 broadcast link state\uff08\u5f53 link state \u53d1\u9001\u6539\u53d8\u65f6/\u5468\u671f\u6027\u5730\uff09\u3002</p> <p>OSPF \u6709\u4ee5\u4e0b\u4e00\u4e9b advances:</p> <ul> <li>security: routers \u4e4b\u95f4\u7684\u4fe1\u606f\u53ef\u4ee5\u5229\u7528 MD5 \u8fdb\u884c authentication</li> <li>multiple same-cost paths: \u5f53\u6709\u591a\u6761\u8def\u5f84\u7684 cost \u76f8\u540c\u65f6\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e9b\u8def\u5f84</li> <li>\u6709 MOSPF \u62d3\u5c55\u6765\u652f\u6301 unicast \u548c multicast</li> <li>hierarchy within a single AS: \u53ef\u4ee5\u5c06 AS \u5212\u5206\u6210\u591a\u4e2a area \u6765\u5f62\u6210 AS \u5185\u90e8\u7684 hierarchy\uff0c\u6bcf\u4e2a area \u5185\u90e8\u8d70\u6700\u6bb5\u8def\uff0c\u4e0d\u540c area \u4e4b\u95f4\u901a\u8fc7\u8d70 area \u7684 border router \u6765\u8d70 backbone area</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#routing-among-the-isps-bgp","title":"Routing Among the ISPs: BGP","text":"<p>BGP (Border Gateway Protocol) \u662f\u4e00\u4e2a decentralized\u3001asynchronous \u7684 inter-AS routing protocol\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#the-role-of-bgp","title":"The Role of BGP","text":"<p>\u5728 BGP \u4e2d\uff0cdestination \u7684\u4e0d\u662f\u786e\u5b9a\u7684 IP \u5730\u5740\uff0c\u800c\u662f CIDR prefix\u3002</p> <p>BGP \u4f7f\u5f97\u4e00\u4e2a AS \u53ef\u4ee5\u5411\u5176\u4ed6 AS advertise prefix\uff0c\u5e76\u8ba1\u7b97\u51fa\u5230\u8fbe\u5404\u4e2a prefix \u7684 route\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#advertise-bgp-route-information","title":"Advertise BGP Route Information","text":"<p>\u4e0d\u540c\u7684 router \u4e4b\u95f4\u4f1a\u5efa\u7acb\u79f0\u4e3a BGP connection \u7684 TCP connection\uff0c\u8d1f\u8d23\u8fde\u63a5\u4e24\u4e2a AS \u7684 gateway router \u4e4b\u95f4\u4f1a\u5efa\u7acb external BGP (eBGP) connection\uff0cAS \u5185\u90e8\u7684 router \u4e24\u4e24\u4e4b\u95f4\u4f1a\u5efa\u7acb internal BGP (iBGP)\u3002</p> <p>\u5047\u8bbe\u8981\u5411\u6240\u6709 router advertise \u524d\u5f80 prefix \\(x\\) \u7684\u8def\u5f84\uff1a - \\(x\\) \u6240\u5728\u7684 AS \u7684 gateway router \u4f1a\u5411\u5468\u56f4 AS \u7684 gateway router \u53d1\u9001 eBGP message\uff0c\u7c7b\u4f3c\u4e8e <code>AS3 x</code> - \u5176\u4ed6 AS \u7684 gateway router \u6536\u5230\u540e\u4f1a\u5411 AS \u5185\u90e8\u5e7f\u64ad iBGP message: <code>AS3 x</code> - \u4e4b\u540e\u5176\u4ed6\u7684 gateway router \u4f1a\u7ee7\u7eed\u5411\u76f8\u90bb\u7684 AS \u7684 gateway router \u53d1\u9001 eBGP message\uff0c\u5e76\u5728 advertisement \u4e2d\u52a0\u5165\u81ea\u5df1\u6240\u5728\u7684 AS\uff0c\u7c7b\u4f3c\u4e8e <code>AS2 AS3 x</code>\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#determining-the-best-routes","title":"Determining the Best Routes","text":"<p>\u4e00\u6761 BGP advertisement \u5305\u542b AS-PATH \u548c NEXT-HOP \u7b49\u4fe1\u606f\uff08\u79f0\u4e3a BGP attributes\uff0c\u52a0\u4e0a prefix \u5c31\u79f0\u4e3a\u4e00\u4e2a route\uff09\uff1a</p> <ul> <li>AS-PATH \u8868\u793a\u5230\u8fbe\u76ee\u7684\u5730\u9700\u8981\u7ecf\u8fc7\u7684 AS\uff0c\u4e00\u4e2a AS \u6536\u5230\u6765\u81ea\u5176\u4ed6 AS \u7684 route \u540e\u53ef\u4ee5\u5728\u5176\u4e2d\u52a0\u4e0a\u81ea\u5df1\uff0c\u7136\u540e\u7ee7\u7eed\u53d1\u9001\u7ed9 neighbor</li> <li>NEXT-HOP \u8868\u793a\u79bb\u5f00\u5f53\u524d AS \u53bb\u5f80\u76ee\u7684\u5730\u9700\u8981\u8d70\u5230\u7684\u4e0b\u4e00\u4e2a AS \u7684\u7b2c\u4e00\u4e2a router \u7684 IP \u5730\u5740</li> </ul> <p>\u4ece\u4e00\u4e2a AS \u51fa\u53d1\u5230\u8fbe\u67d0\u4e2a prefix \u6709\u5f88\u591a\u79cd\u8def\u5f84\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0cBGP \u91c7\u7528\u7684\u662f route- selection algorithm\uff0crouter \u6309\u7167\u987a\u5e8f\u4f7f\u7528\u4ee5\u4e0b\u51e0\u6761\u89c4\u5219\u6765\u9009\u62e9 best route\uff1a</p> <ul> <li>\u7531\u7ba1\u7406\u5458\u8bbe\u7f6e\u6216\u8005\u4ece\u5176\u4ed6 AS \u83b7\u5f97\u7684 local preference\uff08\u4f5c\u4e3a\u4e00\u4e2a attribute\uff09</li> <li>shortest AS-PATH\uff08\u7ecf\u8fc7\u6700\u5c11\u7684 AS\uff09\uff0c\u5f53\u8fd9\u6761 rule \u6210\u4e3a\u552f\u4e00\u7684 rule \u65f6\u91c7\u7528 DV \u7b97\u6cd5\uff0c\u8fb9\u6743\u8bbe\u7f6e\u4e3a AS hops \u7684\u6570\u91cf\u3002</li> <li>hot patato routing: \u5728 AS \u5185\u8d70\u6700\u77ed\u8def\uff08\u901a\u8fc7 intra-AS protocol \u4ee5\u53ca NEXT-HOP \u5f97\u5230\uff09\u5230\u8fbe gateway router</li> <li>\u6839\u636e BGP identifier \u9009</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#ip-anycast","title":"IP-anycast","text":"<p>BGP \u53ef\u4ee5\u4e3a\u524d\u5f80\u67d0\u4e2a prefix \u5bfb\u627e best route\uff0c\u5982\u679c\u7ed9\u591a\u4e2a host \u8bbe\u7f6e\u76f8\u540c\u7684 IP \u5730\u5740\uff0c\u5373\u53ef\u5b9e\u73b0 IP-anycast\uff0c\u4f8b\u5982 CDN \u4e3a\u5ba2\u6237\u5bfb\u627e\u6700\u5408\u9002\u7684 server\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u662f\u5728 router \u7684\u6311\u9009\u4e2d\u5b9e\u73b0\u7684\u3002</p> <p>IP-anycast \u5982\u679c\u7528\u4e8e TCP \u53ef\u80fd\u4f1a\u5bfc\u81f4\u540c\u4e00\u4e2a TCP connection \u4e2d\u7684 message \u53d1\u9001\u7ed9\u4e0d\u540c\u7684 host\uff0c\u6240\u4ee5 CDN \u4e00\u822c\u4e0d\u91c7\u7528 IP-anycast\uff0c\u800c DNS root server \u5219\u91c7\u7528\uff08\u4f7f\u7528 UDP\uff09\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#routing-policy","title":"Routing Policy","text":"<p>local preference \u7684\u5b58\u5728\u4e3a\u7ba1\u7406\u5458\u51b3\u5b9a\u5982\u4f55\u9009\u62e9 route \u4ee5\u53ca\u5b9e\u73b0\u67d0\u4e9b policy \u63d0\u4f9b\u4e86\u53ef\u80fd\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#the-sdn-control-plane","title":"The SDN Control Plane","text":"<p>{{&lt; notice info &gt;}} \u56e0\u4e3a\u65f6\u95f4\u5f88\u7d27 + \u8003\u8bd5\u4e0d\u8003\uff0c\u6240\u4ee5\u8fd9\u90e8\u5206\u5199\u7684\u6bd4\u8f83\u7b80\u7565\uff0c\u800c\u4e14~~\u57fa\u672c\u5168\u9760\u6284 ouuan dalao \u7684\u7b14\u8bb0~~\uff0c\u8981\u6709\u66f4\u597d\u7684\u7406\u89e3\u8fd8\u662f\u53bb\u770b\u4e66\u6216\u8005\u770b ouuan dalao \u7684\u7b14\u8bb0\u3002 {{&lt; /notice &gt;}}</p> <p>SDN \u5206\u4e3a SDN controller\u3001network management applications\uff08\u4f8b\u5982 routing\u3001access control\u3001load balancing\uff09 \u548c controlled devices \u4e09\u4e2a\u90e8\u5206\u3002</p> <p></p> <p>SDN \u4f7f\u7528 generalized forwarding\uff0c\u901a\u8fc7 network-control application \u63d0\u4f9b network control functions\uff0c\u5b9e\u73b0\u4e86 programmable network\u3002</p> <p>SDN \u5c06 network functionality \u8fdb\u884c\u4e86 unbundle\uff0c\u4f7f\u5f97 packet switches\u3001SDN controller\u3001network management applications \u53ef\u4ee5\u6765\u81ea\u4e0d\u540c\u4f9b\u5e94\u5546\u3002</p> <ul> <li>communication layer (northbound API): controlled devices \u548c SDN controller \u8fdb\u884c\u901a\u4fe1\u3002</li> <li>network-wide state-management layer: SDN controller \u7ef4\u62a4\u7684\u4e00\u4e9b\u4fe1\u606f\u3002</li> <li>interface to the network-control application layer (southbound API): \u8ba9 network-control applications \u80fd\u591f\u8bfb\u5199 network state \u548c flow tables \u7b49\u4fe1\u606f\uff0c\u901a\u8fc7 RESTful API \u7b49\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1\u3002</li> </ul> <p>\u5728 OpenFlow \u4e2d\uff0cSDN controller \u53ef\u4ee5\u5411 controlled device \u53d1\u9001\uff1a</p> <ul> <li>configuration</li> <li>modify/read-state</li> <li>send packet</li> </ul> <p>controlled device \u53ef\u4ee5\u5411 SDN controller \u53d1\u9001\uff1a</p> <ul> <li>flow-removed</li> <li>port-status</li> <li>packet-in</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#icmp-the-internet-control-message-protocol","title":"ICMP: The Internet Control Message Protocol","text":"<p>ICMP \u88ab\u7528\u6765\u8fdb\u884c router \u548c host \u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u4f5c\u4e3a IP payload \u8fdb\u884c\u4f20\u8f93\u3002</p> <p>ICMP \u7684 message \u6709\u5f88\u591a\u79cd\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>ping \u4f7f\u7528\u7684 echo request \u548c echo reply</li> <li>destination network/host/protocol/port unreachable</li> <li>destination network/host unknown</li> <li>router advertisement/discovery</li> <li>TTL expired</li> <li>IP header bad</li> </ul> <p>traceroute \u4f7f\u7528 ICMP \u901a\u8fc7\u53d1\u9001 TTL \u9012\u589e\u7684 UDP segment with an unlikely port number \u7ed9 host\uff0c\u901a\u8fc7 TTL expired \u5f97\u77e5\u6bcf\u4e00\u4e2a router \u7684\u4fe1\u606f\uff0c\u901a\u8fc7 port unreachable \u5f97\u5230\u7ec8\u70b9\u7684\u4fe1\u606f\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%205/#network-management-and-snmp-netconfyang","title":"Network Management and SNMP, NETCONF/YANG","text":"<p>network management \u5305\u62ec managing server\uff08\u5305\u62ec network managers\uff09\u3001managed device\u3001data\uff08\u6bcf\u4e2a device \u6709 configuration data\u3001operational data\u3001device statistics\uff0c\u800c managing server \u4f1a\u7ef4\u62a4\u6bcf\u4e2a device \u548c\u6574\u4e2a network \u7684 data\uff09\u3001network management agent\u3001network management protocol\u3002</p> <p>\u8fdb\u884c network management \u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>CLI: error-prone\uff0c\u4e0d\u80fd scale to larger-sized network\u3002</li> <li>SNMP/MIB: \u6bcf\u4e2a device \u6709 management information base (MIB) objects\uff0c\u53ef\u4ee5\u4f7f\u7528 simple network management protocol (SNMP) \u6765\u83b7\u53d6/\u8bbe\u7f6e MIB objects \u7684 data\uff0cdevice \u53ef\u4ee5\u53d1\u9001 trap message \u5411 managing server \u901a\u77e5\u72b6\u6001\u53d8\u5316\u3002\u7531\u4e8e SNMP/MIB \u9488\u5bf9\u7684\u662f\u5355\u4e2a\u7684 device\uff0c\u4e5f\u96be\u4ee5 scale\u3002</li> <li>NETCONF/YANG: NETCONF \u6bd4 SNMP \u66f4\u6ce8\u91cd\u914d\u7f6e\u7ba1\u7406\uff0c\u53ef\u4ee5\u4e00\u6b21\u6027\u64cd\u63a7\u591a\u4e2a device\uff0c\u8bbe\u7f6e constraint \u6765\u68c0\u67e5\u914d\u7f6e\u7684\u6b63\u786e\u6027\uff0c\u4f7f\u7528 YANG \u4f5c\u4e3a data modeling language\uff0c\u4ee5 XML \u683c\u5f0f\u901a\u8fc7 TLS \u8fdb\u884c\u901a\u4fe1\u3002</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/","title":"CNATDA \u7b2c\u516d\u7ae0\u5b66\u4e60\u7b14\u8bb0","text":"","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#introduction-to-the-link-layer","title":"Introduction to the Link Layer","text":"<p>link layer \u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5c06 datagram \u4ece\u5f53\u524d node \u4f20\u8f93\u5230\u53e6\u4e00\u4e2a node\uff0c\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u4ee5\u4e0b\u670d\u52a1\uff1a</p> <ul> <li>framing\uff1a\u5c06 network layer \u7684 datagram encapsulate \u6210 link layer \u7684 frame \u7136\u540e\u8fdb\u884c\u4f20\u8f93\u3002</li> <li>link access\uff1a\u4f7f\u7528 medium access control\uff08MAC\uff09\u534f\u8bae\u6765\u51b3\u5b9a\u4f20\u8f93\u54ea\u4e00\u4e2a frame\u3002\u5bf9\u4e8e point-to-point \u7684\u4f20\u8f93\u662f\u5f88\u7b80\u5355\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e multiple access problem \u6765\u8bf4\uff0c\u5219\u9700\u8981 MAC protocol \u6765\u8fdb\u884c\u534f\u8c03\u3002</li> <li>reliable delivery\uff1a\u4f7f\u7528 acknowledgments \u548c retransmission \uff0c\u4e0e transport layer \u7684\u53ef\u9760\u4f20\u8f93\u670d\u52a1\u7c7b\u4f3c\u3002reliable delivery \u5728\u51fa\u9519\u7387\u8f83\u9ad8\u7684 links\uff08\u5982 wireless link\uff09\u4e2d\u91c7\u7528\u8f83\u5e7f\uff0c\u4f46\u662f\u5728\u51fa\u9519\u7387\u8f83\u4f4e\u7684 links \u4e2d\u5219\u4f1a\u9020\u6210\u4e0d\u5fc5\u8981\u7684 overhead\uff0c\u91c7\u7528\u8f83\u5c11\u3002</li> <li>error detection and correction\uff1a\u901a\u8fc7\u5728 transmitting node \u7684 frame \u4e2d\u52a0\u5165 error-detection bits \u548c\u5728 receiving node \u4e2d\u8fdb\u884c error check \u6765\u5b9e\u73b0\u3002link layer \u7684 error detection \u4e3b\u8981\u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u3002</li> </ul> <p>\u5728 host \u4e2d\uff0clink layer \u4f7f\u7528\u540d\u4e3a network adapter\uff08network interface controller\uff0cNIC\uff09 \u7684 chip \u5b9e\u73b0\uff0c\u5c5e\u4e8e\u786c\u4ef6\u5c42\u9762\u7684\u5b9e\u73b0\u3002\u53e6\u5916\uff0c\u8fd8\u4f1a\u6709\u4e00\u90e8\u5206\u7531 CPU \u4e0a\u7684\u8f6f\u4ef6\u5b9e\u73b0\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#error-detection-and-correction-techniques","title":"Error-Detection and -Correction Techniques","text":"<p>error-detection and -correction \u5141\u8bb8\u63a5\u6536\u7aef\u5076\u5c14\u7684\u5dee\u9519\u68c0\u6d4b\uff0c\u4f46\u662f\u4e0d\u662f\u6c38\u8fdc\u90fd\u4f1a\u8fdb\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u5b58\u5728\u672a\u68c0\u6d4b\u5230\u7684 error bits\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#parity-checks","title":"Parity Checks","text":"<p>\u5b9e\u73b0 bit \u5c42\u9762\u4e0a\u7684 error detection \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a parity bit \u6765\u8bb0\u5f55\u539f\u6765\u503c\u4e3a 1 \u7684 bits \u7684\u6570\u76ee\u3002\u8fd9\u5728\u53ea\u6709\u4e00\u4e2a bit \u4f1a\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\u662f work \u7684\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a error \u603b\u662f clustered together in \u201cbursts\u201d\uff0c\u4ece\u800c\u5355\u4e2a\u7684 parity bit \u884c\u4e0d\u901a\u3002</p> <p>\u8003\u8651\u91c7\u7528 two-diminutional parity \uff0c\u5c06\u8981\u4f20\u8f93\u7684 bits \u5206\u6210\u4e00\u4e2a\u4e8c\u7ef4\u77e9\u9635\uff0c\u6bcf\u4e00\u6a2a\u3001\u6bcf\u4e00\u5217\u90fd\u8bbe\u7f6e\u4e00\u4e2a parity bit\uff0c\u8fd9\u6837\u4ee5\u6765\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u786e\u5b9a error bit \u7684\u4f4d\u7f6e\uff0c\u8fd8\u80fd\u8fdb\u884c correction\u3002</p> <p>\u8fd9\u79cd\u65e2\u80fd detect \u4e5f\u80fd correct \u7684\u80fd\u529b\u53eb\u505a forward error correction\uff08FEC\uff09\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#checksumming-methods","title":"Checksumming Methods","text":"<p>\u5728 checksumming methods \u4e2d\uff0cd bits \u7684 data \u4f1a\u88ab\u5206\u6210 k bit \u5927\u5c0f\u7684\u6574\u6570\u5e8f\u5217\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u6574\u6570\u7684\u548c\u4f5c\u4e3a error-detection bits\u3002 Internet checksum \u5c31\u662f\u8fd9\u6837\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\u5728 TCP \u548c UDP \u4e2d\uff0c\u6240\u6709 fields \u5305\u62ec header \u548c data \u90fd\u4f1a\u8fdb\u884c Internet checksum \uff0c\u800c IP protocol \u4e2d\u53ea\u6709 header \u4f1a\u8fdb\u884c\u3002</p> <p>checksumming methods \u9700\u8981\u76f8\u5bf9\u5c11\u7684 packet overhead\uff0c\u4f46\u662f\u5bf9 errors \u7684\u4fdd\u62a4\u80fd\u529b\u76f8\u5bf9 link layer \u91c7\u7528 cyclic redundancy check \u8f83\u5f31\u3002\u7531\u4e8e transport layer \u4e3b\u8981\u5728\u8f6f\u4ef6\u4e0a\u5b9e\u73b0\uff0c\u9700\u8981\u7684\u662f simple and fast \u7684\u5dee\u9519\u68c0\u6d4b\u80fd\u529b\uff0c\u800c link layer \u5728\u786c\u4ef6\u5c42\u9762\u4e0a\u5b9e\u73b0\u4f7f\u5f97\u80fd\u8fdb\u884c\u66f4\u590d\u6742\u7684 CRC \u8fd0\u7b97\uff0c\u6240\u4ee5 transport layer \u91c7\u7528\u7684\u662f Internet checksumming \u800c link layer \u91c7\u7528\u7684\u662f CRC\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#cyclic-redundancy-check-crc","title":"Cyclic Redundancy Check (CRC)","text":"<p>\u751f\u6210\u4e00\u4e2a\u591a\u9879\u5f0f\u6765\u5b9e\u73b0\uff0c\u8be6\u7ec6\u7684\u53ef\u4ee5\u770b UCB CS70 Error Correcting Codes \u6216\u8005\u770b\u4e66\uff0c\u5176\u5b9e\u5c31\u662f CS 70 \u8fd9\u4e2a\u7684 bit \u7248\u672c\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#multiple-access-links-and-protocols","title":"Multiple Access Links and Protocols","text":"<p>network links \u5206\u4e3a\u4e24\u79cd\uff1apoint-to-point \u548c braodcast\u3002\u5728 broadcast link \u4e2d\uff0c\u5982\u679c\u6709\u591a\u4e2a nodes \u540c\u65f6\u53d1\u9001\u4fe1\u606f\uff0c\u5219\u4f1a\u4ea7\u751f collision \u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3 multiple access problem\uff0c\u9700\u8981\u4e00\u4e2a multiple access protocol \uff0c\u4e3b\u8981\u6709\u4e09\u7c7b multiple access protocols\uff1achannel partitioning protocols\uff0crandom access protocols \u548c taking-turs protocols\u3002</p> <p>\u4e00\u4e2a\u5408\u7406\u7684 multiple access protocol \u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u53ea\u6709\u4e00\u4e2a\u7ed3\u70b9\u53d1\u9001\u6d88\u606f\u5219\u5b8c\u5168\u4f7f\u7528\u5e26\u5bbd</li> <li>\u591a\u4e2a\u7ed3\u70b9\u53d1\u9001\u5219\u5e73\u5206\u5e26\u5bbd</li> <li>decentralized</li> <li>simple\uff0cinexpensive to implement</li> </ul>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#channel-partitioning-protocols","title":"Channel Partitioning Protocols","text":"<p>TDM \u5c06 time \u5206\u6210 frames \u7136\u540e\u6bcf\u4e2a frame \u53c8\u5206\u6210 slots\uff0c\u6bcf\u4e00\u4e2a time slot \u5206\u914d\u7ed9\u4e00\u4e2a node\u3002</p> <p>FDM \u5219\u5c06\u9891\u7387\u5206\u4e3a frames \u518d\u7ec6\u5206\u4e3a slots \u3002</p> <p>FDM \u548c TDM \u90fd\u80fd\u4fdd\u8bc1\u6bcf\u4e2a node \u90fd\u80fd\u5f97\u5230\u5747\u5206\u7684\u4f20\u8f93\u901f\u7387\uff0c\u5e76\u4e14\u5b8c\u5168\u907f\u514d\u4e86 collision\uff0c\u4f46\u662f\u4e5f\u4f1a\u5bfc\u81f4\u53ea\u6709\u4e00\u4e2a sender \u65f6\u4e0d\u80fd\u4f7f\u7528\u5206\u914d\u7ed9\u5176\u4ed6 nodes \u7684 slots\u3002</p> <p>code division multiple access\uff08CDMA\uff09\u7ed9\u6bcf\u4e2a node \u5206\u914d\u4e00\u4e2a\u4e0d\u540c\u7684 code\uff0cnode \u5c06 data \u901a\u8fc7\u5206\u914d\u7684 code \u8fdb\u884c encode \u4e4b\u540e\u518d\u53d1\u9001\u3002CDMA \u5728 wireless channel \u4e2d\u8f83\u5e38\u7528\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#random-access-protocols","title":"Random Access Protocols","text":"<p>\u6bcf\u4e2a\u906d\u9047 collision \u7684\u7ed3\u70b9\u90fd\u72ec\u7acb\u9009\u53d6\u4e00\u4e2a random delay\uff0c\u5728 delay \u4e4b\u540e\u8fdb\u884c retransmission\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#aloha","title":"ALOHA","text":"<p>\u5047\u8bbe\u6bcf\u4e2a frame \u5927\u5c0f\u76f8\u540c\uff0c\u5c06 slot \u7684\u5927\u5c0f\u7b49\u4e8e\u4f20\u8f93\u4e00\u4e2a frame \u7684\u65f6\u95f4\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u4f1a\u5728 slot \u7684\u5f00\u59cb\u4f20\u8f93\uff0c\u5e76\u4e14\u6240\u6709\u7ed3\u70b9\u662f\u540c\u6b65\u7684\uff0c\u7ed3\u70b9\u4f1a\u5728 slot \u7ed3\u675f\u4e4b\u524d\u68c0\u6d4b\u5230 collision\u3002</p> <p>\u5728 slotted ALOHA \u4e2d\uff0c\u7ed3\u70b9\u5728\u68c0\u6d4b\u5230 collision \u4e4b\u540e\u7acb\u5373\u505c\u6b62\u4f20\u8f93\uff0c\u5e76\u4e14\u5728\u4e4b\u540e\u7684 slots \u7684\u5f00\u5934\u4ee5\u6982\u7387 \\(p\\) \u8fdb\u884c\u4f20\u8f93\u76f4\u5230\u6210\u529f\uff0c\u662f decentralized \u3002</p> <p>\u6070\u597d\u4e00\u4e2a\u7ed3\u70b9\u8fdb\u884c\u4f20\u8f93\u7684 slot \u88ab\u79f0\u4e3a successful slot\uff0cslotted multiple access protocol \u7684 efficiency \u88ab\u5b9a\u4e49\u4e3a successful slot \u7684\u5360\u6bd4\u3002\u663e\u7136\uff0c\u6709 \\(n\\) \u4e2a active nodes \u7684\u65f6\u5019\uff0cefficiency \u4e3a \\(np(1-p)^{n-1}\\) \uff0c\u5f53 \\(n\\) \u5f88\u5927\u65f6\uff0c\u5b83\u7684\u6700\u5927\u503c\u4e3a \\(1/e\\approx 0.37\\)\u3002</p> <p>\u5728 pure ALOHA \u4e2d\uff0c\u4e0d\u8fdb\u884c slot \u7684\u5212\u5206\uff0c\u662f fully decentralized \u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u7ed3\u70b9\u906d\u9047 collision \u4e4b\u540e\u4f1a\u4ee5\u6982\u7387 \\(p\\) \u7acb\u5373\u91cd\u4f20\uff0c\u5c3d\u7ba1\u66f4\u52a0\u53bb\u4e2d\u5fc3\u5316\uff0c\u4f46\u662f\u5b83\u7684 efficiency \u4e5f\u53ea\u6709 slotted ALOHA \u7684\u4e00\u534a\u4e86\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#carrier-sense-multiple-access-with-collision-detection-csmacd","title":"Carrier Sense Multiple Access with Collision Detection (CSMA/CD)","text":"<p>CSMA \u57fa\u4e8e \u201cListen before speaking\u201d \u7684\u539f\u5219\u8fdb\u884c carrier sensing\uff0c\u800c CSMA/CD \u5219\u662f CSMA \u52a0\u4e0a \u201cIf someone else begins talking at the same time, stop talking\u201d \u7684\u539f\u5219\u8fdb\u884c collision detection\u3002</p> <p>\u7531\u4e8e channel propagation delay \u7684\u5b58\u5728\uff0c\u4e00\u4e2a\u7ed3\u70b9\u5728\u68c0\u6d4b\u5230\u53e6\u4e00\u4e2a\u7ed3\u70b9\u53d1\u9001\u8fc7\u6d88\u606f\u524d\u53ef\u80fd\u5df2\u7ecf\u53d1\u9001\u8fc7\u4e00\u6bb5\u6d88\u606f\u4e86\u3002</p> <p>\u5728 CSMA/CD \u4e2d\uff0c\u7ed3\u70b9\u9047\u5230 collision \u4f1a\u968f\u673a\u7b49\u5230\u4e00\u6bb5\u65f6\u95f4\u518d\u8fdb\u884c\u91cd\u4f20\uff0c\u8fd9\u4e2a\u7b49\u5f85\u65f6\u95f4\u7531 binary exponential backoff \u7b97\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff1a\u5f53\u524d\u5982\u679c\u7d2f\u8ba1\u68c0\u6d4b\u5230\u4e86 \\(n\\) \u6b21 collision\uff0c\u5219\u5728 \\(\\{0,1,2,\\dots,2^n-1\\}\\) \u4e2d\u968f\u673a\u53d6\u4e00\u4e2a\u6570\u4f5c\u4e3a \\(K\\) \uff0c\u7136\u540e\u7b49\u5f85\u4f20\u8f93 \\(K\\cdot 512\\) bit \u7684\u7528\u65f6\uff0c\u5f53 \\(n\\) \u8d85\u8fc7 10 \u7684\u65f6\u5019\u5219\u53d6 10\u3002\u5982\u679c\u7b49\u5f85\u4e4b\u540e\u4f20\u8f93\u6210\u529f\uff0c\u5219 \\(n\\) \u91cd\u65b0\u53d8\u4e3a 0\u3002</p> <p>CSMA/CD \u7684 efficiency \u7ea6\u4e3a \\(\\dfrac{1}{1+5d_{\\mathrm{prop}}/d_{\\mathrm{trans}}}\\) \uff0c\u5176\u4e2d \\(d_{\\mathrm{prop}}\\) \u8868\u793a propogation delay\uff0c\\(d_{\\mathrm{trans}}\\) \u8868\u793a\u4e00\u4e2a maximum-size frame \u7684\u4f20\u8f93\u7528\u65f6\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#taking-turns-protocols","title":"Taking-Turns Protocols","text":"<p>taking-turns protocol \u7684\u4e3b\u8981\u601d\u60f3\u662f\u8ba9\u7ed3\u70b9\u8f6e\u6d41\u53d1\u9001\u6d88\u606f\u3002</p> <p>polling protocol \u4e2d\u5b58\u5728\u4e00\u4e2a master node\uff0c\u5b83\u8f6e\u6d41 poll \u6bcf\u4e2a\u7ed3\u70b9\u8ba9\u5176\u53d1\u9001\u4e0d\u8d85\u8fc7 maximum number \u4e2a frame\uff0c\u53d1\u9001\u5b8c\u518d\u7ee7\u7eed poll \u4e0b\u4e00\u4e2a\u7ed3\u70b9\u3002polling protocol \u662f centralized \u7684\uff0cmaster node \u5012\u4e0b\u4e86\u6574\u4e2a\u7cfb\u7edf\u5c31\u4f1a\u5d29\u6e83\uff0c\u540c\u65f6\u4e5f\u5f15\u5165\u4e86 polling delay\uff1a\u5bf9 inactive nodes \u8fdb\u884c poll \u4f1a\u6d6a\u8d39\u65f6\u95f4\u3002</p> <p>token-passing protocol \u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u4ee5\u56fa\u5b9a\u987a\u5e8f\u5411\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u53d1\u9001 token\uff0c\u5f53\u7ed3\u70b9\u9700\u8981\u4f20\u8f93\u65f6\u5219\u4f1a\u5148\u4f20\u8f93\u4e0d\u8d85\u8fc7 maximum number \u4e2a frame \u518d\u4f20\u9012 token\u3002token-passing protocol \u662f decentralized \u5e76\u4e14\u9ad8\u6548\u7684\uff0c\u4f46\u662f\u5f53\u4e00\u4e2a\u7ed3\u70b9\u5d29\u6e83\u4e86\u540c\u6837\u4f1a\u4f7f\u5f97\u6574\u4e2a channel \u5d29\u6e83\uff0c\u9700\u8981\u91c7\u53d6 recovery procedure\u3002</p> <p>### DOCSIS: The Link-Layer Protocol for Cable Internet Access</p> <p>DOCSIS \u7528\u4e8e cable access network\uff0c\u5c06\u4e00\u4e2a residential cable modems \u8fde\u63a5\u5230 cable modem termination system\uff08CMTS\uff09\uff0c\u540c\u65f6\u7528\u5230\u4e86\u591a\u79cd multiple access protocol\u3002</p> <p>DOCSIS \u4f7f\u7528 FDM \u5206\u4e3a downstream \u548c upstream \u4e24\u4e2a channel\uff0cdownstream channel \u7684\u5185\u5bb9\u7531 CTMS \u5411 cable modem \u53d1\u9001\uff0c\u4e0d\u5b58\u5728 multiple access problem\u3002upstream channel \u5219\u88ab\u5206\u4e3a\u4e86\u591a\u4e2a mini-slots\uff0c\u8fd9\u4e9b slots \u7531 CMTS \u901a\u8fc7 downstream \u52a8\u6001\u5206\u914d\uff0c\u9700\u8981\u7531 cable modem \u53d1\u9001 mini-slot-request-frame\uff0c\u8fd9\u4e9b requests \u901a\u8fc7\u4e00\u4e9b\u7279\u6b8a\u7684 mini-slots \u4ee5 random access \u7684\u65b9\u5f0f\u53d1\u9001\uff0c\u901a\u8fc7\u662f\u5426\u6536\u5230 CMTS \u56de\u590d\u7684 mini-slots \u6765\u5224\u5b9a collision \u7684\u5b58\u5728\uff0c\u4f7f\u7528 binary exponential backoff\u3002</p> <p>## Switched Local Area Networks</p> <p>### Link-Layer Addressing and ARP</p> <p>host \u548c router \u7684\u6bcf\u4e2a adapter \u90fd\u6709\u4e00\u4e2a LAN address (physical address/MAC address) \uff0c\u5bf9\u4e8e\u6709\u591a\u4e2a interface \u7684 router \u6765\u8bf4\uff0c\u6bcf\u4e2a interface \u90fd\u4f1a\u6709\u4e00\u4e2a MAC address\u3002</p> <p>MAC address \u7684\u957f\u5ea6\u4e3a 6 bytes\uff0c\u7531 IEEE \u8fdb\u884c\u5206\u914d\uff0c\u6bcf\u4e2a adapter \u7684 MAC address \u90fd\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\u3002</p> <p>\u5f53 adapter \u9700\u8981\u53d1\u9001 frame \u7ed9\u76ee\u7684 adapter \u65f6\u4f1a\u5c06\u76ee\u7684 MAC address \u63d2\u5165 frame \u7136\u540e\u9001\u5f80 LAN\uff0c\u7531 switch \u5c06\u5176\u5411\u6240\u6709\u7684 interfaces \u8fdb\u884c broadcast\uff0c\u4e0e\u76ee\u7684 MAC address \u5339\u914d\u7684\u5c31\u4f1a\u63a5\u6536\uff0c\u5426\u5219\u4e22\u5f03\u3002</p> <p>MAC broadcast address \u4e3a <code>ff:ff:ff:ff:ff:ff</code>\u3002</p> <p>### Address Resolution Protocol</p> <p>ARP \u662f\u7528\u6765\u5c06 subnet \u5185\u90e8\u7684 IP address \u8f6c\u6362\u6210 MAC address \u7684\u3002</p> <p>\u6bcf\u4e2a host/router \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a ARP table\uff0c\u5b58\u50a8 IP \u5230 MAC \u5730\u5740\u7684\u6620\u5c04\uff0c\u540c\u65f6\u4f1a\u6709\u4e00\u4e2a TTL\uff0c\u5230\u671f\u5219\u4f1a\u4e22\u5f03\u8fd9\u6761\u8bb0\u5f55\u3002</p> <p>\u5f53 ARP table \u4e2d\u6ca1\u6709\u5bf9\u5e94\u7684 MAC \u5730\u5740\u65f6\uff0csender \u4f1a\u53d1\u9001\u4e00\u4e2a ARP request\uff0c\u5176\u4e2d\u76ee\u7684 MAC \u5730\u5740\u4e3a MAC broadcast address\uff0c\u5bf9\u5e94\u7684 receiver \u6536\u5230\u540e\u4f1a\u53d1\u9001 ARP response\uff0c\u4e00\u822c\u4e0d\u662f broadcast\u3002sender \u6536\u5230 response \u540e\u66f4\u65b0 ARP table\u3002\u901a\u8fc7\u8fd9\u79cd\u673a\u5236\uff0cARP table \u53ef\u4ee5\u81ea\u52a8\u6784\u5efa\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\u3002</p> <p>\u5982\u679c\u9700\u8981\u5411 subnet \u5916\u53d1\u9001\u4fe1\u606f\uff0c\u5219\u662f\u9700\u8981\u53d1\u9001\u7ed9 gateway\uff08first-hop router\uff09\uff0c\u9700\u8981\u67e5\u8be2\u7684\u4e5f\u662f gateway \u7684 MAC \u5730\u5740\uff0cgateway \u6536\u5230 frame \u540e\u4f1a\u4f20\u9012\u7ed9\u5b83\u7684 network layer \u5c06 source IP address \u4fee\u6539\u4e3a\u5b83\u7684 IP address\u3002</p> <p>ARP \u662f\u4e00\u4e2a\u4f4d\u4e8e network layer \u548c link layer \u4e4b\u95f4\u7684 protocol\u3002</p> <p>### Ethernet</p> <p>Ethernet \u901a\u5e38\u4f7f\u7528 hub \u6216 switch \u6765\u8fde\u63a5\u5404\u4e2a interface\u3002hub \u4f1a\u5c06\u6536\u5230\u7684\u6bcf\u4e2a bit \u8f6c\u53d1\u7ed9\u6240\u6709 interfaces\uff0c\u5bb9\u6613\u9020\u6210 collision\u3002switch \u6839\u636e MAC protocol \u8fdb\u884c\u8f6c\u53d1\uff0c\u907f\u514d\u4e86 collision\u3002</p> <p>Ethernet \u7684 frame \u901a\u5e38\u7531\u4ee5\u4e0b\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>data field\uff0846 to 1500 bytes\uff09\uff1aIP datagram\u3002\u5982\u679c IP datagram \u7684\u957f\u5ea6\u5c0f\u4e8e 46 bytes\uff0c\u5219\u4f1a\u586b\u5145\u81f3 46 bytes\uff0cnetwork layer \u901a\u8fc7 IP datagram \u7684 length field \u6765\u53bb\u9664\u586b\u5145\u3002</li> <li>destination field\uff086 bytes\uff09</li> <li>source field\uff086 bytes\uff09</li> <li>type field\uff082 bytes\uff09\uff1a\u6807\u8bc6 upper layer protocol\u3002</li> <li>CRC checksum\uff084 bytes\uff09</li> <li>preamble\uff088 bytes\uff09\uff1a\u6807\u8bc6 frame \u7684\u5f00\u5934\u5e76\u540c\u6b65\u65f6\u949f\u3002</li> </ul> <p>Ethernet technologies \u63d0\u4f9b\u7684\u662f connectionless\u3001unreliable \u7684\u670d\u52a1\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#link-layer-switches","title":"Link-Layer Switches","text":"<p>switch \u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5c06 incoming frames forward \u5230 outgoing links\u3002switch \u662f transparent \u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0chost \u548c router \u5e76\u4e0d\u77e5\u9053\u5b83\u7684\u5b58\u5728\uff0c\u5b83\u4e5f\u4e0d\u9700\u8981\u624b\u52a8\u914d\u7f6e\uff0c\u662f plug-and-play \u7684\u3002</p> <p>switch \u7684\u6bcf\u4e2a interface \u90fd\u6709\u4e00\u4e2a output buffer\uff0c\u4e0e router \u7c7b\u4f3c\u3002</p> <p>switch \u4e3b\u8981\u6709\u4e24\u4e2a\u529f\u80fd\uff1afiltering \u548c forwarding\u3002\u5b83\u4eec\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a switch table \u6765\u5b9e\u73b0\uff1a\u5b58\u50a8 MAC \u5730\u5740\u548c\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u53e6\u5916\u8fd8\u6709\u8fc7\u671f\u65f6\u95f4\u3002</p> <p>\u5f53\u4ece interface \\(x\\) \u4e2d\u6536\u5230 destination MAC address \u4e3a \\(\\alpha\\) \u7684 frame \u65f6\uff1a</p> <ul> <li>\u82e5 \\(\\alpha\\) \u4e0d\u5728 switch table \u4e2d\uff0c\u5219 broadcast\u3002</li> <li>\u82e5 \\(\\alpha\\) \u5bf9\u5e94\u7684 interface \u4e3a \\(x\\) \u65f6\uff0c\u5219 discard\u3002</li> <li>\u82e5 \\(\\alpha\\) \u5bf9\u5e94\u7684 interface \u4e0d\u7b49\u4e8e \\(x\\) \u65f6\uff0c\u5219 forward\u3002</li> </ul> <p>switch \u662f self-learning \u7684\uff1a\u5982\u679c\u5728 intreface \\(x\\) \u4e2d\u6536\u5230\u4e86 source MAC address \u4e3a \\(x\\) \u7684 frame \u4f1a\u5728 table \u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u8bb0\u5f55\u3002</p> <p>\u76f8\u6bd4 hub\uff0cswitch \u5177\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ul> <li>\u6d88\u9664\u4e86 collision\u3002</li> <li>\u53ef\u4ee5\u5c06\u4e0d\u540c technology \u7684 links \u8fde\u63a5\u5728\u4e00\u8d77\u3002</li> <li>\u63d0\u4f9b network management \u670d\u52a1\uff0c\u5982 enhanced security \u7b49\u3002</li> </ul> <p>switch \u548c router \u5404\u81ea\u5177\u6709 pros \u548c cons\uff1a</p> <ul> <li>switch \u5373\u63d2\u5373\u7528\uff0c\u65e0\u9700\u624b\u52a8\u914d\u7f6e\uff1b\u53ea\u6709 2 layers\uff0c\u6027\u80fd\u66f4\u597d\uff1b\u53ea\u80fd\u7ec3\u6210 spanning tree\uff0c\u4e0d\u80fd\u5f62\u6210\u73af\uff1b\u5982\u679c subnet \u5185 host \u592a\u591a\u4f1a\u5f71\u54cd\u6027\u80fd\uff1b\u53ef\u80fd\u906d\u53d7 broadcast storm\u3002</li> <li>router \u9700\u8981\u624b\u52a8\u914d\u7f6e\uff1b\u6709 3 layers\uff0c\u6027\u80fd\u7565\u5dee\uff1b\u53ef\u4ee5\u968f\u4fbf\u8fde\uff0c\u4ece\u800c\u63d0\u4f9b\u591a\u4e2a route \u4f9b routing protocol \u4f7f\u7528\uff0c\u5b9e\u73b0 best path\uff1b\u63d0\u4f9b firewall \u9632\u6b62 broadcast storm\u3002</li> </ul> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u51e0\u5341\u4e0a\u767e\u4e2a host \u4f7f\u7528 switch \u5373\u53ef\uff0c\u66f4\u591a\u7684\u9700\u8981 router \u8fdb\u884c\u4e2d\u8f6c\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#virtual-local-area-networks-vlans","title":"Virtual Local Area Networks (VLANs)","text":"<p>LANs \u5b58\u5728\u4ee5\u4e0b\u4e00\u4e9b\u9650\u5236\uff1a</p> <ul> <li>\u7f3a\u5c11\u5bf9 traffic \u7684\u9650\u5236\uff0c\u4f8b\u5982\u672a\u88ab\u5b66\u4e60\u5230\u7684 MAC \u5730\u5740\u53d1\u9001\u7684 ARP \u4ecd\u9700 traverse \u6574\u4e2a subnet\uff0c\u964d\u4f4e\u4e86\u6027\u80fd\u3002</li> <li>switch \u7684 ports \u6570\u91cf\u4e0d\u8db3\u4ee5\u5339\u914d subnet \u5185 host \u7684\u6570\u91cf\u3002</li> <li>\u8981\u5728\u4e0d\u540c\u7684 subnet \u4e4b\u95f4\u79fb\u52a8 host \u9700\u8981\u66f4\u6539\u7269\u7406\u63a5\u7ebf\u3002</li> </ul> <p>VLAN \u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5b83\u901a\u8fc7\u8f6f\u4ef6\u5bf9 switch \u7684 ports \u8fdb\u884c\u914d\u7f6e\uff0c\u5c06 ports \u5212\u5206\u4e3a\u4e0d\u540c\u7684 group\uff0c\u6bcf\u4e2a group \u90fd\u5c5e\u4e8e\u4e00\u4e2a subnet\u3002\u4e3a\u4e86\u5c06\u4e0d\u540c subnet \u76f8\u8fde\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a router \u5c06\u8fd9\u4e24\u4e2a switch \u8fde\u63a5\u8d77\u6765\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5f88\u591a switch \u90fd\u81ea\u5e26\u4e00\u4e2a router\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 VLAN trunking \u5c06\u5206\u5c5e\u4e8e\u4e0d\u540c switch \u4e0a\u7684 port \u8fde\u63a5\u8d77\u6765\u4f5c\u4e3a\u4e00\u4e2a VLAN\uff1a\u6bcf\u4e00\u4e2a switch \u4e0a\u6709\u4e00\u4e2a trunk port\uff0c\u5c06\u9700\u8981 trunking \u7684 switch \u901a\u8fc7 trunk port \u76f8\u8fde\uff0c\u53d1\u9001\u5230\u5bf9\u9762 switch \u7684 VLAN \u7684 frame \u4f1a\u88ab forward \u5230 trunk port\u3002 trunking \u65f6\u4f7f\u7528\u7684\u662f extended Ethernet frame format 802.1Q\uff0c\u7531\u53d1\u9001\u7aef\u7684 switch \u5c06\u5bf9\u5e94\u7684 VLAN tag \u52a0\u5165 header \u6765\u5bf9 VLAN \u8fdb\u884c\u6807\u8bc6\u3002</p> <p>\u9664\u4e86\u57fa\u4e8e switch port \u7684 VLAN\uff0c\u8fd8\u6709\u57fa\u4e8e MAC address \u548c network protocol \u7684 VLAN\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#multiprotocol-label-switching-mpls","title":"Multiprotocol Label Switching (MPLS)","text":"<p>MPLS \u91c7\u53d6\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a\u5b9a\u957f\u7684 label \u6765\u4f18\u5316 IP router \u8fdb\u884c forward \u7684\u901f\u5ea6\u3002\u5b83\u4ecd\u7136\u4f7f\u7528\u7684\u662f IP addressing \u548c routing\uff0c\u4f46\u662f\u5728 link layer header \u548c network layer header \u4e4b\u95f4\u52a0\u5165\u4e86\u4e00\u4e2a MPLS header\uff0c\u5b83\u7531 label\u3001exp\u3001s\u3001TTL \u7ec4\u6210\u3002</p> <p>MPLS frame \u4ec5\u4ec5\u80fd\u5728\u652f\u6301 MPLS \u7684 router \u4e4b\u95f4\u8fdb\u884c\u4f20\u8f93\uff0c\u5728\u5904\u7406 MPLS datagram \u65f6\uff0crouter \u4e0d\u9700\u8981\u5c06 destination IP \u5c55\u5f00\u5e76\u5728 forwarding table \u4e2d look up \u6765\u8fdb\u884c longest prefix match\u3002</p> <p>MPLS \u53ef\u4ee5\u6f5c\u5728\u63d0\u5347 switching speed\uff0c\u4e5f\u5e26\u6765\u4e86\u65b0\u7684 traffic management \u7684\u80fd\u529b\uff0c\u5982 VPNs\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Network/CNATDA/Chapter%206/#data-center-networking","title":"Data Center Networking","text":"<p>\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u5efa\u9020\u4e86\u8bb8\u591a data centers\uff0c\u5b83\u4eec\u5bf9\u5916\u63a5\u5165 Internet\uff0c\u5bf9\u5185\u5b58\u5728\u4e00\u5957 data center networks\u3002</p> <p>data center \u4e3b\u8981\u63d0\u4f9b 3 \u79cd\u670d\u52a1\uff1aprovide content\u3001distributed computing\u3001cloud computing\u3002</p> <p>data center \u5185\u7684 hosts \u79f0\u4e3a blades\uff0c\u51e0\u5341\u4e2a blades \u7ec4\u6210\u4e00\u4e2a rack\uff0c\u6bcf\u4e2a rack \u6709\u4e00\u4e2a switch\uff0c\u88ab\u79f0\u4e3a Top of Rack (ToR) switch\u3002</p> <p>data center network \u652f\u6301\u4e24\u79cd traffic\uff1a\u5916\u90e8\u7684 clients \u4e0e\u5185\u90e8\u7684 hosts \u4e4b\u95f4\u7684 traffic\u3001\u5185\u90e8\u7684 hosts \u4e4b\u95f4\u7684 traffic\uff0c\u4e3a\u4e86\u652f\u6301\u7b2c\u4e00\u79cd traffic\uff0c\u8bbe\u6709 border routers \u6765\u8fde\u63a5 Internet\u3002</p> <p>\u53e6\u5916\uff0c\u4e3a\u4e86\u5206\u914d\u5916\u754c\u5927\u91cf\u7684 requests\uff0cdata center network \u4e2d\u8bbe\u6709 load balancer \u6765\u5206\u914d\u8fd9\u4e9b requests \u7ed9\u4e0d\u540c\u7684\u4f46\u662f\u63d0\u4f9b\u76f8\u540c\u5185\u5bb9\u7684 hosts \u4ece\u800c\u5e73\u8861 load\uff0c\u540c\u65f6 load balancer \u8fd8\u8d77\u5230\u4e86\u4e00\u4e2a NAT-like \u7684\u529f\u80fd\u3002</p> <p></p> <p>\u6811\u72b6\u7684\u7f51\u7edc\u7ed3\u6784\u4f7f\u5f97 data center \u53ef\u4ee5\u62e5\u6709\u4e0a\u4e07\u4e2a servers\uff0c\u4f46\u662f\u4e5f\u5b58\u5728\u7740 limited host-to-host capacity \u7684\u95ee\u9898\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709 3 \u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>\u90e8\u7f72\u66f4\u9ad8\u901f\u7387\u7684 switch \u548c router\uff0c\u8fd9\u6837\u5f00\u9500\u4f1a\u5f88\u5927\u3002</li> <li>\u5c06\u9700\u8981\u4e92\u76f8\u901a\u4fe1\u7684 host \u5c3d\u91cf\u653e\u5728\u4e00\u4e2a\u5b50\u6811\u4e0b\uff0c\u8fd9\u6837\u4e0d\u5bb9\u6613\u505a\u5230\u4e14\u7075\u6d3b\u6027\u8f83\u4f4e\u3002</li> <li>\u5c06\u76f8\u90bb\u4e24\u5c42\u7ea7\u7684 switch \u4e4b\u95f4\u4e92\u76f8\u8fde\u901a\uff0c\u589e\u52a0 interconnection \u7684\u6570\u91cf\uff0c\u8fd9\u6837\u5728\u4f18\u5316\u6027\u80fd\u7684\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002</li> </ul> <p>data center \u901a\u5e38\u4f7f\u7528 SDN \u6765\u5bf9\u7f51\u7edc\u8fdb\u884c\u96c6\u4e2d\u5f0f\u7ba1\u7406\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf cloud computing \u548c\u7f51\u7edc\u7ba1\u7406\uff0cdata center \u4f7f\u7528 virtual machine \u6765\u5c06\u8f6f\u4ef6\u4e0e\u786c\u4ef6\u8fdb\u884c decouple\u3002\u4e3a\u4e86\u65b9\u4fbf VM \u5728\u4e0d\u540c host \u4e4b\u95f4\u79fb\u52a8\uff0c\u53ef\u4ee5\u5c06\u6574\u4e2a data center network \u770b\u6210\u662f\u4e00\u4e2a single\u3001flat\u3001layer-2 network\u3002\u8981\u4f7f\u6240\u6709\u7684 hosts \u770b\u4e0a\u53bb\u662f\u4e0e\u5355\u4e2a\u7684 switch \u76f8\u8fde\uff0c\u53ef\u4ee5\u5c06 ARP \u7684\u673a\u5236\u6539\u6210\u4e00\u4e2a\u7c7b\u4f3c DNS query \u7684\u673a\u5236\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u5f20\u5206\u914d\u7ed9 VM \u7684 IP \u5730\u5740\u5230 VM \u5bf9\u5e94\u7684 ToR switch \u7684\u6620\u5c04\u8868\u3002</p> <p>data center \u5185\u90e8\u7684 hosts \u6709\u9650\uff0c\u56e0\u6b64\u5185\u90e8 network \u7684 buffer size \u548c delay \u4e5f\u5f88\u5c0f\uff0c\u5e76\u4e14 congestion control \u4f1a\u964d\u4f4e\u6027\u80fd\uff0c\u56e0\u6b64\u4e00\u822c\u4f7f\u7528\u9488\u5bf9 data center \u7684 TCP protocols\u3002</p> <p>modular data center (MDC) \u662f\u4e00\u4e2a\u7531\u81f3\u591a\u6570\u5343\u4e2a hosts \u7ec4\u6210\u7684 container\uff0c\u5f53 MDC \u5185\u90e8\u7684\u67d0\u4e2a component \u574f\u6389\u65f6\uff0cMDC \u53ef\u4ee5\u4ee5 degraded performance \u7ee7\u7eed\u5de5\u4f5c\uff0c\u5f53\u5f88\u591a components \u90fd\u574f\u6389\u7684\u65f6\u5019\uff0c\u6574\u4e2a MDC \u5c31\u4f1a\u88ab\u4e22\u5f03\u3002</p> <p>\u5f88\u591a\u516c\u53f8\u4f1a\u5b9a\u5236\u4ed6\u4eec\u7684 data center \u5185\u7684\u51e0\u4e4e\u4e00\u5207\u5185\u5bb9\u3002</p> <p>Amazon \u4f7f\u7528 \u201cavailable zones\u201d \u5c06 data center \u5728\u90bb\u8fd1\u4f46\u662f\u4f4d\u7f6e\u4e0d\u540c\u7684\u5730\u65b9\u8fdb\u884c\u590d\u5236\uff0c\u4ece\u800c\u63d0\u4f9b fault tolerance\uff0c\u4e5f\u4fdd\u8bc1\u4e86 low latency\uff0c\u63d0\u9ad8\u4e86\u670d\u52a1\u7684\u53ef\u9760\u6027\u3002</p>","tags":["CNATDA","Compter-Network"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/","title":"Stanford CS110L","text":"<p>Info</p> <p>Study notes based on Stanford CS110L, Spring 2020 online videos.</p>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#why-rust","title":"Why Rust","text":"<p>lecture-01.pdf</p> <ul> <li>Why not C/C++?<ul> <li>Memory safety issues<ul> <li>Overflow: buffer overflow, integer overflow, etc.</li> <li>Valgrind is unable to find leaks resulted by buffer overflow.</li> </ul> </li> </ul> </li> <li>Why not use GC\u2019ed languages<ul> <li>Expensive<ul> <li>No matter what type of GC is used, there will always be nontrivial memory overhead.</li> </ul> </li> <li>Disruptive<ul> <li>Drop whatever you\u2019re doing - it\u2019s time for GC!</li> </ul> </li> <li>Non-deterministic<ul> <li>Nobody knows when will the next GC pause be. Depends on how much money is being used.</li> </ul> </li> <li>Precludes manual optimization<ul> <li>GC optimizes for the average use case, ignorant of knowing how you might use memory.</li> </ul> </li> <li>Memory safety issues persist</li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#memory-safety","title":"Memory Safety","text":"<p>lecture-02.pdf</p> <ul> <li>Why is it so easy to screw up in C?<ul> <li>Dangling pointers</li> <li>Double frees</li> <li>Iterator Invalidation</li> <li>Memory leaks</li> </ul> </li> <li>It is incredibly hard to reason about programs.</li> <li>How does Rust prevent from the errors above?<ul> <li>Ownership<ul> <li>Passing ownership/references: just passes a pointer</li> </ul> </li> <li>Borrowing</li> <li>Lifetimes</li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#error-handling","title":"Error Handling","text":"<p>lecture-03.pdf</p> <ul> <li>Handling nulls<ul> <li>Delete <code>NULL</code> and replace with <code>None</code> wrapped in <code>Option</code></li> </ul> </li> <li>Handling errors<ul> <li>Most languages use exceptions<ul> <li>Failure mode are hard to spot: any function can throw any exception at any time</li> <li>Hard to manage in evolving codebases</li> <li>Especially hard when manual memory management is involved</li> </ul> </li> <li>Error handling in Rust<ul> <li>If an unrecoverable error occurs, panic</li> <li>If a recoverable error may occur, return a <code>Result</code></li> <li>Use <code>unwrap()</code> and <code>expect()</code></li> </ul> </li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#object-oriented-rust","title":"Object Oriented Rust","text":"<p>Check out the official lecture notes.</p>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#traits-and-generics","title":"Traits and Generics","text":"<p>lecture-05.pdf</p> <ul> <li>Traits<ul> <li>What can traits do?<ul> <li>Display</li> <li>Clone/Copy</li> <li>Iterator/IntoIterator</li> <li>Eq/PartialEq</li> </ul> </li> <li>Allows us to override functionality<ul> <li>Drop</li> <li>Deref</li> </ul> </li> <li>Allows us to define default implementations<ul> <li>ToString</li> </ul> </li> <li>Allows us to overload operators</li> </ul> </li> <li>Generics<ul> <li>No performance impact at runtime: compiler create separate functions for types that are used</li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#smart-pointers","title":"Smart Pointers","text":"<p>lecture-06.pdf</p> <ul> <li><code>Box&lt;T&gt;</code><ul> <li>Plays the same role as  <code>unique_ptr&lt;T&gt;</code> in C++</li> </ul> </li> <li><code>Rc&lt;T&gt;</code><ul> <li>Allows us to have multiple immutable references to a chunk of heap memory</li> <li>Caution: you can have memory leaks if you create reference cycles</li> </ul> </li> <li><code>RefCell&lt;T&gt;</code><ul> <li>Allows us to have shared references to the cell with mutability</li> <li>Its <code>new</code> function doesn\u2019t heap allocate</li> <li>This is still safe because it will enforce the reference rules at runtime, which results in additional cost</li> <li>Common pattern: <code>Rc&lt;RefCell&lt;T&gt;&gt;</code></li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#pitfalls-in-multiprocessing","title":"Pitfalls in Multiprocessing","text":"<p>lecture-07.pdf</p> <ul> <li>Don\u2019t call <code>fork()</code><ul> <li>Why fork?<ul> <li>Get concurrent execution<ul> <li>Accidentally nesting forks when spawning multiple child processes</li> <li>Children can execute code they weren\u2019t supposed to</li> <li>Accessing data structure during threading</li> <li>Failure to clean up zombie children if <code>waitpid()</code> isn\u2019t called</li> </ul> </li> <li>Invoke external functionality on the system<ul> <li>Almost every <code>fork()</code> is followed by an <code>exec()</code></li> </ul> </li> </ul> </li> <li>Common multiprocessing tactic<ul> <li>Let <code>fork()</code> and <code>exec()</code> be</li> <li>Define a higher-level abstraction to take care of the common cases</li> </ul> </li> <li><code>Command</code> in Rust<ul> <li>No concurrency: run,  and get the output in a buffer</li> <li>No concurrency: run (without swallowing output), and get the status code</li> <li>With concurrency: spawn and immediately return</li> <li><code>pre_exec()</code> function</li> </ul> </li> </ul> </li> <li>Don\u2019t call <code>pipe()</code><ul> <li>Problems<ul> <li>Leaked file descriptors</li> <li>Use-after-close</li> </ul> </li> <li>Potential solution<ul> <li>Add a layer of abstraction</li> <li>Write to a stdin pipe (what rust does)<ul> <li>The <code>os_pipe</code> crate allows for creating arbitrary pipes</li> </ul> </li> </ul> </li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Computer%20Security/Stanford%20CS110L/#google-chrome","title":"Google Chrome","text":"<p>lecture-08.pdf</p> <ul> <li>Don\u2019t call <code>signal()</code><ul> <li><code>signal()</code> is dead. Long live <code>sigaction()</code><ul> <li>The only portable use of <code>signal()</code> is to set a signal\u2019s disposition to <code>SIG_DFL</code> or <code>SIG_IGN</code></li> </ul> </li> </ul> </li> </ul>","tags":["OS","Computer-Security","Programming-Language"]},{"location":"Computer%20Science/Math/Linear%20Algebra%20Done%20Wrong/","title":"Linear Algebra Done Wrong","text":"<p>Info</p> <p>\u300cLinear Algebra Done Wrong\u300dby Sergei Treil</p>","tags":["Math","Algebra"]},{"location":"Computer%20Science/Math/Linear%20Algebra%20Done%20Wrong/#ch2","title":"Ch.2","text":"<p>\u4ece\u4fe1\u606f\u91cf\u7684\u89d2\u5ea6\u6765\u7406\u89e3\uff1a</p> <p>\u65e0\u8bba\u662f\u4ece row vectors \u5f62\u6210\u7684\u7a7a\u95f4\u8fd8\u662f column vectors \u5f62\u6210\u7684\u7a7a\u95f4\u6765\u770b\uff0c\u4ed6\u4eec\u6240\u6709\u7ed9\u51fa\u7684\u4fe1\u606f\u90fd\u53ef\u4ee5\u7528\u540c\u4e00\u4e2a matrix \u6765\u6982\u62ec\uff0c\u4e5f\u5c31\u662f\u4fe1\u606f\u91cf\u662f\u76f8\u7b49\u7684\uff0c\u90a3\u4e48\u4ed6\u4eec\u6240\u5f62\u6210\u7684 space \u5fc5\u7136\u4e5f\u4f1a\u662f\u76f8\u540c\u7684\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u4eec\u7684 space \u53d6\u51b3\u4e8e\u7ef4\u5ea6\u8f83\u5c0f\u8005\uff0c\u5047\u5982 # row &gt; # col\uff0c\u90a3\u4e48 column vectors \u591a\u51fa\u6765\u7684\u7ef4\u5ea6\u6ca1\u6709\u4f20\u8fbe\u4efb\u4f55\u4fe1\u606f\uff0c\u4e8e\u662f\u8fd9\u4e2a matrix \u4e00\u5b9a\u4f1a\u5b58\u5728\u5197\u4f59\u4fe1\u606f\uff0c\u6b64\u65f6\u8868\u73b0\u5728 row vectors \u4e0a\u5c31\u662f\u591a\u4f59\u7684 vectors\u3002</p> <p>Quote</p> <p>\u8fd9\u79cd\u66f4\u611f\u6027\u7684\u7406\u89e3\u5f80\u5f80\u662f\u53d1\u73b0\u65b0\u9886\u57df\u3001\u65b0\u65b9\u6cd5\u7684\u7a81\u7834\u53e3\uff0c\u7eaf\u7cb9\u7684\u6570\u5b57\u63a8\u6f14\u66f4\u591a\u7684\u662f\u5728\u53d1\u73b0\u540e\u8bc1\u660e\u5176\u601d\u8def\u4e25\u8c28\u6027\u7684\u5de5\u5177\u3002 <p>\u2014\u2014\u6ca1\u9519\uff0c\u662f\u6211\u8bf4\u7684\ud83d\ude0e</p></p>","tags":["Math","Algebra"]},{"location":"Computer%20Science/Math/MIT%2018.330/","title":"MIT 18.330: Introduction to Numerical Analysis","text":"<p>Info</p> <p>MIT Introduction to Numerical Analysis, Spring 2020 \u57fa\u4e8e\u8bfe\u7a0b\u7684 slides &amp;  notes \u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Math"]},{"location":"Computer%20Science/Math/MIT%2018.330/#root-finding","title":"Root Finding","text":"<p>\u5047\u8bbe\u6211\u4eec\u9700\u8981\u6c42\u89e3\u65b9\u7a0b \\(g(x)=h(x)\\)\uff0c\u8fd9\u76f8\u5f53\u4e8e\u6c42\u89e3\u51fd\u6570 \\(f(x):= g(x)-h(x)\\) \u7684\u96f6\u70b9\u3002\u7531\u4e0a\u4e00\u8282\u8bfe\u7684\u77e5\u8bc6\u6211\u4eec\u53ef\u4ee5\u5c06 \\(f(x)\\) \u5199\u6210 Taylor \u591a\u9879\u5f0f\u7684\u5f62\u6001\u7136\u540e\u8f6c\u5316\u4e3a\u6c42\u591a\u9879\u5f0f\u7684\u6839\u3002</p> <p>\u4ee4 \\(p(x)=a_0+a_1x+\\cdots+a_nx^n\\)\uff0c\u6839\u636e fundamental theorem of algebra \uff0c\\(p(x)\\) \u5b58\u5728 \\(n\\) \u4e2a\u590d\u6570\u6839\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06 \\(p(x)\\) \u5199\u6210 \\(p(x)=(x-x_1)^{m_1}\\cdots(x-x_k)^{m_k}\\) \u7684\u5f62\u5f0f\u3002</p> <p>\u5f53 \\(n=2\\) \u65f6\uff0c\\(p(x)\\) \u7684\u6839\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u901a\u89e3\u516c\u5f0f\uff1b\u5f53 \\(n=3,4\\) \u65f6\uff0c\u6709\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u901a\u89e3\u516c\u5f0f\uff1b\u5f53 \\(n\\ge5\\) \u65f6\uff0c\u6839\u636e Abel-Ruffini theorem \uff0c\u6b64\u65f6\u6ca1\u6709\u901a\u89e3\u516c\u5f0f\u3002</p> <p>\u6211\u4eec\u7684\u76ee\u7684\u662f\u4f7f\u7528 numerical methods \u627e\u51fa\u6240\u6709\u7684\u8fd1\u4f3c\u89e3\uff0c\u5b58\u5728\u4e00\u4e9b methods (e.g. Aberth) \u53ef\u4ee5\u540c\u65f6\u6c42\u51fa\u6240\u6709\u89e3\uff0c\u4f46\u662f\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u4e3b\u8981\u8003\u8651\u7684\u662f\u6c42\u5355\u4e2a\u89e3\u3002</p> <p>\u7531\u4e8e numerical methods \u53ea\u80fd\u903c\u8fd1\u89e3\uff0c\u6240\u4ee5\u8fd9\u4e2a method \u5fc5\u7136\u662f iterative \u7684\uff08\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff09\u3002\u5047\u8bbe\u6211\u4eec\u4f7f\u7528\u7b97\u6cd5 \\(g\\)\uff0c\u521d\u59cb\u503c\u662f \\(x_0\\)\uff0c\u90a3\u4e48\u6bcf\u6b21\u8fed\u4ee3\u7684\u89e3\u4e4b\u95f4\u5b58\u5728 \\(x_{n+1}=g(x_n)\\) \u7684\u5173\u7cfb\u3002</p> <p>\u5047\u8bbe \\(\\{x_n\\}\\) \u6536\u655b\u4e8e \\(x^{\\ast}\\)\uff0c\u90a3\u4e48\u6709 \\(g(x^*)=x^*\\)\uff08\u5047\u8bbe \\(g\\) \u8fde\u7eed\uff09\uff0c\u5176\u4e2d \\(x^*\\) \u662f \\(g\\) \u7684\u4e0d\u52a8\u70b9\uff0c\u76f8\u5f53\u4e8e \\(g\\) \u4e0e \\(y=x\\) \u7684\u4ea4\u70b9\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u89e3 \\(f(x):=g(x)-x\\) \u7684\u6839\u3002</p> <p>\u4e0d\u52a8\u70b9\u5b58\u5728\u5b9a\u7406\uff1a</p> <ul> <li>If \\(g\\) is continuous and maps \\([a,b]\\) into itself, then \\(\\exists\\) a fixed point</li> <li>If \\(|g'(x)|\\le k\\ \\forall\\  x\\in [a,b]\\) with \\(k&lt;1\\), then unique</li> <li>Called a contraction mapping</li> </ul> <p>\u6211\u4eec\u5c06\u8fd9\u6837\u4e00\u79cd\u8fed\u4ee3\u79f0\u4e3a discrete-time dynamical system \u3002</p> <p>\u4ee4 \\(\\delta_n := x_n-x^*\\) \uff0c\u6211\u4eec\u6709\uff08\u62c9\u683c\u6717\u65e5\u4e2d\u503c\u5b9a\u7406\uff09</p> \\[ \\begin{aligned}     \\delta_{n+1}&amp;=x_{n+1}-x^*\\\\     &amp;= g(x_n)-x^*\\\\     &amp;= g(x^*+\\delta_n)-x^*\\\\     &amp;\\simeq \\delta g'(x^*) \\end{aligned} \\] <p>\u4ee4 \\(\\alpha=g'(x^*)\\) \uff0c\u6211\u4eec\u6709 \\(\\delta_{n+1}=\\alpha\\delta_n\\) </p> <ul> <li>Decays (stable fixed point): \\(|\\alpha|&lt;1\\) </li> <li>Grows (unstable fixed point): \\(\\alpha&gt;1\\) </li> </ul> <p>\u5982\u679c\u4e00\u79cd\u8fed\u4ee3\u6ee1\u8db3 \\(\\lim_{n\\to \\infty} \\dfrac{|x_{n+1}-x^*|}{|x_n-x^*|\\alpha}=\\lambda\\)\uff08\\(\\alpha, \\lambda\\) \u662f\u5e38\u6570\uff09\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u79f0\u5b83\u662f order \\(\\alpha\\) \u7684\u3002</p> <ul> <li>\\(\\alpha=1\\): linearly convergent</li> <li>\\(\\alpha=2\\): quadratic convergent</li> </ul> <p>\u725b\u987f\u8fed\u4ee3\u6c42\u6839\u6cd5\uff1a\\(x_{n+1}=x_n-\\dfrac{f(x_n)}{f'(x_n)}\\) \u662f quadratic convergent\u3002</p>","tags":["Math"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/","title":"\u8c22\u60e0\u6c11\u505a\u9898\u8bb0\u5f55","text":"<p>Warning</p> <p>\u672c\u6587\u5199\u4e8e 2022 \u5e74\u5927\u4e00\u4e0a\u5b66\u671f\uff0c\u8c22\u60e0\u6c11\u4e0a\u518c\u7684\u8bfe\u540e\u7ec3\u4e60\u9898\u5927\u90e8\u5206\u90fd\u5199\u4e86\uff0c\u4f46\u662f\u5f88\u53ef\u60dc\uff0c\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\u6ca1\u80fd\u628a\u6211\u8ba4\u4e3a\u7684\u4e00\u4e9b\u597d\u9898\u6458\u5f55\u5b8c\u3002</p>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#_1","title":"\u51e0\u4e2a\u5e38\u7528\u521d\u7b49\u4e0d\u7b49\u5f0f","text":"<ol> <li> <p>\u5173\u4e8e Bernoulli \u4e0d\u7b49\u5f0f\u7684\u63a8\u5e7f     &gt; \uff083\uff09\u8bc1\u660e\uff1a\u82e5 \\(a_i&gt;-1(i=1,2,\\cdots,n)\\) \u4e14\u540c\u53f7\uff0c\u5219\u6210\u7acb\u4e0d\u7b49\u5f0f     &gt; \\(\\(\\prod_{i=1}^n(1+a_i)\\ge1+\\sum_{i=1}^na_i\\)\\)</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u6784\u9020\u8f85\u52a9\u6570\u5217 \\(\\{x_n\\}\\) \u4f7f \\(x_n=\\prod_{i=1}^n(1+a_i)-(1+\\sum_{i=1}^na_i)\\)</p> <p>\u663e\u7136\u6709 \\(x_1=0\\) \uff0c\u53ea\u9700\u8bc1\u660e \\(\\{x_n\\}\\) \u4e3a\u5355\u8c03\u9012\u589e\u6570\u5217\u5373\u53ef.</p> \\[x_{n+1}-x_n=[\\prod_{i=1}^n(1+a_i)-1]a_{n+1}\\ge0 \\Leftrightarrow x_{n+1}\\ge x_n\\] <p>\u5219\u6709 \\(x_n\\ge x_1=0\\) \uff0c\u5373 \\(\\prod_{i=1}^n(1+a_i)\\ge1+\\sum_{i=1}^na_i\\)</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u5728\u5b58\u5728\u591a\u9879\u6c42\u548c\u7684\u60c5\u51b5\u4e0b\u6784\u9020\u8f85\u52a9\u6570\u5217\u53ef\u4ee5\u6d88\u9664\u7edd\u5927\u591a\u6570\u9879\uff0c\u4ece\u800c\u5316\u7e41\u4e3a\u7b80\uff0c\u540c\u65f6\u4e5f\u80fd\u591f\u5229\u7528\u6570\u5217\u7684\u5355\u8c03\u6027.</p> </li> <li> <p>\u9636\u4e58 \\(n!\\) \u5728\u6570\u5b66\u5206\u6790\u4ee5\u53ca\u5176\u4ed6\u8bfe\u7a0b\u4e2d\u7ecf\u5e38\u51fa\u73b0\uff0c\u4ee5\u4e0b\u662f\u51e0\u4e2a\u6709\u5173\u4e0d\u7b49\u5f0f\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u4ece\u5e73\u5747\u503c\u4e0d\u7b49\u5f0f\u5f97\u5230</p> <p>\uff082\uff09\u5229\u7528 \\((n!)^2=(1\\cdot n)[2\\cdot (n-1)]\\cdots(n\\cdot 1)\\) \u8bc1\u660e\uff1a\u5f53 \\(n&gt;1\\) \u65f6\u6210\u7acb $$n!&lt;\\left(\\frac{n+2}{\\sqrt{6}} \\right)^n $$</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u9996\u5148\u6839\u636e\u63d0\u793a\u548c\u4e0d\u7b49\u5f0f\u4e2d\u7684 \\(\\sqrt{6}\\) \u90fd\u5e94\u8be5\u60f3\u5230\u5c06\u5f85\u8bc1\u4e0d\u7b49\u5f0f\u5e73\u65b9\uff0c\u6709</p> \\[(n!)^2&lt;\\left(\\frac{n^2+4n+4}{6} \\right)^n\\] <p>\u7136\u540e\u5bf9\u5b83\u4f7f\u7528\u653e\u7f29\u9b54\u6cd5.\u7531\u4e8e\u5c06 \\((1\\cdot n)[2\\cdot (n-1)]\\cdots(n\\cdot 1)\\) \u4e00\u9879\u4e00\u9879\u5730\u653e\u7f29\u4f1a\u6709\u8f83\u5927\u7684\u8bef\u5dee\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u5c06\u8fd9 n \u9879\u4e00\u8d77\u653e\u7f29\uff0c\u5f97\u5230</p> \\[(n!)^2=(1\\cdot n)[2\\cdot (n-1)]\\cdots(n\\cdot 1)\\le \\left(\\frac{(1\\cdot n)+[2\\cdot (n-1)]+\\cdots+(n\\cdot 1)}{n}\\right)^n\\] <p>\u4e0b\u9762\u6784\u9020\u8f85\u52a9\u6570\u5217\u6c42\u89e3\u5206\u5b50\u7684\u8868\u8fbe\u5f0f.</p> <p>\u8bbe \\(x_n=(1\\cdot n)+[2\\cdot (n-1)]+\\cdots+(n\\cdot 1)\\) \uff0c\u5219 \\(x_1=n\\) \uff0c\u4f5c\u5dee\u5f97 </p> \\[x_{n+1}-x_n=1+2+\\cdots+n+n+1=\\frac{n^2+3n+2}{2}\\] <p>\u7d2f\u52a0\u540e\u5f97\u5230</p> \\[x_{n+1}-x_1=\\frac{n^3+6n^2+11n}{6} \\] <p>\u4e8e\u662f \\(x_n=\\frac{n^3+3n^2+8n-12}{6}\\) \uff0c\u4ee3\u5165\u4e0a\u9762\u7684\u5f0f\u5b50\u6709</p> \\[(n!)^2\\le \\left(\\frac{(1\\cdot n)+[2\\cdot (n-1)]+\\cdots+(n\\cdot 1)}{n}\\right)^n=\\left(\\frac{n^3+3n^2+8n-12}{6n}\\right)^n \\] <p>\u56e0\u4e3a \\(\\frac{n^3+3n^2+8n-12}{n}-(n^2+4n+4)=4-(n+\\frac{12}{n})&lt;4-4\\sqrt{3}&lt;0\\) \uff0c\u6240\u4ee5 \\(n!&lt;\\left(\\frac{n+2}{\\sqrt{6}} \\right)^n\\) \u6210\u7acb.</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u8981\u5c06 \\(n!\\) \u5199\u6210\u5012\u5e8f\u7684\u4e58\u79ef\u7684\u5f62\u5f0f\u5462\uff1f\u5047\u5982\u6211\u4eec\u5c06\u5176\u5199\u6210\u6b63\u5e8f\u7684\u4e58\u79ef\u5f62\u5f0f\uff0c\u4f1a\u5f97\u5230 \\((n!)^2\\le \\left(\\frac{1^2+2^2+\\cdots+n^2}{n}\\right)^n\\) \uff0c\u5e26\u5165\u5e73\u65b9\u548c\u516c\u5f0f\u6709 \\(\\left(\\frac{1^2+2^2+\\cdots+n^2}{n}\\right)^n=\\left[\\frac{(n+1)(2n+1)}{6}\\right]^n\\) \uff0c\u7136\u540e\u6211\u4eec\u4f1a\u53d1\u73b0 \\((n+1)(2n+1)\\ge(n+2)^2\\) \uff0c\u8fd9\u4e0d\u5c31\u653e\u591a\u4e86\u561b.</p> <p>\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u9006\u5e8f\u548c \\(\\le\\) \u6b63\u5e8f\u548c\uff0c\u4e3a\u4e86\u4f7f\u653e\u7f29\u7684\u7cbe\u5ea6\u5c3d\u91cf\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5c06 \\((n!)^2\\) \u5199\u6210\u9006\u5e8f\u7684\u4e58\u79ef\u7684\u5f62\u5f0f\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u6bd4 \\((n+2)^2\\) \u5c0f\u7684\u5f0f\u5b50.</p> </li> <li> <p>\u8bc1\u660e\u4e0b\u5217\u4e0d\u7b49\u5f0f     &gt; (3)     &gt; \\(\\(\\frac{|a+b|}{1+|a+b|}\\le\\frac{|a|}{1+|a|}+\\frac{|b|}{1+|b|}\\)\\)</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u9996\u5148\u5de6\u8fb9\u7684\u53d6\u7684\u662f \\(a+b\\) \u7684\u7edd\u5bf9\u503c\uff0c\u800c\u53f3\u8fb9\u5219\u662f\u5206\u522b\u53d6 \\(a\\) \u548c \\(b\\) \u7684\u7edd\u5bf9\u503c\uff0c\u56e0\u6b64\u5e94\u8be5\u8981\u7528\u5230\u4e09\u70b9\u4e0d\u7b49\u5f0f \\(|a+b|\\le |a|+|b|\\) \uff0c\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5de6\u8fb9\u7684\u5206\u5b50\u548c\u5206\u6bcd\u90fd\u6709 \\(|a+b|\\) \u8be5\u548b\u529e\u634f\uff1f</p> <p>\u8fd9\u91cc\u6211\u4eec\u5c06\u5206\u5b50\u5206\u6bcd\u540c\u65f6\u9664\u4ee5 \\(|a+b|\\) \u5f97\u5230 \\(\\frac{1}{\\frac{1}{|a+b|}+1}\\)\uff0c\u7136\u540e\u518d\u5e26\u5165\u4e09\u70b9\u4e0d\u7b49\u5f0f\u5f97\u5230</p> \\[\\frac{|a+b|}{1+|a+b|}=\\frac{1}{\\frac{1}{|a+b|}+1}\\le\\frac{1}{\\frac{1}{|a|+|b|}+1}=\\frac{|a|+|b|}{|a|+|b|+1}\\] <p>\u7136\u540e\u5c06\u53f3\u8fb9\u7684\u5f0f\u5b50\u901a\u5206</p> \\[\\frac{|a|}{1+|a|}+\\frac{|b|}{1+|b|}=\\frac{|a|+|b|+2|ab|}{|a|+|b|+|ab|+1}\\] <p>\u8fd9\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\u4e24\u4e2a\u5f0f\u5b50\u957f\u5f97\u5341\u5206\u76f8\u4f3c\uff0c\u5206\u6bcd\u76f8\u5dee\u4e00\u4e2a \\(|ab|\\) \uff0c\u5206\u5b50\u76f8\u5dee 2 \u4e2a \\(|ab|\\) \uff0c\u800c\u5de6\u5f0f\u653e\u7f29\u540e\u7684\u5f0f\u5b50\u662f\u771f\u5206\u6570\uff0c\u4e8e\u662f\u5229\u7528\u7cd6\u6c34\u4e0d\u7b49\u5f0f\u653e\u7f29\u5f97\u5230</p> \\[\\frac{|a|+|b|}{|a|+|b|+1}\\le\\frac{|a|+|b|+|ab|}{|a|+|b|+|ab|+1}\\le\\frac{|a|+|b|+2|ab|}{|a|+|b|+|ab|+1}\\] <p>\u7efc\u4e0a\u6240\u8ff0\uff0c</p> \\[\\frac{|a+b|}{1+|a+b|}\\le\\frac{|a|+|b|}{|a|+|b|+1}\\le\\frac{|a|+|b|+2|ab|}{|a|+|b|+|ab|+1}=\\frac{|a|}{1+|a|}+\\frac{|b|}{1+|b|}\\] </li> <li> <p>\u8bd5\u6309\u4e0b\u5217\u63d0\u793a\uff0c\u7ed9\u51fa Cauchy \u4e0d\u7b49\u5f0f\u7684\u51e0\u4e2a\u4e0d\u540c\u8bc1\u660e</p> <p>(3) \u7528\u4e0d\u7b49\u5f0f \\(|AB|\\le \\frac{A^2+B^2}{2}\\)</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> </li> </ol> <p>\u5148\u5217\u51fa Cauchy \u4e0d\u7b49\u5f0f\u597d\u4e86.</p> <p>\\(\\(\\sum_{i=1}^n|a_ib_i|\\le\\sqrt{\\sum_{i=1}^na_i^2}\\sqrt{\\sum_{i=1}^nb_i^2}\\left(\u5f53\u4e14\u4ec5\u5f53\\frac{a_1}{b_1}=\\frac{a_2}{b_2}=\\cdots=\\frac{a_n}{b_n}\u65f6\u53d6\u7b49\\right)\\)\\)</p> <p>\u5f53 \\(\\sum_{i=1}^na_i=0\\) \u6216 \\(\\sum_{i=1}^nb_i=0\\) \u65f6\uff0c\u4e0d\u7b49\u5f0f\u663e\u7136\u6210\u7acb.</p> <pre><code>\u8003\u8651\u4ed6\u4eec\u4e0d\u4e3a 0 \u7684\u60c5\u51b5\uff0c\u4e0d\u7b49\u5f0f\u5373\n\n$$\\frac{\\sum_{i=1}^n|a_ib_i|}{\\sqrt{\\sum_{i=1}^na_i^2}\\sqrt{\\sum_{i=1}^nb_i^2}}\\le 1$$\n\n\u5bf9\u4e8e $i=k$ \uff0c\u6709\n\n$$\\frac{|a_kb_k|}{\\sqrt{\\sum_{i=1}^na_i^2}\\sqrt{\\sum_{i=1}^nb_i^2}}=\\frac{|a_k|}{\\sqrt{\\sum_{i=1}^na_i^2}}\\cdot\\frac{|b_k|}{\\sqrt{\\sum_{i=1}^nb_i^2}}\\le \\frac{1}{2}\\cdot\\left(\\frac{a_k^2}{\\sum_{i=1}^na_i^2}+\\frac{b_k^2}{\\sum_{i=1}^nb_i^2}\\right)$$\n\n\u90a3\u4e48\u5bf9\u4e8e $i=1,2,\\cdots,n$ \uff0c\u6c42\u548c\u6709\n\n$$\\frac{\\sum_{i=1}^n|a_ib_i|}{\\sqrt{\\sum_{i=1}^na_i^2}\\sqrt{\\sum_{i=1}^nb_i^2}}\\le\\frac{1}{2}\\cdot(1+1)=1$$\n\n\u4e0d\u7b49\u5f0f\u5f97\u8bc1.\n\n$\\color{blue}{\\textbf{Thoughts}}$\n\n\u5747\u503c\u4e0d\u7b49\u5f0f\u7684\u4e00\u4e2a\u597d\u5904\u5c31\u662f\u628a\u4e58\u79ef\u53d8\u6210\u52a0\u6cd5\u7684\u5f62\u5f0f\uff0c\u5728\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u76f4\u63a5\u5bf9 $a_ib_i$ \u4f7f\u7528\u5747\u503c\u4e0d\u7b49\u5f0f\u5c06\u4f1a\u5f97\u5230 $\\sum_{i=1}^n|a_ib_i|\\le\\frac{\\sum_{i=1}^na_i^2+\\sum_{i=1}^nb_i^2}{2}$ \uff0c\u7136\u540e\u6211\u4eec\u60f3\u8981\u8bc1\u660e $\\frac{\\sum_{i=1}^na_i^2+\\sum_{i=1}^nb_i^2}{2}\\le\\sqrt{\\sum_{i=1}^na_i^2\\cdot\\sum_{i=1}^nb_i^2}$ \uff0c\u5de6\u8fb9\u662f\u52a0\u6cd5\uff0c\u53f3\u8fb9\u5219\u662f\u6839\u53f7\u4e0b\u4e58\u79ef\u7684\u5f62\u5f0f\uff0c\u663e\u7136\u662f\u4e0d\u597d\u5904\u7406\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u554a\uff0c\u8981\u662f\u53f3\u8fb9\u7684\u4e5f\u662f\u52a0\u6cd5\u7684\u5f62\u5f0f\u5c31\u597d\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u60f3\u5bf9 $\\sum_{i=1}^na_i^2\\cdot\\sum_{i=1}^nb_i^2$ \u4e5f\u4f7f\u7528\u5747\u503c\u4e0d\u7b49\u5f0f\uff0c\u4e00\u4e2a\u529e\u6cd5\u5c31\u662f\u5728\u4e00\u5f00\u59cb\u628a\u4ed6\u4eec\u79fb\u5230\u4e0d\u7b49\u5f0f\u5de6\u8fb9\u7684\u5206\u6bcd\u4e0a\uff0c\u7136\u540e\u62c6\u6210 $\\frac{|a_k|}{\\sqrt{\\sum_{i=1}^na_i^2}}\\cdot\\frac{|b_k|}{\\sqrt{\\sum_{i=1}^nb_i^2}}$ \u7684\u5f62\u5f0f\uff0c\u518d\u4f7f\u7528\u5747\u503c\u4e0d\u7b49\u5f0f\uff0c\u4f1a\u53d1\u73b0\u6c42\u548c\u540e\u7684\u7ed3\u679c\u521a\u597d\u5c31\u662f 1 .\n</code></pre> <ol> <li>\u7528\u5411\u524d - \u5411\u540e\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e Fan Ky \u4e0d\u7b49\u5f0f <p>\u8bbe \\(0&lt;x_i\\le\\frac{1}{2},i=1,2,\\cdots,n\\) \uff0c\u5219 \\(\\(\\frac{\\prod_{i=1}^nx_i}{\\left(\\sum_{i=1}^nx_i\\right)^n}\\le\\frac{\\prod_{i=1}^n(1-x_i)}{\\left[\\sum_{i=1}^n(1-x_i)\\right]^n}\\)\\)</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <pre><code>\u4e0d\u7b49\u5f0f\u5373\n\n$$\\frac{\\prod_{i=1}^nx_i}{\\prod_{i=1}^n(1-x_i)}\\le\\left[\\frac{\\sum_{i=1}^nx_i}{\\sum_{i=1}^n(1-x_i)}\\right]^n$$\n\n\u8003\u8651 $n=2^k(k\\in \\mathbb{N_+})$ \u7684\u60c5\u5f62.\n</code></pre> <p>\u5f53 \\(k=1\\) \u65f6\uff0c\u4e0d\u7b49\u5f0f\u4e3a \\(\\frac{x_1x_2}{(1-x_1)(1-x_2)}\\le\\frac{(x_1+x_2)^2}{[(1-x_2)+(1-x_2)]^2}\\)</p> <p>\u8fd9\u91cc\u5747\u503c\u4e0d\u7b49\u5f0f\u4e0d\u597d\u4f7f\uff0c\u800c\u53c2\u6570\u53ea\u6709\u4e24\u9879\uff0c\u56e0\u6b64\u4f7f\u7528\u76f4\u63a5\u4f5c\u5dee\u6cd5\uff0c\u5f97\u5230</p> <p>\\(\\(\\frac{x_1x_2}{(1-x_1)(1-x_2)}-\\frac{(x_1+x_2)^2}{[(1-x_2)+(1-x_2)]^2}=\\frac{(x_1-x_2)^2(x_1+x_2-1)}{(1-x_2)(1-x_2)(2-x_1-x_2)^2}\\le 0\\)\\)</p> <p>\u5f97\u8bc1.</p> <p>\u5f53 \\(k=2\\) \u65f6\uff0c</p> <pre><code>$$\\begin{aligned} \u5de6\u8fb9 =&amp; \\frac{x_1x_2}{(1-x_1)(1-x_2)}\\cdot\\frac{x_3x_4}{(1-x_3)(1-x_4)} \\\\ \\le&amp; \\left(\\frac{x_1+x_2}{1-x_1+1-x_2}\\cdot\\frac{x_3+x_4}{1-x_3+1-x_4}\\right)^2 \\\\ \\le&amp; \\left[\\frac{x_1+x_2+x_3+x_4}{(1-x_1)+(1-x_2)+(1-x_3)+(1-x_4)}\\right]^4 \\end{aligned}$$\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u8bc1\u660e\u5f53 $n=2^k$ \u65f6\u4e0d\u7b49\u5f0f\u6210\u7acb.\n\n\u4e0b\u9762\u8fdb\u884c\u53cd\u5411\u5f52\u7eb3\uff1a\n\n\u5047\u8bbe\u4e0d\u7b49\u5f0f\u5728 $n$ \u65f6\u5df2\u7136\u6210\u7acb\uff0c\u73b0\u5728\u6211\u4eec\u8981\u63a8\u51fa\u5b83\u5728 $n-1$ \u65f6\u4e5f\u6210\u7acb.\n\n\u4ee4 $\\frac{\\sum_{i=1}^{n-1}x_i}{n-1}=A$ \uff0c\u5219 $\\frac{\\sum_{i=1}^{n-1}(1-x_i)}{n-1}=1-A$ \uff0c\u4e8e\u662f $\\left[\\frac{\\sum_{i=1}^{n-1}x_i}{\\sum_{i=1}^{n-1}(1-x_i)}\\right]^{n-1}=\\left(\\frac{A}{1-A}\\right)^{n-1}$ .\n\n\u5f85\u8bc1\u4e0d\u7b49\u5f0f\u5373\n\n$$\\left(\\frac{A}{1-A}\\right)^{n-1}\\ge\\frac{\\prod_{i=1}^{n-1}x_i}{\\prod_{i=1}^{n-1}(1-x_i)}=\\frac{\\prod_{i=1}^{n}x_i}{\\prod_{i=1}^{n}(1-x_i)}\\cdot\\frac{1-x_n}{x_n}$$\n\n\u7b49\u4ef7\u4e8e\n\n$$\\left(\\frac{A}{1-A}\\right)^{n-1}\\cdot\\frac{x_n}{1-x_n}\\ge\\frac{\\prod_{i=1}^{n}x_i}{\\prod_{i=1}^{n}(1-x_i)}$$\n\n\u7531\u4e8e\u4e0d\u7b49\u5f0f\u5728 $n$ \u65f6\u6210\u7acb\uff0c\u663e\u7136\u6709\n\n$$\\left(\\frac{A}{1-A}\\right)^n\\ge\\frac{\\prod_{i=1}^{n}x_i}{\\prod_{i=1}^{n}(1-x_i)}$$\n\n\u5c06 $\\frac{x_n}{1-x_n}$ \u770b\u6210 $\\frac{A}{1-A}$ \uff0c\u56e0\u800c\u4e0d\u7b49\u5f0f\u5728 $n-1$ \u65f6\u4e5f\u6210\u7acb.\n\n\u4ece\u800c Fan Ky \u4e0d\u7b49\u5f0f\u5f97\u8bc1.\n\n$\\color{blue}{\\textbf{Thoughts}}$\n\n\u663e\u7136\u6211\u4eec\u5982\u679c\u4ece\u5f85\u8bc1\u4e0d\u7b49\u5f0f\uff08\u5373 n - 1 \u7684\u60c5\u51b5\uff09\u51fa\u53d1\uff0c\u5411\u5df2\u77e5\u4e0d\u7b49\u5f0f\uff08\u5373 n \u7684\u60c5\u51b5\uff09\u8f6c\u5316\uff0c\u4f1a\u591a\u51fa\u6765\u4e00\u4e2a $\\frac{1-x_n}{x_n}$ \uff0c\u8fd9\u662f\u5f88\u81ea\u7136\u7684\u601d\u8def.\n\n\u8fd9\u9053\u9898\u7684\u5173\u952e\u5728\u4e8e\u53d1\u73b0 $\\sum_{i=1}^{n-1}x_i$ \u4e0e $\\sum_{i=1}^{n-1}(1-x_i)$ \u5728\u5747\u503c\u5f62\u5f0f\u4e0b\u7684\u9ad8\u5ea6\u76f8\u4f3c\u6027\uff0c\u5c06\u5b83\u4eec\u76f8\u9664\u540e\u7684\u5f0f\u5b50\u53c8\u4e0e $\\frac{1-x_n}{x_n}$ \u9ad8\u5ea6\u4e00\u81f4.\n</code></pre>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#21","title":"2.1 \u6570\u5217\u6781\u9650\u7684\u57fa\u672c\u6982\u5ff5","text":"<ol> <li>\u4f8b\u9898 2.1.1 <p>\u8bc1\u660e\u6570\u5217 \\(\\{\\frac{n^5}{2^n}\\}\\) \u6536\u655b\u4e8e \\(0\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u8fd9\u91cc\u7528\u5b9a\u4e49\u6cd5.</p> <p>\u4f7f\u7528 \\(2^n=(1+1)^n=1+\\binom{n}{1}+\\cdots+\\binom{n}{n}\\) \u6765\u8fdb\u884c\u9002\u5f53\u653e\u5927.</p> <p>\\(\\(\\frac{n^5}{2^n}&lt;\\frac{n^5}{\\binom{n}{6}}=\\frac{n^4\\cdot 6!}{(n-1)(n-2)(n-3)(n-4)(n-5)}&lt;\\frac{6!}{n}&lt;\\epsilon\\)\\)</p> <p>\u53ea\u9700\u53d6 \\(N=\\left\\lfloor\\frac{720}{\\epsilon}\\right\\rfloor\\) \u5373\u53ef.</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u4e3b\u8981\u662f\u8981\u6ce8\u610f \\(2^n=\\sum_{i=0}^n\\binom{n}{i}\\) \u7684\u53d8\u5f62\u6280\u5de7.</p> <ol> <li>\u4f8b\u9898 2.1.2 <p>\u8bc1\u660e\u6570\u5217 \\(\\{\\sqrt[n]{n}\\}\\) \u7684\u6781\u9650\u662f \\(1\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof \\  1}}\\)</p> <p>\u5728 \\(n\\ge2\\) \u65f6\uff0c\u6839\u636e\u5747\u503c\u4e0d\u7b49\u5f0f\u6709</p> <p>\\(\\(1\\le\\sqrt[n]{n}=\\sqrt[n]{\\sqrt{n}\\cdot\\sqrt{n}\\cdot\\underbrace{1\\cdot1\\cdots\\cdot1}_{n-2\u4e2a1}}\\le\\frac{2\\sqrt{n}+n-2}{n}\\le1+\\frac{2}{\\sqrt{n}}\\)\\)</p> <pre><code>\u56e0\u6b64\u6709 $0\\le\\sqrt[n]{n}-1\\le\\frac{2}{\\sqrt{n}}$\n\n\u53d6 $N=\\max\\{2,\\lceil\\frac{4}{\\epsilon^2}\\rceil\\}$ \u5373\u53ef.\n\n$\\color{blue}{\\textbf{Thoughts}}$\n\n\u8fd9\u4e2a\u5730\u65b9\u5229\u7528\u4e86 1 \u7684\u4efb\u610f\u6b21\u65b9\u7b49\u4e8e 1 \u7684\u6027\u8d28\u548c\u4e00\u4e2a\u6570\u4e58\u4ee5 1 \u8fd8\u662f\u5b83\u672c\u8eab\u7684\u6027\u8d28\u6765\u5e72\u6389\u6307\u6570\u7684 $\\frac{1}{n}$ .\n\n$\\color{red}{\\textbf{Proof \\  2}}$\n\n\u6784\u9020\u8f85\u52a9\u6570\u5217.\n\n\u7531\u4e8e $\\sqrt[n]{n}\\ge1$ \uff0c\u53ea\u9700\u5173\u5fc3 $\\sqrt[n]{n}-1\\le\\epsilon$ .\n\n\u4ee4 $y_n=\\sqrt[n]{n}-1$ \uff0c\u5219 $y_n\\ge0$ \uff0c\u4e14\u5f53 $n&gt;1$ \u65f6\u6709\n\n$$n=(1+y_n)^n\\ge \\frac{n(n-1)}{2}y_n^2$$\n\n\u4e8e\u662f\u6709 $y_n\\le\\sqrt{\\frac{2}{n-1}}&lt;\\epsilon$ \uff0c\u53ea\u9700\u53d6 $N=[\\frac{2}{\\epsilon^2}]+1$ \u5373\u53ef.\n\n$\\color{blue}{\\textbf{Thoughts}}$\n\n\u5c06\u5f85\u8bc1\u4e0d\u7b49\u5f0f\u76f4\u63a5\u6784\u9020\u4e3a\u8f85\u52a9\u6570\u5217\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u653e\u7f29\u4ece\u800c\u627e\u51fa\u4e00\u4e2a\u5408\u9002\u7684 N .\n</code></pre> <ol> <li>2.1.5 \u7ec3\u4e60\u9898 5 <p>\u8bbe \\(a&gt;1\\) \uff0c\u8bc1\u660e \\(\\lim\\limits_{n\\to \\infty}\\frac{\\log_{a}n}{n}=0\\) .</p> <p>\uff08\u53ef\u4ee5\u5229\u7528\u5df2\u77e5\u6781\u9650 \\(\\lim\\limits_{n\\to\\infty}\\sqrt[n]{n}=1\\) \uff09</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u56e0\u4e3a \\(\\frac{\\log_an}{n}=\\log_a\\sqrt[n]{n}\\) \uff0c\u6240\u4ee5 \\(\\lim\\limits_{n\\to\\infty}\\frac{\\log_an}{n}=\\lim\\limits_{n\\to\\infty}\\log_{a}\\sqrt[n]{n}=0\\)</p>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#22","title":"2.2 \u6536\u655b\u6570\u5217\u7684\u57fa\u672c\u6027\u8d28","text":"<ol> <li>\u4f8b\u9898 2.2.2 <p>\u82e5 \\(\\lim\\limits_{n\\to\\infty}\\frac{x_n-a}{x_n+a}=0\\) \uff0c\u8bc1\u660e \\(\\lim\\limits_{n\\to\\infty}x_n=a\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof \\  1}}\\)</p> <p>\u5b9a\u4e49\u6cd5.</p> <p>\u7531\u9898\u8bbe\uff0c \\(a\\not ={0}\\) \uff0c\u4e14 \\(\\forall\\epsilon&gt;0,\\exist N,s.t \\  n&gt;N,\\left|\\frac{x_n-a}{x_n+a}\\right|&lt;\\epsilon\\)</p> <p>\u4e8e\u662f\u6709</p> <p>\\(\\(|x_n-a|&lt;\\epsilon|x_n+a|=\\epsilon|x_n-a+2a|\\le\\epsilon(|x_n-a|+2|a|)\\)\\)</p> <p>\u5373</p> <p>\\(\\((1-\\epsilon)|x_n-a|&lt;2\\epsilon|a|\\)\\)</p> <p>\u9650\u5b9a \\(\\epsilon&lt;1\\) \u5f97\u5230 \\(|x_n-a|&lt;\\frac{2\\epsilon|a|}{1-\\epsilon}\\) \uff0c\u518d\u9650\u5b9a \\(\\epsilon&lt;\\frac{1}{2}\\) \uff0c\u53ef\u4ee5\u5f97\u5230 \\(|x_n-a|&lt;4|a|\\epsilon\\) \uff0c\u6ee1\u8db3 \\(\\lim\\limits_{n\\to\\infty}x_n=a\\) \u7684\u5b9a\u4e49\uff0c\u5f97\u8bc1.</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u8fd9\u91cc\u5229\u7528\u7edd\u5bf9\u503c\u4e0d\u7b49\u5f0f\u7684\u65f6\u5019\u4e0d\u80fd\u76f4\u63a5\u653e\u7f29\uff0c\u800c\u662f\u5c06\u5185\u90e8\u51ed\u7a7a\u634f\u9020\u51fa\u4e00\u4e2a\u5f85\u8bc1\u5f0f\u6765\uff0c\u7136\u540e\u5c06\u591a\u51fa\u6765\u7684\u4e1c\u897f\u51cf\u53bb\u4e4b\u540e\u518d\u8fdb\u884c\u653e\u7f29.</p> <p>\\(\\color{red}{\\textbf{Proof \\  2}}\\)</p> <p>\u6784\u9020\u8f85\u52a9\u6570\u5217.</p> <p>\u4ee4 \\(y_n=\\left|\\frac{x_n-a}{x_n+a}\\right|\\) \uff0c\u5219 \\(y_n\\) \u6781\u9650\u5df2\u77e5\uff0c\u4e3a 0 .</p> <p>\u5c06 \\(x_n\\) \u7528 \\(y_n\\) \u8868\u793a\uff0c\u5f97\u5230</p> <p>\\(\\(x_n=a\\cdot\\frac{1+y_n}{1-y_n}\\)\\)</p> <p>\u518d\u7531\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\uff0c\u53ef\u4ee5\u5f97\u5230 \\(\\lim\\limits_{n\\to\\infty}x_n=a\\) .</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u76f4\u63a5\u5c06\u5df2\u77e5\u5f0f\u6784\u9020\u8f85\u52a9\u6570\u5217\uff0c\u53ef\u4ee5\u5229\u7528\u5df2\u77e5\u6781\u9650\u76f4\u63a5\u8ba1\u7b97\u51fa\u8981\u6c42\u7684\u6781\u9650.</p> <ol> <li>2.2.4 \u7ec3\u4e60\u9898 2.(4)</li> </ol> <p>\u8bbe \\(\\{ a_n \\}\\) \u4e3a\u6b63\u6570\u5217\uff0c\u5e76\u4e14\u5df2\u77e5\u5b83\u6536\u655b\u4e8e \\(a&gt;0\\) \uff0c\u8bc1\u660e \\(\\lim\\limits_{n\\to\\infty}\\sqrt[n]{a_n}=1\\) .</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u7531 \\(a_n\\rightarrow a\\) \u53ef\u77e5\uff0c\\(\\forall \\epsilon&gt;0\\) , \\(\\exists N\\) ,\u5f53 \\(n&gt;N\\) \u65f6, \u6ee1\u8db3 \\(a-\\epsilon&lt;a_n&lt;a+\\epsilon\\) .</p> <p>\u4ee4 \\(\\epsilon&lt;\\frac{a}{2}\\) \uff0c\u5219 \\(\\frac{a}{2}&lt;a_n&lt;\\frac{3}{2}a\\) \uff0c\u56e0\u4e3a \\(\\lim\\limits_{n\\to\\infty}\\sqrt[n]{\\frac{a}{2}}=\\lim\\limits_{n\\to\\infty}\\sqrt[n]{\\frac{3}{2}a}\\) \uff0c\u6240\u4ee5 \\(\\lim\\limits_{n\\to\\infty}\\sqrt[n]{a_n}=1\\) .</p> <ol> <li>2.2.4 \u7ec3\u4e60\u9898 3.(1)</li> </ol> <p>\u6c42 \\(\\lim\\limits_{n\\to\\infty}(1+x)(1+x^2)\\cdots(1+x^{2^n})\\) \uff0c\u5176\u4e2d \\(|x|&lt;1\\) .</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\\(\\((1+x)(1+x^2)\\cdots(1+x^{2^n})=\\frac{(1-x)(1+x)\\cdots(1+x^{2^n})}{1-x}=\\frac{1-x^{2^{n+1}}}{1-x}\\)\\)</p> <p>\u5219 \\(\\lim\\limits_{n\\to\\infty}(1+x)(1+x^2)\\cdots(1+x^{2^n})=\\lim\\limits_{n\\to\\infty}\\frac{1-x^{2^{n+1}}}{1-x}=\\frac{1}{1-x}\\)</p> <ol> <li>2.2.4 \u7ec3\u4e60\u9898 3.(5)</li> </ol> <p>\\(\\lim\\limits_{n\\to\\infty}\\sum_{k=1}^n\\frac{1}{k(k+1)\\cdots(k+\\nu)}\\)\uff08\u5176\u4e2d \\(\\nu\\) \u4e3a\u6b63\u6574\u6570\uff09.</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u6ce8\u610f\u5230</p> <p>\\(\\(\\frac{1}{k(k+1)\\cdots(k+\\nu)}=\\frac{1}{\\nu}\\left[\\frac{1}{k(k+1)\\cdots(k+\\nu-1)}-\\frac{1}{(k+1)\\cdots(k+v)}\\right]\\)\\)</p> <p>\u6240\u4ee5</p> <p>\\(\\(\\lim\\limits_{n\\to\\infty}\\sum_{k=1}^n\\frac{1}{k(k+1)\\cdots(k+\\nu)}=\\lim\\limits_{n\\to\\infty}\\frac{1}{\\nu}(\\frac{1}{\\nu!}-\\frac{1}{(n+1)\\cdots(n+\\nu)})=\\frac{1}{\\nu\\cdot\\nu!}\\)\\)</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u8bb0\u4f4f\u8fd9\u91cc\u7684\u6ce8\u610f\u5230.</p>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#23","title":"2.3 \u5355\u8c03\u6570\u5217","text":"<ol> <li>\u4f8b\u9898 2.3.6</li> </ol> <p>\u6c42\u6570\u5217 \\(\\{a_n\\}\\) \u7684\u6781\u9650\uff0c\u5176\u4e2d\\(a_n=\\frac{1!+2!+\\cdots+n!}{n!}\\) .</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u9996\u5148\u8bc1\u660e \\(\\{a_n\\}\\) \u6536\u655b\uff0c\u7814\u7a76\u76f8\u7ee7\u4e24\u9879\u4e4b\u6bd4\uff0c\u6709</p> <p>\\(\\(\\frac{a_{n+1}}{a_n}=\\frac{1!+2!+\\cdots+(n+1)!}{(n+1)(1!+2!+\\cdots+n!)}=\\frac{1!+2!+\\cdots+(n+1)!}{1!+(n+1)+2!(n+1)+\\cdots+n!(n+1)}\\)\\)</p> <p>\u5206\u5b50\u5206\u6bcd\u4ece\u7b2c\u4e09\u9879\u5f00\u59cb\u5bf9\u5e94\u6709\u5206\u6bcd\u7684\u9879\u5927\u4e8e\u5206\u5b50\u7684\u9879\uff0c\u56e0\u6b64 \\(\\frac{a_{n+1}}{a_n}&lt;1\\) \uff0c\u5373 \\(\\{a_n\\}\\) \u4e3a\u5355\u8c03\u9012\u51cf\u6570\u5217.</p> <p>\u53c8\u6709</p> <p>\\(\\(a_n&lt;\\frac{(n-2)(n-1)!+(n-1)!+n!}{n!}=\\frac{(n-1)(n-1)!+n!}{n!}&lt;\\frac{2n!}{n!}=2\\)\\)</p> <p>\u6240\u4ee5 \\(\\{a_n\\}\\) \u5355\u8c03\u6709\u754c\uff0c\u6545 \\(\\{a_n\\}\\) \u6536\u655b.</p> <p>\u53ef\u4ee5\u53d1\u73b0</p> <p>\\(\\(a_{n+1}=1+\\frac{a_n}{n+1}\\)\\)</p> <p>\u4e24\u8fb9\u4ee4 \\(n\\to\\infty\\) \uff0c\u53ef\u77e5 \\(\\lim\\limits_{n\\to\\infty}a_n=1\\) .</p> <p>\u5f53\u7136\uff0c\u8fd9\u9898\u7528 Stolz \u5b9a\u7406\u8bc1\u4f1a\u66f4\u7b80\u5355.</p> <ol> <li>2.3.2 \u7ec3\u4e60\u9898 12</li> </ol> <p>\u5bf9\u6bcf\u4e2a\u6b63\u6574\u6570 \\(n\\) \uff0c\u7528 \\(x_n\\) \u8868\u793a\u65b9\u7a0b \\(x+x^2+\\cdots+x^n=1\\) \u5728\u95ed\u533a\u95f4 \\([0,1]\\) \u4e2d\u7684\u6839.\u6c42 \\(\\lim\\limits_{n\\to\\infty}x_n\\) .</p> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u7531\u9898\u610f\uff0c</p> <p>$$    x_n+x_n^2+\\cdots+x_n^n=1 \\quad  (1) \\\\    x_{n+1}+x_{n+1}^2+\\cdots+x_{n+1}^{n+1}=1    $$</p> <p>\u901a\u8fc7\u6bd4\u8f83\u53ef\u4ee5\u53d1\u73b0 \\(x_n&gt;x_{n+1}\\) \uff0c\u5373 \\(\\{x_n\\}\\) \u4e3a\u5355\u8c03\u9012\u51cf\u6570\u5217\uff0c\u53c8\u6709 \\(x_n&lt;1\\) \uff0c\u6240\u4ee5 \\(x_n\\) \u6536\u655b.</p> <p>\\(\\(x_{n+1}+x_{n+1}^2+\\cdots+x_{n+1}^{n+1}=x_{n+1}(1+x_{n+1}+\\cdots+x_{n+1}^n)=1\\)\\)</p> <p>\u5373</p> <p>\\(\\(x_{n+1}+\\cdots+x_{n+1}^n=\\frac{1}{x_{n+1}}-1\\quad(2)\\)\\)</p> <p>\u4ee4 \\(n\\to\\infty\\) \uff0c\u7528 \uff082\uff09\u5f0f\u51cf\u53bb\uff081\uff09\u5f0f\u5f97</p> <p>\\(\\(0=\\frac{1}{A}-2(\\lim\\limits_{n\\to\\infty}x_n=A)\\)\\)</p> <p>\u6240\u4ee5 \\(A=\\frac{1}{2}\\) .</p>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#24-cauchy-stolz","title":"2.4 Cauchy \u547d\u9898\u4e0e Stolz \u5b9a\u7406","text":"<ol> <li>\u547d\u9898 2.4.1\uff08Cauchy \u547d\u9898\uff09 <p>\u8bbe \\(\\{x_n\\}\\) \u6536\u655b\u4e8e \\(l\\) \uff0c\u5219\u5b83\u7684\u524d \\(n\\) \u9879\u7684\u7b97\u672f\u5e73\u5747\u503c\uff08\u6240\u6210\u7684\u6570\u5217\uff09\u4e5f\u6536\u655b\u4e8e \\(l\\) \uff0c\u5373\u6709 \\(\\(\\lim\\limits_{n\\to\\infty}\\dfrac{x_1+x_2+\\cdots+x_n}{n}=l\\)\\)</p> </li> </ol> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u56e0\u4e3a\u8fd9\u4e2a\u8bc1\u660e\u76f8\u5bf9\u7b80\u5355\uff0c\u6240\u4ee5\u5c31\u4e0d\u5217\u4e86\uff0c\u4f46\u662f\u5b83\u7684\u8bc1\u660e\u5f88\u91cd\u8981\uff0c\u4f53\u73b0\u4e86\u5206\u6cbb\u7684\u601d\u60f3.</p> <p>P.S. Cauchy \u547d\u9898\u5728\u6570\u5217 \\(\\{x_n\\}\\) \u4e3a\u6709\u786e\u5b9a\u7b26\u53f7\u7684\u65e0\u7a77\u5927\u91cf\u65f6\u4e5f\u662f\u6210\u7acb\u7684.</p> <ol> <li>\u547d\u9898 2.4.2\uff08\\(\\frac{0}{0}\\) \u578b\u7684 Stolz \u5b9a\u7406\uff09 <p>\u8bbe \\(\\{a_n\\}\\) \u548c \\(\\{b_n\\}\\) \u90fd\u662f\u65e0\u7a77\u5c0f\u91cf\uff0c\u5176\u4e2d \\(\\{a_n\\}\\) \u8fd8\u662f\u4e25\u683c\u5355\u8c03\u51cf\u5c11\u6570\u5217\uff0c\u53c8\u5b58\u5728 \\(\\lim\\limits_{n\\to\\infty}\\dfrac{b_{n+1}-b_n}{a_{n+1}-a_n}=l\\) \uff08\u5176\u4e2d \\(l\\) \u4e3a\u6709\u9650\u6216 \\(\\pm\\infin\\)\uff09\uff0c\u5219\u6709 \\(\\lim\\limits_{n\\to\\infin}\\dfrac{b_n}{a_n}=l\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u8fd9\u91cc\u53ea\u5bf9\u6709\u9650\u7684 \\(l\\) \u4f5c\u8bc1\u660e\uff0c\u5176\u4ed6\u60c5\u51b5\u7684\u8bc1\u660e\u4e5f\u662f\u7c7b\u4f3c\u7684.</p> <p>\u6839\u636e\u6761\u4ef6\uff0c\\(\\forall \\epsilon&gt;0,\\exists N,s.t.\\) \u5f53 \\(n&gt;N\\) \u65f6\u6709 \\(\\left|\\dfrac{b_n-b_{n+1}}{a_n-a_{n+1}}-l\\right|&lt;\\epsilon\\) .</p> <p>\u56e0\u4e3a \\(\\{a_n\\}\\) \u5355\u8c03\u51cf\u5c11\uff0c\u6240\u4ee5\u6709</p> <p>\\(\\((l-\\epsilon)(a_n-a_{n+1})&lt;b_n-b_{n+1}&lt;(l+\\epsilon)(a_n-a_{n+1})\\)\\)</p> <p>\u53d6 \\(m&gt;n\\) \u5e76\u7d2f\u52a0\u5f97 </p> <p>\\(\\((l-\\epsilon)(a_n-a_m)&lt;b_n-b_m&lt;(l+\\epsilon)(a_n-a_m)\\)\\)</p> <p>\u5373</p> <p>\\(\\(\\left|\\dfrac{b_n-b_m}{a_n-a_m}-l\\right|&lt;\\epsilon\\)\\)</p> <p>\u4ee4 \\(m\\to\\infty\\) \uff0c\u5e76\u5229\u7528 \\(\\lim\\limits_{m\\to\\infin}a_m=\\lim\\limits_{m\\to\\infin}b_m=0\\) \uff0c\u4fbf\u53ef\u4ee5\u5f97\u5230\u5f53 \\(n&gt;N\\) \u65f6\uff0c\u6210\u7acb</p> <p>\\(\\(\\left|\\dfrac{b_n}{a_n}-l\\right|\\le\\epsilon\\)\\)</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u5728\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u65e2\u7136\u540e\u9762\u53ef\u4ee5\u7528\u5230 \\(\\lim\\limits_{n\\to\\infin}a_n=\\lim\\limits_{n\\to\\infin}b_n=0\\) \uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e00\u5f00\u59cb\u4e0d\u76f4\u63a5\u7528\u7136\u540e\u76f4\u63a5\u7531\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\u5f97\u5230 \\(\\lim\\limits_{n\\to\\infin}\\dfrac{b_n}{a_n}=l\\) \u5462\uff1f</p> <p>\u7b54\u6848\u7684\u5173\u952e\u5c31\u5728\u4e8e\u8fd9\u4e2a <code>m &gt; n</code> .</p> <p>\u5f53\u6211\u4eec\u76f4\u63a5\u5bf9 \\(\\lim\\limits_{n\\to\\infty}=\\dfrac{b_{n+1}-b_n}{a_{n+1}-a_n}\\) \u4f7f\u7528\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\u65f6\uff0c\u4f1a\u53d1\u73b0\u5206\u6bcd \\(\\lim\\limits_{n\\to\\infty}(a_{n+1}-a_n)=0\\) \uff0c\u6b64\u65f6\u663e\u7136\u662f\u4e0d\u80fd\u7528\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\u7684.</p> <p>\u800c\u82e5\u6211\u4eec\u53d6 \\(m&gt;n\\) \uff0c\u7136\u540e\u4ee4 \\(m\\to\\infin\\) \uff0c\u8fd9\u91cc \\(n\\) \u5e76\u6ca1\u6709 \\(\\to\\infin\\) \uff0c\u76f8\u5f53\u4e8e\u6211\u4eec\u56fa\u5b9a\u4e86 n \uff0c\u800c m \u624d\u662f\u4e0d\u786e\u5b9a\u7684\u90a3\u4e2a\uff0c\u6b64\u65f6 \\(a_n,b_n\\) \u90fd\u662f\u4e00\u4e2a\u786e\u5b9a\u7684\u6570\uff0c\u8fdb\u800c \\(\\lim\\limits_{m\\to\\infty}(a_n-a_m)=a_n\\) \u800c\u4e0d\u662f 0 \uff0c\u4e5f\u5c31\u6ee1\u8db3\u4e86\u5229\u7528 \\(\\lim\\limits_{m\\to\\infin}a_m=\\lim\\limits_{m\\to\\infin}b_m=0\\) \u7684\u6761\u4ef6\u9650\u5236\uff0c\u4ece\u800c\u6709\u4e86 \\(\\left|\\dfrac{b_n}{a_n}-l\\right|\\le\\epsilon\\) \uff0c\u6700\u540e\u901a\u8fc7\u5b9a\u4e49\u8bc1\u660e\u4e86 \\(\\lim\\limits_{n\\to\\infin}\\dfrac{b_n}{a_n}=l\\) .</p> <p>\u8fd8\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5fc5\u987b\u662f\u901a\u8fc7\u5b9a\u4e49\u6765\u8bc1\u660e\uff0c\u56e0\u4e3a\u76f4\u63a5\u5229\u7528\u6781\u9650\u7684\u56db\u5219\u8fd0\u7b97\u6cd5\u5219\u5fc5\u7136\u8981\u4ee4 \\(n\\to\\infin\\) \uff0c\u8fd9\u6837\u5c31\u65e0\u6cd5\u907f\u514d\u5206\u6bcd\u4e3a 0 \u4e86.</p> <ol> <li>\u547d\u9898 2.4.3 \uff08\\(\\frac{*}{\\infin}\\)\uff09\u578b\u7684 Stolz \u5b9a\u7406 <p>\u8bbe\u6570\u5217 \\(\\{a_n\\}\\) \u662f\u4e25\u683c\u5355\u8c03\u589e\u52a0\u7684\u65e0\u7a77\u5927\u91cf\uff0c\u53c8\u5b58\u5728 \\(\\lim\\limits_{n\\to\\infty}\\dfrac{b_{n+1}-b_n}{a_{n+1}-a_n}=l\\)\uff08\u5176\u4e2d \\(l\\) \u4e3a\u6709\u9650\u6216 \\(\\pm\\infin\\)\uff09\uff0c\u5219\u6709 \\(\\lim\\limits_{n\\to\\infin}\\dfrac{b_n}{a_n}=l\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u6b64\u5904\u540c\u6837\u53ea\u9488\u5bf9 l \u4e3a\u6709\u9650\u7684\u60c5\u51b5\u8bc1\u660e.</p> <p>\u6839\u636e\u9898\u610f\uff0c\\(\\forall\\epsilon&gt;0,\\exists N,s.t.\\) \u5f53 \\(n&gt;N\\) \u65f6\u6709 \\(\\left|\\dfrac{b_n-b_{n+1}}{a_n-a_{n+1}}-l\\right|&lt;\\epsilon\\) .</p> <p>\u56e0\u4e3a \\(\\{a_n\\}\\) \u5355\u8c03\u589e\u52a0\uff0c\u6240\u4ee5</p> <p>\\(\\((l-\\epsilon)(a_{n+1}-a_n)&lt;b_{n+1}-b_n&lt;(l+\\epsilon)(a_{n+1}-a_n)\\)\\)</p> <p>\u5c06\u4e0a\u5f0f\u7684 n \u6539\u6210 n - 1 \u5e76\u7d2f\u52a0\u5230 N \uff0c\u5f97\u5230</p> <p>\\(\\((l-\\epsilon)(a_n-a_N)&lt;b_{n}-b_N&lt;(l+\\epsilon)(a_{n}-a_N)\\)\\)</p> <p>\u5373</p> <p>\\(\\(\\left|\\dfrac{b_n-b_{N}}{a_n-a_{N}}-l\\right|&lt;\\epsilon\\)\\)</p> <p>\u6211\u4eec\u53c8\u6709\u6052\u7b49\u5f0f</p> <p>\\(\\(\\frac{b_n}{a_n}-l=\\left(1-\\frac{a_N}{a_n}\\right)\\cdot\\left(\\frac{b_n-b_N}{a_n-a_N}-l\\right)+\\frac{b_N-la_N}{a_n}\\)\\)</p> <p>\u5176\u4e2d\uff0c\u7531\u4e8e \\(\\lim\\limits_{n\\to\\infty}a_n=+\\infty\\) \uff0c\u5b58\u5728 \\(N_1\\) \uff0c\u4f7f\u5f97\u5f53 \\(n&gt;N_1\\) \u65f6\uff0c\u6210\u7acb \\(1-\\dfrac{a_N}{a_n}&lt;2\\) \u548c \\(\\left|\\dfrac{b_N-la_N}{a_n-a_N}\\right|&lt;\\epsilon\\) .</p> <p>\u56e0\u6b64\uff0c\u5f53 \\(n&gt;\\max(N, N_1)\\) \u65f6\uff0c\u6709 \\(\\left|\\frac{b_n}{a_n}-l\\right|&lt;3\\epsilon\\) .</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u8fd9\u91cc\u7684\u8bc1\u660e\u601d\u8def\u548c\u524d\u4e00\u4e2a \\(\\frac{0}{0}\\) \u578b\u7684\u7c7b\u4f3c\uff0c\u4f46\u662f\u6b64\u5904 \\(\\{a_n\\}\\) \u662f\u65e0\u7a77\u5927\u91cf\uff0c\u56e0\u6b64\u4e0d\u80fd\u5229\u7528\u6781\u9650\u6765\u89e3\u51b3\u6700\u540e\u4e00\u6b65.</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u653e\u7f29\u548c\u5229\u7528 \\(\\{a_n\\}\\) \u7684\u6781\u9650\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5728\u5df2\u77e5\u5f0f\u4e2d\u5f15\u5165\u56fa\u5b9a\u7684\u6570 \\(a_N\\) \u548c \\(b_N\\) \uff0c\u7136\u540e\u8fd9\u91cc\u201c\u5f3a\u884c\u201d\u5c06\u5f85\u8bc1\u5f0f\u7528\u5df2\u77e5\u5f0f\u8868\u793a\uff0c\u518d\u501f\u52a9 \\(\\{a_n\\}\\) \u7684\u6781\u9650\u8fdb\u884c\u653e\u7f29\uff0c\u4ece\u800c\u8bc1\u660e.</p> <p>\u8fd9\u4e2a\u5730\u65b9\u7684\u5f85\u8bc1\u5f0f\u548c\u5df2\u77e5\u5f0f\u770b\u4e0a\u53bb\u597d\u50cf\u4e0d\u80fd\u8f6c\u5316\uff0c\u4f46\u5b9e\u9645\u4e0a\u8f6c\u5316\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff0c\u6240\u8c13\u7684 trick \u5176\u5b9e\u4e5f\u4e0d\u8fc7\u662f\u5f88\u6734\u7d20\u7684\u601d\u60f3\uff0c\u5f53\u60f3\u4e0d\u5230\u5176\u4ed6\u5de7\u5999\u7684\u65b9\u6cd5\u65f6\uff0c\u8fd9\u4e2a\u201c\u5f3a\u884c\u201d\u8f6c\u5316\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5f88\u597d\u7528.</p> <p>\\(\\(\\color{yellow}{\\textbf{Attention}}\\)\\)</p> <ul> <li>\u4ee5\u4e0a\u4e09\u4e2a\u547d\u9898\u7684\u9006\u547d\u9898\u90fd\u4e0d\u6210\u7acb.</li> <li>\u82e5\u5728\u8fd9\u4e09\u4e2a\u547d\u9898\u4e2d\u5c06 \\(l\\) \u6539\u4e3a\u4e0d\u5e26\u7b26\u53f7\u7684\u65e0\u7a77\u5927\u91cf \\(\\infin\\) \uff0c\u5219\u7ed3\u8bba\u5747\u4e0d\u6210\u7acb.</li> </ul> <ol> <li>\u4f8b\u9898 2.4.3 <p>\u8bbe\u5df2\u77e5 \\(\\lim\\limits_{n\\to\\infty}a_n=a\\) \uff0c\u8bc1\u660e\uff1a\\(\\lim\\limits_{n\\to\\infty}\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}=a\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u5229\u7528 \\(2^n=(1+1)^n=\\sum_{k=0}^n\\binom{n}{k}\\) \uff0c\u6709</p> <p>\\(\\(\\left|\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}a_k-a\\right|=\\left|\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}(a_k-a)\\right|\\le\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}|a_k-a|\\)\\)</p> <p>\u7531\u9898\u610f\uff0c\\(\\forall\\epsilon&gt;0,\\exists N,s.t.\\) \u5f53 \\(n&gt;N\\) \u65f6\u6709 \\(|a_n-a|&lt;\\epsilon\\) .</p> <p>\u5c06\u4e0a\u9762\u8f6c\u5316\u540e\u7684\u5f0f\u5b50\u5206\u62c6\u5f97\u5230</p> <p>\\(\\(\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}|a_k-a|=\\frac{1}{2^n}\\sum_{k=0}^N\\binom{n}{k}|a_k-a|+\\frac{1}{2^n}\\sum_{k=N+1}^n\\binom{n}{k}|a_k-a|\\)\\)</p> <p>\u5bf9\u7b2c\u4e8c\u90e8\u5206\u7684\u4f30\u8ba1\u662f\u5f88\u5bb9\u6613\u7684</p> <p>\\(\\(\\frac{1}{2^n}\\sum_{k=N+1}^n\\binom{n}{k}|a_k-a|&lt;\\frac{\\epsilon}{2^n}\\sum_{k=N+1}^n\\binom{n}{k}&lt;\\frac{\\epsilon}{2^n}\\sum_{k=0}^n\\binom{n}{k}=\\epsilon\\)\\)</p> <p>\u800c\u5bf9\u4e8e\u524d\u4e00\u9879\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u4e00\u4e2a\u4e0d\u7b49\u5f0f \u2014\u2014\\(\\binom{n}{k}&lt;n^k\\) .</p> <p>\u8bb0 \\(M=\\max|a_k-a|\\) \uff0c\u653e\u7f29\u6709</p> <p>\\(\\(\\frac{1}{2^n}\\sum_{k=0}^N\\binom{n}{k}|a_k-a|&lt;\\frac{M(n^0+n^1+\\cdots+n^N)}{2^n}\\)\\)</p> <p>\u56e0\u4e3a \\(N\\) \u56fa\u5b9a\uff0c\u5f53 \\(n\\to\\infin\\) \u65f6\uff0c\u53f3\u8fb9\u7684\u5f0f\u5b50\u7684\u6781\u9650\u4e3a 0 \uff0c\u56e0\u6b64\u5b58\u5728 \\(N_1&gt;N\\) \uff0c\u5f53 \\(n&gt;N_1\\) \u65f6\u6210\u7acb \\(\\frac{1}{2^n}\\sum_{k=0}^N\\binom{n}{k}|a_k-a|&lt;\\epsilon\\) .</p> <p>\u5408\u5e76\u4e24\u5f0f\u7684\u4f30\u8ba1\uff0c\u6709\u5f53 \\(n&gt;N_1\\) \u65f6\u6210\u7acb</p> <p>\\(\\(\\left|\\frac{1}{2^n}\\sum_{k=0}^n\\binom{n}{k}a_k-a\\right|&lt;2\\epsilon\\)\\)</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u6b64\u5904\u7684\u8bc1\u660e\u7528\u4e86\u4e24\u4e2a\u5f88\u91cd\u8981\u7684 trick \uff1a</p> <ul> <li>\\(2^n=(1+1)^n=\\sum_{k=0}^n\\binom{n}{k}\\)</li> <li>\\(\\binom{n}{k}&lt;n^k\\)</li> </ul> <p>\u540c\u65f6\u5728\u5bf9 \\(\\frac{M(n^0+n^1+\\cdots+n^N)}{2^n}\\) \u7684\u4f30\u8ba1\u4e2d\uff0c\u5206\u5b50\u53ea\u662f\u4e00\u4e2a\u6700\u5927\u6307\u6570\u786e\u5b9a\u7684 n \u7684\u591a\u9879\u5f0f\uff0c\u800c\u5206\u6bcd\u5219\u662f\u6307\u6570\u8d8b\u4e8e \\(\\infty\\) \u4e14\u5e95\u6570\u5927\u4e8e 1 \u7684\u6307\u6570\u51fd\u6570\uff0c\u56e0\u6b64\u6574\u4e2a\u8868\u8fbe\u5f0f\u4e00\u5b9a\u662f\u65e0\u7a77\u5c0f\u91cf.</p> <ol> <li>2.4.3 \u7ec3\u4e60\u9898 5 <p>\u8bbe \\(\\{a_n\\}\\) \u4e3a\u6b63\u6570\u5217\uff0c\u4e14\u6536\u655b\u4e8e \\(A\\) \uff0c\u8bc1\u660e\uff1a\\(\\lim\\limits_{n\\to\\infty}(a_1a_2\\cdots a_n)^{\\frac{1}{n}}=A\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u6211\u4eec\u5229\u7528\u5939\u903c\u51c6\u5219\u6765\u8bc1.</p> <p>\\(\\((a_1a_2\\cdots a_n)^{\\frac{1}{n}}\\le\\frac{a_1+a_2+\\cdots+a_n}{n}\\)\\)</p> <p>\u6839\u636e Cauchy \u547d\u9898\uff0c\\(\\lim\\limits_{n\\to\\infty}\\frac{a_1+a_2+\\cdots+a_n}{n}=\\lim\\limits_{n\\to\\infty}a_n=A\\) .</p> <p>\u8003\u8651 \\(\\frac{\\frac{1}{a_1}+\\frac{1}{a_2}+\\cdots+\\frac{1}{a_n}}{n}\\) \u7684\u6781\u9650.</p> <p>\u7531 Stolz \u5b9a\u7406\u53ef\u77e5\uff0c \\(\\lim\\limits_{n\\to\\infty}\\frac{\\frac{1}{a_1}+\\frac{1}{a_2}+\\cdots+\\frac{1}{a_n}}{n}=\\lim\\limits_{n\\to\\infty}\\frac{1}{a_n}=\\frac{1}{A}\\) \uff0c\u56e0\u6b64 \\(\\lim\\limits_{n\\to\\infty}\\frac{n}{\\frac{1}{a_1}+\\frac{1}{a_2}+\\cdots+\\frac{1}{a_n}}=A\\) ,\u8fdb\u800c</p> <p>\\(\\((a_1a_2\\cdots a_n)^{\\frac{1}{n}}\\ge\\frac{n}{\\frac{1}{a_1}+\\frac{1}{a_2}+\\cdots+\\frac{1}{a_n}}\\)\\)</p> <p>\u4ece\u800c\u5de6\u53f3\u4e24\u8fb9\u6781\u9650\u90fd\u4e3a A \uff0c\u6839\u636e\u5939\u903c\u51c6\u5219\u6709 \\(\\lim\\limits_{n\\to\\infty}(a_1a_2\\cdots a_n)^{\\frac{1}{n}}=A\\) .</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u53f3\u8fb9\u7684\u5f0f\u5b50\u5f88\u597d\u60f3\uff0c\u4f46\u5de6\u8fb9\u7684\u5f0f\u5b50\u5374\u4e0d\u592a\u597d\u5904\u7406.</p> <p>\u9996\u5148\u5bb9\u6613\u60f3\u5230\u7684\u6bd4\u51e0\u4f55\u5747\u503c\u8981\u5c0f\u7684\u53ea\u6709\u8c03\u548c\u5747\u503c\uff0c\u7531\u4e8e\u8c03\u548c\u5747\u503c\u7684\u5206\u5b50\u5206\u6bcd\u90fd\u53ef\u4ee5\u5199\u6210\u548c\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u60f3\u5230\u5229\u7528 Stolz \u5b9a\u7406\uff0c\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u5b83\u65e2\u4e0d\u6ee1\u8db3 \\(\\frac{0}{0}\\) \u7684\u5f62\u5f0f\u4e5f\u4e0d\u6ee1\u8db3 \\(\\frac{*}{\\infty}\\) \u7684\u5f62\u5f0f\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f</p> <p>\u8fd9\u65f6\u6211\u4eec\u6ce8\u610f\u5230\u5b83\u7684\u5206\u5b50\u6ee1\u8db3 \\(\\infin\\) \u7684\u5f62\u5f0f\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528 Stolz \u5b9a\u7406\u6c42\u51fa\u5b83\u7684\u5012\u6570\u7684\u6781\u9650\u503c\uff0c\u4e5f\u5c31\u6c42\u51fa\u4e86\u5b83\u7684\u6781\u9650\u503c.</p> <ol> <li>2.4.3 \u7ec3\u4e60\u9898 9 <p>\u8bbe\u6570\u5217 \\(\\{a_n\\}\\) \u6ee1\u8db3\u6761\u4ef6 \\(0&lt;a_1&lt;1\\) \u548c \\(a_{n+1}=a_n(1-a_n)(n\\ge1)\\) \uff0c\u8bc1\u660e\uff1a\\(\\lim\\limits_{n\\to\\infty}na_n=1\\) .</p> </li> </ol> <p>\\(\\color{red}{\\textbf{Proof}}\\)</p> <p>\u53ef\u4ee5\u53d1\u73b0 \\(\\{a_n\\}\\) \u662f\u8fed\u4ee3\u6570\u5217\uff0c\u6211\u4eec\u53ea\u9700\u8bc1\u660e\u51fa \\(\\{a_n\\}\\) \u5355\u8c03\u6709\u754c\uff0c\u4fbf\u53ef\u4ee5\u5f88\u5feb\u6c42\u51fa\u5b83\u7684\u6781\u9650\u503c.</p> <p>\u7531\u9898\u610f\uff0c\u6709 \\(a_{n+1}-a_n=-a_n^2&lt;0\\) \uff0c\u56e0\u6b64 \\(\\{a_n\\}\\) \u4e25\u683c\u5355\u8c03\u51cf\u5c11.</p> <p>\u56e0\u4e3a \\(0&lt;a_1&lt;1\\) \uff0c\u6240\u4ee5 \\(0&lt;a_2=a_1(1-a_1)&lt;1\\) \uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f52\u7eb3\u5730\u5f97\u51fa \\(0&lt;a_n=a_{n-1}(1-a_{n-1})&lt;1\\) \uff0c\u8fdb\u800c\u5f97\u5230 \\(\\{a_n\\}\\) \u5b58\u5728\u4e0b\u754c 0 \uff0c\u56e0\u6b64 \\(\\{a_n\\}\\) \u6536\u655b.</p> <p>\u5728 \\(a_{n+1}=a_n(1-a_n)(n\\ge1)\\) \u4e24\u8fb9\u4ee4 \\(n\\to\\infin\\) \uff0c\u53ef\u4ee5\u6c42\u5f97 \\(\\lim\\limits_{n\\to\\infty}a_n=0\\)\uff08\u7b49\u4e8e 1 \u7684\u60c5\u51b5\u8981\u6392\u9664\uff0c\u6b64\u5904\u8bc1\u660e\u7565\uff09.</p> <p>\u53c8 \\(na_n=\\dfrac{n}{\\frac{1}{a_n}}\\) \uff0c\u6ee1\u8db3 \\(\\frac{*}{\\infty}\\) \u578b Stolz \u5b9a\u7406\uff0c\u4e8e\u662f\u53ef\u4ee5\u6c42\u51fa \\(\\lim\\limits_{n\\to\\infty}na_n=\\lim\\limits_{n\\to\\infty}\\dfrac{1}{\\frac{1}{a_n}-\\frac{1}{a_{n-1}}}\\) .</p> <p>\u5c06 \\(a_{n+1}=a_n(1-a_n)(n\\ge1)\\) \u53d8\u5f62\u4e3a \\(\\frac{1}{a_n}-\\frac{1}{a_{n-1}}=\\frac{1}{1-a_n}\\) \uff0c\u56e0\u6b64\u5f97\u5230 \\(\\lim\\limits_{n\\to\\infty}(\\frac{1}{a_n}-\\frac{1}{a_{n-1}})=1\\) \uff0c\u6240\u4ee5 \\(\\lim\\limits_{n\\to\\infty}na_n=1\\) .</p> <p>\\(\\color{blue}{\\textbf{Thoughts}}\\)</p> <p>\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u53d8\u5f62\u7684 Stolz \u5b9a\u7406\u9898\uff0c\u5173\u952e\u5c31\u5728\u4e8e\u60f3\u5230\u5c06 \\(na_n\\) \u53d8\u5f62\u4e3a\u6ee1\u8db3 Stolz \u5b9a\u7406\u7684\u5f62\u5f0f.</p> <p>\u6211\u4eec\u4e0d\u77e5\u9053 \\(\\{a_n\\}\\) \u4e2d\u4efb\u4f55\u4e00\u9879\u7684\u5177\u4f53\u503c\uff0c\u5df2\u77e5\u7684\u5927\u5c0f\u5173\u7cfb\u4e5f\u4ec5\u6709\u5b83\u548c 1 \u4e0e 0 \u7684\u5173\u7cfb\uff0c\\(na_n\\) \u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u4e5f\u4e0d\u597d\u60f3\u5230\u5b83\u80fd\u600e\u6837\u653e\u7f29\uff0c\u56e0\u6b64\u5b9a\u4e49\u6cd5\u548c\u5939\u903c\u51c6\u5219\u90fd\u4e0d\u597d\u505a\uff0c\u8fd9\u65f6\u5c31\u8981\u8003\u8651 Stolz \u5b9a\u7406\u4e86.</p> <p>\u7531\u4e8e \\(\\{a_n\\}\\) \u662f\u8fed\u4ee3\u6570\u5217\uff0c\u6240\u4ee5\u5b83\u7684\u6781\u9650\u5f88\u597d\u6c42\uff0c\u4e5f\u5f88\u5bb9\u6613\u6c42\u5f97\u76f8\u90bb\u4e24\u9879\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u800c \\(na_n\\) \u4e2d\u542b\u6709 n \uff0c\u8fd9\u663e\u7136\u662f\u5f88\u9002\u5408\u7528 Stolz \u5b9a\u7406\u7684\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u5176\u9002\u5f53\u53d8\u5f62\u5373\u53ef.</p>","tags":["Calculus"]},{"location":"Computer%20Science/Math/%E8%B0%A2%E6%83%A0%E6%B0%91%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/#25-e-euler-gamma","title":"2.5 \u81ea\u7136\u5bf9\u6570\u7684\u5e95 \\(e\\) \u548c Euler \u5e38\u6570 \\(\\gamma\\)","text":"<p>\u66f4\u4e0d\u5b8c\u4e86 /dk</p>","tags":["Calculus"]},{"location":"Computer%20Science/Programming%20Languages/","title":"Programming Languages","text":"<p>Info</p> <p>Programming Languages \u76f8\u5173\u5b66\u4e60\u7b14\u8bb0\u3002</p>"},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/","title":"NJU\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u5b66\u4e60\u7b14\u8bb0","text":"<p>The course website is here.</p> <p>I watched the lecture videos recorded in Spring 2020, and did the Tai-e assignments for exercise.</p> <ul> <li>Course Introduction</li> <li>Intermediate Representation</li> <li>Data Flow Analysis</li> <li>Interprocedural Analysis</li> <li>Pointer Analysis</li> <li>Static Analysis for Security</li> <li>Datalog-Based Program Analysis</li> <li>CFL-Reachability and IFDS</li> <li>Soundness and Soundiness</li> </ul>"},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/","title":"CFL-Reachability and IFDS","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b CFL-Reachability and IFDS \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#feasible-and-realizable-paths","title":"Feasible and Realizable Paths","text":"<p>infeasible paths \u6307\u7684\u662f\u5728 CFG \u5e76\u4e0d\u4f1a\u5b9e\u9645\u6267\u884c\u5230\u7684\u8def\u5f84\uff0c\u4f8b\u5982 if \u8bed\u53e5\u4e2d\u67d0\u4e9b\u4e0d\u53ef\u80fd\u5230\u8fbe\u7684\u5206\u652f\u3002\u7531\u4e8e infeasible paths \u7684\u5224\u5b9a\u4e0e\u7a0b\u5e8f\u7684 semantics \u76f8\u5173\uff0c\u6240\u4ee5\u603b\u4f53\u4e0a\u662f undecidable \u7684\u3002</p> <p>realizable paths \u6307\u7684\u662f \u201creturns\u201d \u4e0e \u201ccall\u201d \u76f8\u5bf9\u5e94\u7684\u8def\u5f84\uff0c\u4f8b\u5b50\u53c2\u8003 slides\u3002realizable paths \u4e0d\u4e00\u5b9a\u662f executable \u7684 (feasible paths)\uff0c\u4f46\u662f unrealizable paths \u4e00\u5b9a\u4e0d\u662f executable \u7684 (infeasible paths)\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#cfl-reachability","title":"CFL-Reachability","text":"<p>\u4f7f\u7528 context sensitive \u7684\u6280\u672f\u53ef\u4ee5\u53bb\u9664 unrealizable paths\uff0c\u4f46\u662f\u8fd9\u91cc\u8981\u4ecb\u7ecd\u7684\u6280\u672f\u662f CFL-Reachability\u3002</p> <p>CFG-reachability: A path is considered to connect two nodes A and B, or B is reachable from A, only if the concatenation of the labels on the edges of the path is a word in a specified context-free language.\uff08\u61d2\u5f97\u7ffb\u8bd1\u6210\u4e2d\u6587\u4e86\uff09</p> <p>CFG-reachability \u5176\u5b9e\u91c7\u7528\u7684\u5c31\u662f\u4e00\u79cd\u62ec\u53f7\u5339\u914d\u7684\u6280\u672f\u6765\u5224\u65ad A \u5230 B \u7684\u8def\u5f84\u662f\u5426\u5408\u6cd5\uff0c\u5982\u679c\u5408\u6cd5\u5c31\u8bf4 A \u5230 B \u6709\u4e00\u6761\u8fb9\uff0c\u6709\u70b9\u8def\u5f84\u538b\u7f29\u7684\u611f\u89c9\ud83e\udd14\u3002</p> <ul> <li>A valid sentence in language L must follow L\u2019s grammar.\uff08\u5373\u62ec\u53f7\u5339\u914d\u7684\u89c4\u5219\uff1a\u5de6\u62ec\u53f7\u4e0e\u53f3\u62ec\u53f7\u5339\u914d\uff09</li> <li>A context-free language is a language generated by a context-free grammar (CFG).</li> </ul> <p>\u901a\u8fc7 CFL \u89e3\u51b3 partially balanced-parenthesis problem\uff1a</p> <ul> <li>\u6bcf\u4e2a\u53f3\u62ec\u53f7 \\()_i\\) \u9700\u8981\u76f8\u5e94\u7684\u5de6\u62ec\u53f7 \\((_i\\) \u6765\u5e73\u8861\uff0c\u4f46\u662f\u5de6\u62ec\u53f7\u4e0d\u9700\u8981\uff0c\u5982\u4e0b\u56fe\u4e2d realizable \u7684\u7b2c\u4e8c\u79cd\u53ef\u80fd\u6240\u793a</li> <li>\u5bf9\u4e8e call edge \u548c return edge\uff0c\u6211\u4eec\u7528\u6253\u4e0a\u6807\u8bb0\u7684\u5de6\u53f3\u62ec\u53f7\u6765\u6807\u8bc6</li> <li>\u5176\u4ed6\u7684\u666e\u901a edge \u7528 \\(e\\) \u6807\u8bc6</li> </ul> <p>realizable \u7684\u53ef\u80fd\u5f62\u5f0f\u5982\u4e0b\u56fe\u6240\u793a\uff0cmatched \u8868\u793a\u7684\u662f fully balanced-parenthesis\uff0c\u53ef\u80fd\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#overview-of-ifds","title":"Overview of IFDS","text":"<p>IFDS<sup>1</sup> (Interprocedural, Finite, Distributive, Subset Problem) \u4f7f\u7528 distributive flow functions over finite domains \u6765\u89e3\u51b3 interprocedural dataflow analysis\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#mrp","title":"MRP","text":"<p>IFDS \u63d0\u4f9b\u4e86\u4e00\u79cd\u540d\u4e3a meet-over all realizable paths (MRP) \u7684\u65b9\u6cd5\uff0c\u4e0e\u524d\u9762\u7684 MOP \u76f8\u4f3c\u3002</p> <p>\u4f46\u662f CFG \u4e2d\u67d0\u4e9b path \u662f not executable \u7684\uff0c\u4e5f\u4f1a\u6709 unbounded\u3001not enumerable \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u663e\u7136 MOP \u662f not fully precise\u3001impractical \u7684\u3002<sup>2</sup></p> <p>\u7531\u4e8e MRP \u9488\u5bf9\u7684\u662f realizable paths\uff0c\u4e00\u4e9b\u6ca1\u6709\u51fa\u53e3\u7684\u51fd\u6570\u90fd\u663e\u7136\u4e0d\u4f1a\u662f realizable paths\uff0c\u8fd9\u4fdd\u8bc1\u4e86 MRP \u662f\u53ef\u4ee5\u7ec8\u6b62\u7684\u3001more precise than MOP\u3001practical \u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u770b\u51fa MRP \\(\\subseteq\\) MOP\u3002</p> \\[ \\mathrm{MRP_n}=\\bigcup_{p\\in\\mathrm{RPaths}(start, n)}pf_p(\\bot) \\]","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#ifds","title":"IFDS","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a program P \u548c\u4e00\u4e2a dataflow analysis problem Q\uff0cIFDS \u89e3\u51b3\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>\u57fa\u4e8e Q \u7ed9 P \u5efa\u7acb\u4e00\u4e2a supergraph G*\uff0c\u7ed9\u6bcf\u6761\u8fb9\u5b9a\u4e49\u4e00\u4e2a flow function</li> <li>\u5c06 flow function \u8f6c\u6362\u4e3a\u5b83\u8868\u793a\u7684\u6620\u5c04\u5173\u7cfb\u5efa\u7acb\u4e00\u4e2a exploded supergraph G<sup>#</sup></li> <li>\u6b64\u65f6 Q \u5df2\u7ecf\u88ab\u8f6c\u5316\u4e3a graph reachability problem\uff0c\u901a\u8fc7\u5728 G<sup>#</sup> \u4e0a\u5e94\u7528 tabulation algorithm \u6765\u89e3\u51b3</li> <li>graph reachability problem: Let \\(n\\) be a program point, data fact \\(d \\in  \\mathrm{MRP_n}\\) , iff there is a realizable path in G<sup>#</sup> from \\(&lt;s_{main}, 0&gt;\\) to \\(&lt;n, d&gt;\\)</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#supergraph-and-flow-functions","title":"Supergraph and Flow Functions","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#supergraph","title":"Supergraph","text":"<p>supergraph \u4ee5 G = (N, E*) \u7684\u5f62\u5f0f\u8868\u793a\uff0c\u5b83\u7531\u591a\u4e2a flowgraph G \u7ec4\u6210\uff0c\u5176\u4e2d\u6bcf\u4e2a G<sub>p</sub> \u90fd\u8868\u793a\u4e86\u4e00\u4e2a procedure\uff0c\u5728\u6bcf\u4e00\u4e2a G<sub>p</sub> \u4e2d\u90fd\u6709\u4e00\u4e2a start node \\(s_p\\) \u548c exit node \\(e_p\\)\uff0c\u5bf9\u4e8e procedure call\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a call node \\(Call_p\\) \u548c\u4e00\u4e2a return-site node \\(Ret_p\\) \u6765\u8868\u793a nodes\uff0c\u8fd8\u4f7f\u7528\u4e86 call-to-return-site edge (denoted by purple)\u3001call-to-start edge (green)\u3001exit-to-return-site edge (blue) \u8868\u793a edges\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#design-flow-functions","title":"Design Flow Functions","text":"<p>\u4ee5 Q = \"    Possibly-uninitialized variables\"    : for each node n \u2208 N*, determine the set of variables that may be uninitialized before execution reaches n. \u4e3a\u4f8b\u3002</p> <p>flow functions \u4ee5 lambda \u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u8868\u793a\uff1a\\(\\lambda e_{param}.e_{body}\\)\u3002</p> <p>\u5728 IFDS \u4e2d\uff0c\u6211\u4eec\u9700\u8981\u9488\u5bf9\u6bcf\u6761\u8fb9\u90fd\u8bbe\u8ba1\u4e00\u4e2a flow function\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e global variable \\(g\\)\uff0c\u5728 call-to-return edge \u7684 flow function \u4e2d\u6211\u4eec\u9700\u8981\u8bbe\u8ba1\u4e3a \\(\\lambda S.S-\\\\{g\\\\}\\)\uff1a</p> <ul> <li>\u5982\u679c \\(g\\) \u5728\u53e6\u4e00\u4e2a procedure \u4e2d\u88ab initialize \u4e86\uff0c\u90a3\u4e48\u8fd9\u4e48\u505a\u663e\u7136\u6ca1\u95ee\u9898</li> <li>\u5982\u679c \\(g\\) \u6ca1\u6709\u88ab initialize\uff0c\u90a3\u4e48 call-to-return edge \u548c exit-to-return edge \u7684 facts \u5408\u5e76\u540e\u4f1a\u52a0\u4e0a \\(g\\)</li> </ul> <p>\u4e8e\u662f\u8fd9\u6837\u505a\u53ef\u4ee5\u51cf\u5c11 false positive \u4ece\u800c\u63d0\u9ad8 precision\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#exploded-supergraph-and-tabulation-algorithm","title":"Exploded Supergraph and Tabulation Algorithm","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#build-exploded-supergraph","title":"Build Exploded Supergraph","text":"<p>\u5728 exploded supergraph G<sup>#</sup> \u4e2d\uff0cG* \u4e2d\u7684\u6bcf\u4e2a node \u90fd\u88ab\u62c6\u5206\u6210 D+1 \u4e2a nodes\uff0c\u5e76\u4e14 edge \\(n_1\\to n_2\\) \u4e5f\u4f1a\u88ab\u62c6\u5206\u4e3a\u8fd9\u6761\u8fb9\u7684 flow function \u7684 representation relation\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u79cd\u51fd\u6570\u6620\u5c04\u5173\u7cfb\u3002</p> <p></p>   - default edge: $0\\to 0$ - S \u8868\u793a statement - D \u8868\u793a\u7684\u662f flow function \u7684 domain - $\\lambda S.S$ \u8868\u793a identity function\uff0c\u5373\u8f93\u51fa = \u8f93\u5165  <p>\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e00\u4e2a 0 \u7ed3\u70b9\uff0c\u4e2a\u4eba\u7406\u89e3\u662f\u4e3a\u4e86\u51cf\u5c11\u7c7b\u4f3c\u4e8e \\(\\lambda S.\\\\\\{a\\\\\\}\\) \u8fd9\u6837\u7684\u6052\u7b49\u51fd\u6570\u9700\u8981\u591a\u8fde\u51fa\u6765\u7684\u5f88\u591a\u8fb9\uff0c\u4e8e\u662f\u641e\u4e00\u4e2a default \u9009\u9879 0\uff0c\u5c06\u8fd9 D \u6761\u8fb9\u6539\u6210 \\(0\\to a\\) \u8fd9\u4e00\u6761\u8fb9\u4ece\u800c\u51cf\u5c0f\u65f6\u7a7a\u590d\u6742\u5ea6\uff0c\u8fd9\u6837\u4e00\u6765\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u56fe\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u56fe\u7684\u8fde\u901a\u6027\u6240\u4ee5\u6bcf\u6b21\u5fc5\u987b\u52a0\u4e00\u4e2a \\(0\\to 0\\) \u7684\u8fb9\u3002</p> <p>\u4e00\u4e2a\u53ef\u80fd\u7684 exploded supergraph \u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#tabulation-algorithm","title":"Tabulation Algorithm","text":"<p>tabulation algorithm \u53ef\u4ee5\u5728 exploded supergraph G<sup>#</sup> \u4e0a\u901a\u8fc7\u627e\u51fa\u6240\u6709\u7684\u4ece \\(&lt;s_{main}, 0&gt;\\) \u5f00\u59cb\u7684 realizable paths \u6765\u7ed9\u51fa MRP solution\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 \\(\\mathcal{O}(ED^3)\\)\u3002</p> <p></p> <p>core working mechanism:</p> <ul> <li>\u5728 \\(&lt;Call_p, d_m&gt;\\) \u548c \\(&lt;Ret_p, d_n&gt;\\) \u4e4b\u95f4\u4f1a\u6709\u4e00\u6761 summary edge (denoted by pink)\uff0c\u8fd9\u6761\u8fb9\u7528\u6765\u8868\u660e \\(d_n\\) is reachable from \\(d_m\\)\uff0c\u5f53\u6211\u4eec\u8d70 call-to-return edge \u65f6\u5c31\u53ef\u4ee5\u8df3\u8fc7 procedure \\(p\\) \u4e2d\u7684 redundant work \u4e86</li> <li>\u5904\u7406 exit node (\\(e_{p^1}\\)) \u65f6\u4f1a\u8fdb\u884c call-to-return matching: \u5148\u627e\u51fa call \\(p^1\\) \u7684 call sites\uff0c\u518d\u6839\u636e call sites \u7684\u4fe1\u606f\u627e\u51fa\u5b83\u4eec\u5206\u522b\u5bf9\u5e94\u7684 return sites\uff0c\u8fd9\u4e00\u6b65\u4fdd\u8bc1\u4e86 IFDS \u662f context sensitive \u7684</li> <li>\u5728\u6700\u5f00\u59cb\uff0c\u6240\u6709\u8868\u793a data fact \u7684 circle \u90fd\u662f\u767d\u8272\u7684\uff0c\u5f53\u4e00\u4e2a circle \u53d8\u4e3a\u84dd\u8272\u7684\u65f6\u5019\u5c31\u8868\u660e \\(&lt;n, d&gt;\\) is reachable from \\(&lt;s_{main}, 0&gt;\\)\uff08\u7c7b\u4f3c\u4e8e\u67d3\u8272\u6cd5\uff09</li> </ul> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/CFL-Reachability%20and%20IFDS/#understanding-the-distributivity-of-ifds","title":"Understanding the Distributivity of IFDS","text":"<p>\u8003\u8651\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>IFDS \u53ef\u4ee5\u89e3\u51b3 constant propagation \u5417\uff1f</li> <li>constant propagation \u7684 domain \u662f infinite \u7684\uff0c\u8fd9\u4e0e IFDS \u8981\u6c42\u7684 flow function \u7684 domain \u5e94\u8be5\u662f finite \u7684\u77db\u76fe\uff0c\u56e0\u6b64\u4e0d\u884c</li> <li>IFDS \u53ef\u4ee5\u89e3\u51b3 pointer analysis \u5417\uff1f</li> <li>\u4e5f\u4e0d\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 IFDS \u7684 distributivity \u6765\u89e3\u91ca</li> </ul> <p>\u7528 \\(f(x\\land y)=f(x)\\land f(y)\\) \u53ef\u4ee5\u62bd\u8c61\u7684\u8868\u8fbe distributivity \u7684\u542b\u4e49\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5427\uff08</p> <p>\u89c2\u5bdf IFDS \u7684 flow function\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u662f \\(1\\colon n\\) \u7684\u5173\u7cfb\uff0c\u800c constant propagation \u7684 flow function \u5219\u662f \\(n\\colon 1\\) \u7684\u5173\u7cfb\uff0c\u663e\u7136\u662f\u4e0d\u884c\u7684\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684 pointer analysis\uff0c\u5c1d\u8bd5\u7528 IFDS \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u4ece\u56fe\u4e2d\u7684\u7ea2\u8fb9\u53ef\u4ee5\u770b\u51fa IFDS \u4f1a\u6f0f\u6389 alias information\uff0c\u60f3\u8981\u5305\u542b alias information \u5c31\u5fc5\u7136\u4f1a\u8981\u6709 multiple inputs\uff0c\u8fd9\u4e0e IFDS \u7684 flow functions \u7684\u8bbe\u8ba1\u662f\u4e0d\u7b26\u5408\u7684\uff0c\u6240\u4ee5 standard IFDS \u662f\u4e0d\u80fd\u89e3\u51b3 pointer analysis \u7684\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684 rule \u6765\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u80fd\u7528 IFDS\uff1a\u5bf9\u4e8e\u4e00\u4e2a statement \\(s\\)\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u8003\u8651 multiple input data facts \u6765\u5f97\u5230\u6b63\u786e\u7684 output data facts\uff0c\u90a3\u4e48\u8fd9\u4e2a\u95ee\u9898\u5c31\u4e0d\u80fd\u91c7\u7528 IFDS\u3002</p> <p>\u53e6\u5916\uff0cIFDS \u8fd8\u6709\u4ee5\u4e0b\u4e24\u4e2a\u7279\u70b9\uff1a</p> <ul> <li>\u65e0\u540e\u6548\u6027\uff1a\u6bcf\u4e2a data fact (circle) \u548c\u5b83\u7684 propagation (edges) \u90fd\u53ef\u4ee5\u88ab\u72ec\u7acb\u89e3\u51b3\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u4e00\u4e2a circle \u6216\u8005 edge \u7684\u5206\u6790\u7ed3\u679c\u4e0d\u4f1a\u5bf9\u5f53\u524d\u8fd9\u4e2a circle \u6216 edge \u7684\u5206\u6790\u9020\u6210\u5f71\u54cd</li> <li>\u53e6\u4e00\u79cd\u610f\u4e49\u4e0a\u7684\u300c\u5355\u5c04\u300d\uff1arepresentation relation \u7684 rule \u4fdd\u8bc1\u4e86\u6bcf\u4e2a output node \u6700\u591a\u53ea\u4f1a\u88ab\u4e00\u4e2a input node \u6307\u5411</li> </ul> <ol> <li> <p>Thomas Reps, Susan Horwitz, and Mooly Sagiv, \"    Precise Interprocedural Dataflow Analysis via Graph Reachability\"    . POPL'95\u00a0\u21a9</p> </li> <li> <p>NJU\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u5b66\u4e60\u7b14\u8bb0\uff1aData Flow Analysis \u21a9</p> </li> </ol>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/","title":"Data Flow Analysis","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Data Flow Analysis \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#data-flow-analysis-applications","title":"Data Flow Analysis - Applications","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#overview-of-data-flow-analysis","title":"Overview of Data Flow Analysis","text":"<p>data flow analysis \u7684\u6838\u5fc3\u5c31\u662f how data flows on CFG?\uff0c\u5c06\u8fd9\u53e5\u8bdd\u62c6\u5f00\u4e86\u8bb2\u5c31\u662f\uff1a</p> <ul> <li>how application-specific data\uff1a\u5bf9\u6570\u636e\u7684 abstraction\uff0c\u4f8b\u5982 +\u3001-\u30010 \u7b49</li> <li>flows through the\uff1a\u6839\u636e\u5206\u6790\u7684\u7c7b\u578b\u4f5c\u51fa approximation</li> <li>may-analysis: outputs information that may be true. \u662f\u4e00\u79cd over-approximation\uff0c\u4e5f\u662f\u5927\u591a\u6570\u9759\u6001\u5206\u6790\u91c7\u7528\u7684\u7c7b\u578b</li> <li>must-analysis: output information that must be true. \u662f\u4e00\u79cd under-approximation</li> <li>nodes and: \u6570\u636e\u5982\u4f55 transfer\uff0c\u7528 transfer function \u8868\u793a\uff0c\u4f8b\u5982 <code>+ op - = -</code> \u7b49</li> <li>edges of: \u6570\u636e\u6d41\u5982\u4f55\u5904\u7406\uff0c\u4f8b\u5982\u4e24\u4e2a\u63a7\u5236\u6d41\u6c47\u5165\u4e00\u4e2a\u7ed3\u70b9</li> <li>CFG</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#preliminaries-of-data-flow-analysis","title":"Preliminaries of Data Flow Analysis","text":"<p>Each execution of an IR statement transforms an input state to a new output state.</p> <p>Every input/output state is associated with a program point, corresponds to an edge of CFG.</p> <p></p> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a program point\uff0c\u6211\u4eec\u7528\u4e00\u4e2a data-flow value \u8868\u793a\u5bf9\u4e8e\u5f53\u524d\u6240\u6709\u53ef\u80fd\u7684 program states \u7684 abstraction\u3002</p> <ul> <li> <p>transfer function's contraints: \u5206\u4e3a forward analysis \u548c backward analysis \u4e24\u79cd\uff0c\u7528 \\(f_s\\) \u8868\u793a\u7ecf\u8fc7 definition \\(s\\) \u7684 transfer function</p> </li> <li> <p>control flow's contraints:</p> </li> <li>within a BB: IN[\\(s_{i+1}\\)] = OUT[\\(s_i\\)]</li> <li>among BBs: OUT[B] = \\(f_B(\\)IN[B]\\()\\)\uff0c\u5176\u4e2d \\(f_B\\) \u662f \\(f_{s_i}\\) \u7684\u590d\u5408\u51fd\u6570<ul> <li></li> </ul> </li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#reaching-definitions-analysis","title":"Reaching Definitions Analysis","text":"<p>\u4e3a\u4e86\u51cf\u5c11\u590d\u6742\u6027\uff0c\u8fd9\u91cc\u7684 RDA \u4e0d\u5305\u62ec method calls \u548c aliases\u3002</p> <p>\u4e00\u4e2a definition \\(d\\) \u53ef\u4ee5 reach program point \\(q\\) \u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u6761\u8def\u5f84 \\(p\\) \u5230 \\(q\\) \u4f7f\u5f97 \\(d\\) \u4e0d\u4f1a\u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u88ab kill \u6389\u3002</p> <p>\u5bf9\u4e8e\u53d8\u91cf \\(v\\) \u7684 definition \u5c31\u662f\u6307\u5bf9 \\(v\\) \u7684\u8d4b\u503c\u8bed\u53e5\uff0c\u5982\u679c\u539f\u6765\u7684 definition \\(d_1\\) \u5bf9 \\(v\\)\uff0c\u7ecf\u8fc7\u7684\u67d0\u4e2a BB \u4e2d\u6709\u53e6\u4e00\u4e2a \\(d_2\\) \u4e5f\u5bf9 \\(v\\) \u8fdb\u884c\u4e86\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u8bf4 \\(d_1\\) \u88ab kill \u6389\u4e86\u3002</p> <p>\u5728 reaching definition analysis \u4e2d\uff0cdata flow value \u88ab\u8bbe\u7f6e\u4e3a\u957f\u5ea6\u4e0e definitions \u7684\u6570\u91cf\u76f8\u7b49\u7684 bit vector\uff0c\u6bcf\u4e2a bit \u5bf9\u5e94\u4e00\u4e2a definition\uff0c0/1 \u8868\u793a\u5230\u8fbe\u8fd9\u4e2a program point \u65f6\u5bf9\u5e94\u7684 definition \u662f\u5426\u88ab kill \u4e86\u3002</p> <p>\u7531\u4e8e\u6bcf\u4e2a definition \u90fd\u88ab\u5b9a\u4e49\u4e3a\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u6240\u4ee5\u6bcf\u7ecf\u8fc7\u4e00\u4e2a BB \u5c31\u4f1a\u201c\u4ea7\u751f\u65b0\u7684 definition\u201d\uff0c\u56e0\u6b64 transfer function \u88ab\u5b9a\u4e49\u4e3a \\(\\mathrm{OUT[B]}=gen_B\\cup(\\mathrm{IN[B]}-kill_B)\\)\u3002</p> <p>RDA \u7684 algorithm \u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u7531\u4e8e \\(gen_B\\) \u548c \\(kill_B\\) \u662f\u59cb\u7ec8\u4e0d\u53d8\u7684\uff0c\u56e0\u6b64\u53ea\u8981 \\(\\mathrm{IN[B]}\\) \u4e0d\u53d8\u90a3\u4e48 \\(\\mathrm{OUT[B]}\\) \u4e5f\u4e00\u5b9a\u4e0d\u4f1a\u53d8\u3002\u6bcf\u6b21\u7ecf\u8fc7\u4e00\u8f6e\u8fed\u4ee3\uff0c\u4e0a\u4e00\u8f6e \\(\\mathrm{IN[B]}\\) \u4e2d\u4e3a 1 \u7684 bit \u4ecd\u7136\u4f1a\u662f 1\uff0c\u4ece\u800c \\(\\mathrm{IN[B]}\\) \"never shrinks\"\uff0c\u56e0\u6b64 \\(\\mathrm{OUT[B]}\\) \u4e5f\u4f1a\u662f \"never shrinks\" \u7684\uff0c\u800c bit \u7684\u6570\u76ee\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5 \\(\\mathrm{OUT[B]}\\) \u8fdf\u65e9\u4f1a reach a fixed point\uff0c\u4ece\u800c\u8fd9\u4e2a\u7b97\u6cd5\u4e00\u5b9a\u53ef\u4ee5\u7ec8\u6b62\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#live-variables-analysis","title":"Live Variables Analysis","text":"<p>\u5982\u679c\u5b58\u5728\u4e00\u6761\u4ee5 program point \\(p\\) \u4e3a\u8d77\u70b9\u7684\u8def\u5f84\uff0c\u4f7f\u5f97 variable \\(v\\) \u5728\u8fd9\u6761\u8def\u5f84\u4e0a\u80fd\u591f\u88ab\u4f7f\u7528\uff08\\(use(v)\\)\uff09\uff0c\u540c\u65f6\u6ca1\u6709\u5728\u88ab\u4f7f\u7528\u524d redefined\uff0c\u5c31\u79f0 \\(v\\) is live at \\(p\\)\uff0c\u5426\u5219\u5c31\u79f0 \\(v\\) is dead at \\(p\\).</p> <p>LVA \u5bf9\u4e8e data flow values \u7684\u8bbe\u7f6e\u662f\u4e0e RDA \u7c7b\u4f3c\u7684\uff0c\u53ea\u662f\u5c06 definition \u6362\u6210\u4e86 variable\u3002</p> <p>\u57fa\u4e8e\u4ee5\u4e0a\u5b9a\u4e49\uff0cLVA \u7684 algorithm \u662f\u4e00\u79cd backward analysis\uff0c\u6211\u4eec\u6839\u636e \\(\\mathrm{OUT[B]}\\) \u6765\u6c42\u51fa \\(\\mathrm{IN[B]}\\)\uff0c\u5bf9\u5e94\u7684 transfer function \u4e3a \\(\\mathrm{IN[B]}=use_B\\cup(\\mathrm{OUT[B]}-def_B)\\)\u3002</p> <p>LVA \u7684 algorithm \u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#available-expressions-analysis","title":"Available Expressions Analysis","text":"<p>\u8868\u8fbe\u5f0f <code>x op y</code>(\\(e\\)) \u5728 program point \\(p\\) \u662f available \u7684\u5f53\u4e14\u4ec5\u5f53\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u6210\u7acb\uff1a</p> <ol> <li>\u4ece Entry \u5230 \\(p\\) \u7684\u6240\u6709\u8def\u5f84\u90fd\u9700\u8981\u7ecf\u8fc7 the evaluation of \\(e\\)</li> <li>\u5728\u7ecf\u8fc7\u6700\u540e\u4e00\u6b21 evaluation of \\(e\\) \u4e4b\u540e\u6ca1\u6709\u518d\u5bf9 \\(x\\) \u6216\u8005 \\(y\\) \u8fdb\u884c redefine</li> </ol> <p>AEA \u7684 flow data values \u4e5f\u662f bit vector \u7684\u5f62\u5f0f\u3002</p> <p>\u663e\u7136 AEA \u4e2d\u7684 \\(gen_B\\) \u662f\u6307 B \u4e2d\u65b0\u7684 expression\uff0c\\(kill_B\\) \u6307\u7684\u662f B \u4e2d\u5bf9 \\(\\mathrm{IN[B]}\\) \u7684 expressions \u7684 variables \u7684 redefine \u8bed\u53e5\u3002</p> <p>AEA \u5141\u8bb8\u6211\u4eec\u5728\u6709\u591a\u6761\u8def\u5f84\u53ef\u4ee5\u5230\u8fbe \\(p\\) \u65f6\uff0c\u65e0\u9700\u91cd\u590d\u8ba1\u7b97 expression \\(e\\)\uff0c\u800c\u662f\u76f4\u63a5\u7528 last evaluation of \\(e\\) \u7684\u503c\u8fdb\u800c\u8fbe\u5230\u4f18\u5316\u7684\u76ee\u7684\u3002</p> <p>\u4ece AEA \u7684\u5b9a\u4e49\u4e2d\uff0c\u4e0d\u96be\u770b\u51fa\u8fd9\u662f\u4e00\u79cd must-analysis\uff0c\u5e76\u4e14 \\(\\mathrm{IN[B]}\\) \u9700\u8981\u53d6\u7684\u662f\u524d\u7ee7\u7684\u4ea4\u96c6\u3002</p> <p>AEA \u7684 algorithm \u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\\(\\mathrm{OUT[B]}\\) \u7684\u521d\u59cb\u5316\u4e0e\u524d\u9762\u7684 may-analysis \u662f\u4e0d\u540c\u7684\u3002</p> Reaching Definitions Live Variables Available Expressions Domain Set of definitions Set of variables Set of expressions Direction Forwards Backwards Forwards May/Must May May Must Boundary OUT[entry]=\u2205 IN[exit]=\u2205 OUT[entry]=\u2205 Initialization OUT[B]=\u2205 IN[B]=\u2205 OUT[B]=U Transfer function \\(\\mathrm{OUT[B]}=gen_B\\cup(\\mathrm{IN[B]}-kill_B)\\) \\(\\mathrm{IN[B]}=use_B\\cup(\\mathrm{OUT[B]}-def_B)\\) \\(\\mathrm{OUT[B]}=gen_B\\cup(\\mathrm{IN[B]}-kill_B)\\) Meet \\(\\cup\\) \\(\\cup\\) \\(\\cap\\)","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#data-flow-analysis-foundations","title":"Data Flow Analysis - Foundations","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#iterative-algorithm-another-view","title":"Iterative Algorithm, Another View","text":"<p>\u5728\u524d\u9762 DFA \u7684\u8fed\u4ee3\u7b97\u6cd5\u4e2d\uff0c\u4ee5 forward analysis \u4e3a\u4f8b\uff0c\u5047\u8bbe\u4e00\u5171\u6709 k \u4e2a node\uff0c\u6bcf\u6b21\u8fed\u4ee3\u540e\u6240\u6709\u7684 \\(\\mathrm{OUT[B]}\\) \u53ef\u4ee5\u62bd\u8c61\u4e3a\u4e00\u4e2a k-tuple\uff0c\u4ee4 domain \u4e3a \\(V\\)\uff0c\u8fed\u4ee3\u7684\u8fc7\u7a0b\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u51fd\u6570 \\(F\\colon V^k\\to V^k\\)\uff0c\u800c\u8fed\u4ee3\u7684\u51fa\u53e3\u5c31\u662f\u5230\u8fbe\u8fd9\u4e2a\u51fd\u6570\u7684\u4e0d\u52a8\u70b9 \\(X=F(X)\\)\u3002</p> <p>\u7531\u4ee5\u4e0a\u7684\u62bd\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u51e0\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u8fd9\u4e2a\u51fd\u6570\u662f\u5426\u4e00\u5b9a\u5b58\u5728\u4e0d\u52a8\u70b9\uff1f</li> <li>\u662f\u5426\u4f1a\u5b58\u5728\u591a\u4e2a\u4e0d\u52a8\u70b9\uff1f\u5982\u679c\u662f\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u6c42\u51fa\u7684\u4e0d\u52a8\u70b9\u662f\u5426\u662f\u6700\u4f18\u89e3\uff1f</li> <li>\u4ec0\u4e48\u65f6\u5019\u624d\u80fd\u5230\u8fbe\u4e0d\u52a8\u70b9\uff1f</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#data-flow-analysis-framework-via-lattice","title":"Data Flow Analysis Framework via Lattice","text":"<p>\u4e00\u4e2a data flow analysis framework \\((D,L,F)\\) \u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\\(D\\): forward / backward analysis</li> <li>\\(L\\): lattice, includes the domain and the meet/join operator</li> <li>\\(F\\): a family of transfer functions from \\(V\\) to \\(V\\)</li> </ul> <p>\u4ece lattice \u7684\u89d2\u5ea6\u6765\u770b\uff0cdata flow analysis \u7684\u7b97\u6cd5\u76f8\u5f53\u4e8e\u8fed\u4ee3\u5730\u5728\u4e00\u4e2a lattice \u4e0a\u8fd0\u7528 transfer function \u548c meet/join \u64cd\u4f5c\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#monotonicity-and-fixed-point-theorem","title":"Monotonicity and Fixed Point Theorem","text":"<p>\u518d\u56de\u5230\u524d\u9762\u63d0\u51fa\u7684\u51e0\u4e2a\u95ee\u9898\u3002</p> <p>\u7531 \\(\\mathrm{OUT}\\) \u662f \"never shrinks\" \u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u8fd9\u4e2a transfer function \u4e00\u5b9a\u5b58\u5728\u4e0d\u52a8\u70b9\u3002</p> <p>\u5173\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4ec5\u4ec5\u4ece\u51fd\u6570\u7684\u89d2\u5ea6\u4e0a\u8003\u8651\uff0c\u4e00\u4e2a\u51fd\u6570\u7684\u4e0d\u52a8\u70b9\u5b9e\u5219\u662f\u5b83\u4e0e\u76f4\u7ebf \\(y=x\\) \u7684\u4ea4\u70b9\uff0c\u90a3\u4e48\u5f88\u663e\u7136\uff0c\u4e0d\u52a8\u70b9\u662f\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u7684\u3002</p> <p>\u4f46\u662f\u8fd9\u91cc\u7684\u51fd\u6570\u662f lattice \u4e0a\u7684\u51fd\u6570\uff0c\u81ea\u7136\u4e5f\u4f1a\u5177\u6709\u4e00\u4e9b\u7279\u6027\u3002</p> <ul> <li>monotonicity: \u5982\u679c\u51fd\u6570 \\(f\\colon L\\to L(L\\ is\\ a\\ lattice)\\) \u6ee1\u8db3\u4efb\u7ed9 \\(x,y\\in L\\)\uff0c\u6709 \\(x\\le y\\rArr f(x)\\le f(y)\\) \u5c31\u79f0\u5b83\u662f monotonic \u7684</li> <li>fixed point theorem: \u5bf9\u4e8e\u4e00\u4e2a complete lattice \\((L,\\le)\\)\uff0c\u5982\u679c \\(L\\) \u4e0a\u7684\u51fd\u6570 \\(f\\) \u662f monotonic \u7684\uff0c\u5e76\u4e14 \\(L\\) \u662f finite \u7684\uff0c\u90a3\u4e48</li> <li>\u6700\u5c0f\u7684 fixed point \u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3 \\(f(\\bot),f(f(\\bot)),\\dots,f^k(\\bot)\\) \u76f4\u5230 reach a fixed point \u7684\u65b9\u5f0f\u627e\u5230</li> <li>\u6700\u5927\u7684 fixed point \u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3 \\(f(\\top),f(f(\\top)),\\dots,f^k(\\top)\\) \u76f4\u5230 reach a fixed point \u7684\u65b9\u5f0f\u627e\u5230</li> </ul> <p>\u8bc1\u660e fixed point theorem \u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e24\u4e2a\u90e8\u5206\u8fdb\u884c\u8bc1\u660e\uff1a</p> <ol> <li>existence of fixed point: \u7531\u4e8e \\(f\\) \u662f monotonic \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9 \\(\\bot\\) \u8fdb\u884c\u6bcf\u6b21\u8fed\u4ee3\u7684\u503c\u90fd\u662f\u9012\u589e\u7684\uff0c\u800c\u8fd9\u4e2a lattice \u53c8\u662f finite \u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u8fbe\u5230\u4e00\u4e2a\u6700\u5927\u503c\u4e0d\u52a8\uff0c\u8fd9\u4e2a\u6700\u5927\u503c\u5c31\u662f\u4e00\u4e2a\u4e0d\u52a8\u70b9\uff0c\u5bf9 \\(\\top\\) \u505a\u7684\u8fed\u4ee3\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002</li> <li>least fixed point: \u53cd\u8bc1\u6cd5\u3002\u5047\u8bbe \\(x\\) \u662f\u6700\u5c0f\u7684 fixed point\uff0c\u7531 \\(\\bot\\) \u7684\u5b9a\u4e49\uff0c\u5fc5\u7136\u6709 \\(\\bot \\le x\\)\uff0c\u7136\u540e\u5bf9\u4e24\u8fb9\u4e00\u76f4\u505a\u8fed\u4ee3\uff0c\u5de6\u8fb9\u4f1a\u8fbe\u5230\u4e00\u4e2a\u975e\u6700\u5c0f\u7684\u4e0d\u52a8\u70b9 \\(p\\)\uff0c\u53f3\u8fb9\u4ecd\u7136\u662f \\(x\\)\uff0c\u7531 monotonicity \u7684\u5b9a\u4e49\u53ef\u77e5\uff0c\\(p\\le x\\)\uff0c\u8fd9\u4e0e \\(x\\) \u662f\u6700\u5c0f\u7684 fixed point \u7684\u5047\u8bbe\u77db\u76fe\uff0c\u56e0\u6b64 least fixed point \u7684\u7b97\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u540c\u7406\uff0cgreatest fixed point \u7684\u7b97\u6cd5\u4e5f\u662f\u6b63\u786e\u7684\u3002</li> </ol> <p>\u6211\u4eec\u4e4b\u524d\u8bbe\u8ba1\u7684 DFA \u7684\u7b97\u6cd5\u90fd\u662f\u4ece \\(\\bot\\) \u6216\u8005 \\(\\top\\) \u5f00\u59cb\u8fed\u4ee3\uff0c\u56e0\u6b64\u6c42\u51fa\u7684\u4e0d\u52a8\u70b9\u4e00\u5b9a\u662f least/greatest fixed point\uff0c\u5728\u67d0\u4e9b\u5b9a\u4e49\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u6211\u4eec\u7684\u7b97\u6cd5\u6c42\u51fa\u6765\u7684\u662f\u6700\u4f18\u89e3\u3002</p> <p>\u4ee5\u4e0a\u5173\u4e8e\u51fd\u6570\u6027\u8d28\u7684\u8bba\u8bc1\u90fd\u662f\u57fa\u4e8e lattice \u7684\uff0c\u8981\u8bc1\u660e\u6211\u4eec\u7684 DFA \u8fed\u4ee3\u7b97\u6cd5\u4e5f\u6709\u540c\u6837\u7684\u6027\u8d28\uff0c\u8fd8\u9700\u8981\uff08\u5c3d\u53ef\u80fd\uff09\u5c06\u6211\u4eec\u7684\u7b97\u6cd5\u4e0e fixed point theorem \u5efa\u7acb\u5173\u8054\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#relate-iterative-algorithm-to-fixed-point-theorem","title":"Relate Iterative Algorithm to Fixed Point Theorem","text":"<p>\u6839\u636e fixed point theorem \u7684\u6761\u4ef6\uff0c\u6211\u4eec\u9996\u5148 relate iterative algorithm \u4e2d\u7684 fact \u548c lattice\u3002</p> <p>\u5047\u8bbe\u6709 \\(k\\) \u4e2a node\uff0c\u90a3\u4e48\u7ecf\u8fc7 \\(i\\) \u8f6e\u8fed\u4ee3\u540e\u5f97\u5230\u7684 fact \u7684\u5f62\u5f0f\u4e3a \\((v_1^i,v_2^i,\\dots,v_k^i)\\)\uff0c\u5bf9\u4e8e node \\(j\\)\uff0c\u6bcf\u8f6e\u8fed\u4ee3\u4ea7\u751f\u7684 \\(v_j^i\\) \u7ec4\u6210\u7684\u96c6\u5408\u4e0e\u96c6\u5408\u7684 \\(\\subset\\) \u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a finite \u4e14 complete \u7684 lattice \\(L\\)\uff0c\u4ece\u800c\u6574\u4e2a fact \u5c31\u662f\u8fd9\u4e9b lattice \u7684\u7b1b\u5361\u5c14\u79ef \\(L^k\\)\uff0c\u4ece\u800c fact \u4e5f\u662f\u4e00\u4e2a finite \u4e14 complete \u7684 lattice\u3002</p> <p>\u4e4b\u540e\u53ea\u9700 relate transfer + meet/join function \u4e0e monotonic \u7684\u51fd\u6570 \\(f\\colon L\\to L(L\\ is\\ a\\ lattice)\\)\u3002</p> <p>\u4ece\u524d\u9762\u8bc1\u660e \\(\\mathrm{OUT}\\) \u662f never shrinks \u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u77e5\u9053 transfer function \u662f\u6ee1\u8db3 monotonic \u7684\u6761\u4ef6\u7684\u4e86\u3002\u800c\u5bf9\u4e8e meet/join function\uff0c\u6211\u4eec\u6839\u636e monotonic \u7684\u5b9a\u4e49\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u8bc1\u660e\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5 relate the algorithm to the fixed point theorem\u3002\u4e5f\u5c31\u53ef\u4ee5\u5f88\u81ea\u4fe1\u7684\u8ba4\u4e3a\u5bf9\u524d\u4e24\u4e2a\u95ee\u9898\u7684\u56de\u7b54\u662f\u6b63\u786e\u7684\u4e86\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u56de\u7b54\u7b2c\u4e09\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u5b9a\u4e49 lattice \u7684\u9ad8\u5ea6\u662f\u4ece \\(\\top\\) \u5230 \\(\\bot\\) \u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u5047\u8bbe\u5355\u4e2a\u7ed3\u70b9\u7684 lattice \u7684\u9ad8\u5ea6\u662f \\(h\\)\uff0cCFG \u7684\u7ed3\u70b9\u6570\u4e3a \\(j\\)\uff0c\u6bcf\u6b21\u8fed\u4ee3\u81f3\u5c11\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u7ed3\u70b9\u5f80\u4e0a\u722c\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u6240\u4ee5\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u7684\u8fed\u4ee3\u6b21\u6570\u662f \\(h\\cdot k\\)\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#may-and-must-analysis-a-lattice-view","title":"May and Must Analysis, a Lattice View","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#mop-and-distributivity","title":"MOP and Distributivity","text":"<p>Meet Over All Paths Solution (MOP) \u662f\u8003\u8651\u6240\u6709\u53ef\u80fd\u5230\u8fbe\u7ed3\u70b9 \\(s_i\\) \u7684\u8def\u5f84\uff0c\u5c06\u8fd9\u4e9b\u8def\u5f84\u7684 OUT \u53d6 meet/join \u6765\u5f97\u5230 \\(s_i\\) \u7684 IN \u6216\u8005\u8bf4 MOP[\\(s_i\\)]\uff0c\u4e5f\u5c31\u662f\u6839\u636e\u6240\u6709\u8def\u5f84\u7684\u8ba1\u7b97\u7ed3\u679c\u53d6 lub/glb\u3002</p> <p>\u4f46\u662f CFG \u4e2d\u67d0\u4e9b path \u662f not executable \u7684\uff0c\u4e5f\u4f1a\u6709 unbounded\u3001not enumerable \u7684\u8def\u5f84\uff0c\u6240\u4ee5\u663e\u7136 MOP \u662f not fully precise\u3001impractical \u7684\u3002</p> <p>\u5bf9\u6bd4 iterative algorithm\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u7b97\u6cd5\u7684\u5f62\u5f0f\u662f \\(F(x\\cup y)\\) \u7684\uff0c\u800c MOP \u7684\u5f62\u5f0f\u662f \\(F(x)\\cup F(y)\\) \u7684\uff0c\u7531 \\(F\\) \u662f monotonic \u7684\u548c lattice \u7684\u6027\u8d28\u53ef\u4ee5\u63a8\u51fa \\(F(x)\\cup F(y)\\le F(x\\cup y)\\) \uff0c\u6240\u4ee5 iterative algorithm \u7684\u7cbe\u5ea6\u662f\u4e0d\u5982 MOP \u7684\u3002</p> <p>\u4f46\u662f\uff0c\u5f53 \\(F\\) \u662f distributive \u65f6\uff0citerative algorithm \u7684\u7cbe\u5ea6\u662f\u548c MOP \u4e00\u6837\u7684\u3002\u518d\u5206\u6790 iterative algorithm \u7684 \\(F\\)\uff0c\u53ef\u4ee5\u53d1\u73b0 bit-vector \u6216 gen/kill problems \u90fd\u662f distributive \u7684\uff0c\u6240\u4ee5\u524d\u9762\u4ecb\u7ecd\u7684\u51e0\u79cd\u7b97\u6cd5\u7cbe\u5ea6\u90fd\u662f\u4e0e MOP \u76f8\u5f53\u7684\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#constant-propagation","title":"Constant Propagation","text":"<p>\u51b3\u7b56\u5728 program point \\(p\\) \u7684\u4e00\u4e2a variable \\(x\\) \u662f\u5426\u662f\u4e00\u4e2a\u5e38\u91cf\u7684\u95ee\u9898\u5c31\u662f constant propagation\u3002</p> <ul> <li>direction: forward analysis</li> <li>lattice:</li> <li>OUT: a set of pairs \\((x,v)\\)</li> <li>domain of \\(v\\): UNDEF / values(-2, -1, 0...) / NAC</li> <li>\\(\\cap\\): <ul> <li>NAC \\(\\cap\\) \\(v\\) = NAC</li> <li>UNDEF \\(\\cap\\) \\(v\\) = \\(v\\)</li> </ul> </li> <li>transfer function: \\(F\\colon \\mathrm{OUT}[s]=gen\\cup (\\mathrm{IN}[s]-\\{(x,\\_)\\})\\)</li> <li>s: <code>x = c</code> or <code>x = y</code> or <code>x = y op z</code><ul> <li></li> </ul> </li> </ul> <p>\u4ece\u4e0b\u56fe\u4e2d\u7684\u7b80\u5355\u4f8b\u5b50\u53ef\u4ee5\u770b\u51fa constant propagation \u7684 \\(F\\) \u662f non-distributive \u7684\uff1a</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Data%20Flow%20Analysis/#worklist-algorithm","title":"Worklist Algorithm","text":"<p>worklist algorithm \u5b9e\u73b0\u4e86\u5bf9 iterative algorithm \u7684\u4f18\u5316\uff1a\u5982\u679c\u7ecf\u8fc7\u4e00\u4e2a BB\uff0c\u5b83\u7684 IN \u6ca1\u6709\u53d8\u5316\uff0c\u90a3\u4e48\u4e4b\u540e\u8fd9\u4e2a BB \u7684 OUT \u4e00\u5b9a\u4e0d\u4f1a\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u7ef4\u62a4\u4e00\u4e2a worklist of BBs\uff0c\u5982\u679c\u5f53\u524d\u7684 BB \u7684 OUT \u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6211\u4eec\u624d\u5c06\u5b83\u6240\u6709\u7684\u540e\u7ee7\u52a0\u5165 worklist\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/","title":"Datalog-Based Program Analysis","text":"<p>\u65b0\u5e74\u7b2c\u4e00\u5929\uff0c\u4ece\u300c\u604b\u00d7\u30b7\u30f3\u30a2\u30a4\u5f7c\u5973\u300d\u5f00\u59cb\uff01</p> <p>\u65b0\u5e74\u7b2c\u4e00\u5929\uff0c\u4ece Program Analysis \u5f00\u59cb\uff01</p> <p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Datalog-Based Program Analysis \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#motivation","title":"Motivation","text":"<ul> <li>imperative: how to do (~implementation)</li> <li>E.g. C. \u9700\u8981\u544a\u8bc9\u673a\u5668\u8981\u5982\u4f55\u53bb\u5b9e\u73b0</li> <li>declarative: what to do (~specification)</li> <li>E.g. SQL. \u4ec5\u4ec5\u9700\u8981\u6307\u660e\u4f60\u60f3\u8981\u4ec0\u4e48\uff0c\u5982\u4f55\u5b9e\u73b0\u5219\u4ea4\u7ed9\u7a0b\u5e8f\uff08DBMS\uff09\u81ea\u884c\u9009\u62e9</li> </ul> <p>\u5728 program analysis \u4e2d\uff0c\u6211\u4eec\u6307\u660e\u5bf9\u4e8e\u4e0d\u540c\u7684 statement \u5bf9\u5e94\u4e0d\u540c\u7684 rule\uff0c\u8fd9\u5c31\u662f\u4e00\u79cd specification\uff0c\u800c\u5728 algorithm \u4e2d\uff0c\u6211\u4eec\u5219\u6307\u660e\u4e86\u6bcf\u4e00\u6b65\u5177\u4f53\u8981\u600e\u4e48\u505a\uff0c\u5728\u5b9e\u9645\u7684\u4ee3\u7801\u5b9e\u73b0\u91cc\u66f4\u662f\u8981\u8003\u8651\u66f4\u591a\u7684 implementation details\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u524d\u9762\u6240\u5b66\u7684 program analysis \u5373\u662f declarative \u4e5f\u662f imperative \u7684\u3002</p> <p>\u5728 tai-e assignments \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 imperative \u7684\u65b9\u5f0f\u5b9e\u73b0 program analysis\uff0c\u540c\u6837\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 declarative \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u3002(via Datalog)</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#introduction-to-datalog","title":"Introduction to Datalog","text":"<p>datalog \u6700\u65e9\u662f\u4ee5 database language \u7684\u8eab\u4efd\u51fa\u73b0\u7684<sup>1</sup>\uff0c\u73b0\u5728\u6709\u4e86\u66f4\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p> <ul> <li>Datalog = Data + Logic (and, or, not)</li> <li>no side-effects</li> <li>no control flows</li> <li>no functions</li> <li>not turing-complete</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#predicates-data","title":"Predicates (Data)","text":"<p>\u5728 datalog \u4e2d\uff0c\u4e00\u4e2a predicate (relation) \u5c31\u662f\u503c\u4e00\u7cfb\u5217\u7684 statemetns\uff0c\u672c\u8d28\u4e0a\u5176\u5b9e\u662f a table of data\u3002\u800c fact \u5219\u662f\u6307\u8fd9\u4e2a table \u4e2d\u67d0\u4e2a tuple\u3002</p> <p>atoms \u662f datalog \u7684 basic elements\u3002</p> <p><code>P(X1, X2, ..., Xn)</code> \u7684\u5f62\u5f0f\u8868\u793a\u4e00\u4e2a relation atom\uff0c\u5176\u4e2d P \u662f predicate \u7684\u540d\u5b57\uff0cXi \u5219\u662f arguments\uff0c \u5b83\u7684\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a variable \u4e5f\u53ef\u4ee5\u662f constant\u3002\u4e00\u4e2a relation atom \u7684\u503c\u4e3a true \u5f53\u4e14\u4ec5\u5f53 P \u4e2d\u5b58\u5728 <code>(X1, X2, ..., Xn)</code> \u8fd9\u4e2a tuple\u3002</p> <p>\u9664\u4e86 relation atoms\uff0cdatalog \u8fd8\u6709 arithmetic atoms\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#datalog-rules-logic","title":"Datalog Rules (Logic)","text":"<p>rule \u7528\u6765\u8868\u793a logic inferences\uff0c\u5e76\u4e14\u8868\u660e facts \u662f\u5982\u4f55\u88ab deduced \u7684\uff0c\u5b83\u7684\u5f62\u5f0f\u4e3a <code>H &lt;- B1, B2, ,,,, Bn</code> \uff0c\u5176\u4e2d head \u548c body \u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f atom\uff0c<code>Bi</code> \u4e5f\u88ab\u79f0\u4e3a subgoal\u3002</p> <p>\u4e00\u4e2a datalog program \u7531 facts \u548c rules \u7ec4\u6210\u3002\u66f4\u591a\u7684\u8bed\u6cd5\u76f4\u63a5\u770b slides \u5427\uff0c\u61d2\u5f97\u5199\u4e86\uff08</p> <p>datalog \u7684 predicates \u88ab\u5206\u4e3a EDB \u548c IDB \u4e24\u79cd\uff1a</p> <ol> <li>EDB (extensional database)    - \u63d0\u524d\u5b9a\u4e49\u597d\u7684 predicates    - relations are immutable    - \u53ef\u4ee5\u770b\u4f5c input relations</li> <li>IDB (intensional database)    - \u7531 rules \u63a8\u5bfc\u51fa\u7684 predicates    - \u53ef\u4ee5\u770b\u4f5c\u662f output relations</li> </ol> <p>datalog \u652f\u6301 recursive rules\uff0c\u4ece\u800c\u53ef\u4ee5\u4ece\u81ea\u8eab\u8fdb\u884c deduce\u3002</p> <p>\u8003\u8651\u4ee5\u4e0b\u4e24\u6761 rules\uff1a</p> <ul> <li><code>A(x) &lt;- B(y), x &gt; y.</code></li> <li><code>A(x) &lt;- B(y), !C(x, y).</code></li> </ul> <p>\u53ef\u4ee5\u53d1\u73b0\u5b83\u4eec\u90fd\u6709\u53ef\u80fd\u4f7f\u5f97 A \u79f0\u4e3a\u4e00\u4e2a infinite relation\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u4f7f\u7528 datalog \u60f3\u8981\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u907f\u514d infinite relation\uff0c\u4e5f\u5c31\u56e0\u6b64\u5f15\u5165\u4e86 rule safety \u7684\u6982\u5ff5\u3002</p> <p>\u6ce8\u610f\u5230 EDB \u7684\u5143\u7d20\u662f\u6709\u9650\u4e2a\u7684\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4e00\u4e2a non-negated realtion atom\uff0c\u5b83\u80fd deduce \u7684\u5143\u7d20\u4e5f\u4f1a\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1 head \u4e2d\u7684\u6bcf\u4e00\u4e2a variable \u81f3\u5c11\u88ab\u4e00\u4e2a non-negated atom relation \u7ed9\u9650\u5236\u4f4f\u4e86\u5373\u53ef\u3002\u5728 datalog \u4e2d\uff0c\u53ea\u6709\u6ee1\u8db3 safe rules \u662f\u88ab\u5141\u8bb8\u7684\u3002</p> <p>\u518d\u8003\u8651\u8fd9\u6761 rule\uff1a</p> <ul> <li><code>A(x) &lt;- B(x), !A(x)</code></li> </ul> <p>\u663e\u7136\u8fd9\u662f\u4e00\u6761\u81ea\u76f8\u77db\u76fe\u7684 rule\uff0c\u4f46\u662f\u5b83\u6ee1\u8db3\u4e86 safe rule \u7684\u6761\u4ef6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u53e6\u5916\u6dfb\u52a0\u9650\u5236\u3002\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u8fd9\u79cd contradictory rule \u5fc5\u7136\u4e5f\u662f recursive \u7684\u5f62\u5f0f\uff0c\u5e76\u4e14\u662f\u5728 body \u4e2d\u5bf9 head \u8fdb\u884c negate\uff0c\u56e0\u6b64\uff0c\u5728 datalog \u4e2d\uff0c\u6211\u4eec\u89c4\u5b9a recursion and negation of an atom must be separated\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#execution-of-datalog-programs","title":"Execution of Datalog Programs","text":"<ul> <li>datalog \u4f7f\u7528 datalog engine \u6839\u636e EDB \u548c rules \u8fdb\u884c deduce \u5e76\u8f93\u51fa IDB</li> <li>monotonicity: facts \u53ea\u4f1a\u4ece rules \u4e2d\u4ea7\u751f\u800c\u4e0d\u4f1a\u56e0\u4e3a deduction \u800c\u51cf\u5c11</li> <li>termination: \u901a\u8fc7 rule safety \u4fdd\u8bc1\u4e86\u80fd\u88ab deduce \u7684 facts \u5fc5\u7136\u662f finite \u7684\uff0c\u56e0\u6b64 datalog program \u5fc5\u7136\u662f\u53ef\u4ee5\u7ec8\u6b62\u7684</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#pointer-analysis-via-datalog","title":"Pointer Analysis via Datalog","text":"<p>\u5176\u5b9e\u53ea\u8981\u7528 datalog \u7684\u8bed\u8a00\u63cf\u8ff0\u51fa\u524d\u9762 pointer analysis \u7684 rules \u5373\u53ef\uff0c\u540c\u6837\u4e5f\u9700\u8981\u8003\u8651\u4e00\u4e9b\u7ec6\u8282\u4ee5\u53ca\u6bcf\u4e2a atom \u7684 arguments \u8981\u5982\u4f55\u8bbe\u8ba1\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Datalog/#taint-analysis-via-datalog","title":"Taint Analysis via Datalog","text":"<p>\u4f7f\u7528 datalog \u6765\u5b9e\u73b0 program analysis \u6709\u4ee5\u4e0b\u4f18\u70b9\u548c\u7f3a\u70b9\uff1a</p> <ul> <li>pros</li> <li>\u7b80\u6d01\u3001\u53ef\u8bfb\u6027\u9ad8</li> <li>\u5bb9\u6613\u5b9e\u73b0\uff0c\u5199 bug \u7684\u6982\u7387\u4e5f\u5c0f\u5f88\u591a</li> <li>off-the-shelf optimized datalog engines \u53ef\u4ee5\u8ba9\u4f60\u5c11\u8003\u8651\u4e00\u4e9b\u4f18\u5316\u4e0a\u7684\u7ec6\u8282\uff0cmake your life easier</li> <li>cons</li> <li>\u8868\u8fbe\u80fd\u529b\u6709\u9650\uff0c\u67d0\u4e9b logics \u5f88\u96be\u7528 datalog \u8868\u793a\u751a\u81f3\u6839\u672c\u8868\u793a\u4e0d\u4e86</li> <li>datalog engine \u4f5c\u4e3a\u4e00\u4e2a black box \u7684\u5b58\u5728\u4f7f\u5f97\u6211\u4eec\u5f88\u96be\u7528\u66f4\u4f18\u79c0\u3001\u66f4\u6709\u9488\u5bf9\u6027\u7684 algorithm \u6765\u5b9e\u73b0\u66f4\u4f18\u8d8a\u7684\u6027\u80fd</li> </ul> <ol> <li> <p>David Maier, K. Tuncay Tekle, Michael Kifer, and David S. Warren, \"Datalog: Concepts, History, and Outlook\". Chapter, 2018.\u00a0\u21a9</p> </li> </ol>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/","title":"Interprocedural Analysis","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Interprocedural Analysis \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#motivation","title":"Motivation","text":"<p>\u4e3a\u4e86\u5904\u7406 method calls\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u6700 conservative assumptions \u6765\u76f4\u63a5\u4e0d\u7ba1\u8fd9\u4e2a method \u7684\u5177\u4f53\u5f62\u6001\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u4ea7\u751f\u5f88\u5927\u7684 imprecision\uff0c\u4e8e\u662f\uff0c\u9488\u5bf9 method calls \u8fd9\u79cd\u7279\u6b8a\u5f62\u6001\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a Interprocedural Analysis\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#call-graph-construction-cha","title":"Call Graph Construction (CHA)","text":"<p>call graph: a representation of calling relationships in the program.</p> <p>\u5bf9\u4e8e OOPLs\uff0ccall graph construction \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u6cd5\uff1a</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#method-call","title":"Method Call","text":"<p>\u5728 Java \u4e2d\uff0c\u6709 3 \u4e2d method calls\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p> <p>\u5176\u4e2d virtual call \u662f\u6700\u5927\u7684\u96be\u70b9\u4e5f\u662f call graph construction \u7684\u91cd\u70b9\u3002</p> <p>\u5728 run-time\uff0cvirtual call \u57fa\u4e8e\u4ee5\u4e0b\u4e24\u70b9\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li>type of the receiver object \\(\\to c\\)</li> <li>method signature(identifier of a method) at the call site: <code>&lt;C: T foo(P, Q, R)&gt;</code> \\(\\to m\\)</li> <li>signature = class type(C) + method name(foo) + descriptor(T, P, Q, R)</li> <li>descriptor: return type + parameter types</li> </ul> <p>\u6211\u4eec\u4f7f\u7528 \\(Dispatch(c, m)\\) \u51fd\u6570\u6765\u63cf\u8ff0 run-time \u65f6 virtual call \u7684 dispatch \u8fc7\u7a0b\uff0c\u5b9e\u9645\u5c31\u662f\u9012\u5f52\u5411 parent \u5bfb\u627e\u5bf9\u5e94\u7684 method call \u7684\u8fc7\u7a0b\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#class-hierarchy-analysis","title":"Class Hierarchy Analysis","text":"<p>class hierarchy analysis (CHA) \u662f\u4e00\u79cd\u7528\u6765\u89e3\u51b3 method call \u7684\u65b9\u6cd5\uff0c\u5b83\u9700\u8981\u6574\u4e2a\u7a0b\u5e8f\u7684 class hierarchy information\uff0c\u5e76\u57fa\u4e8e declared type of receiver variable (\\(a\\)) of call site \u548c \\(a\\) \u53ef\u80fd\u6307\u5411\u4efb\u610f\u5b50\u7c7b\u6216\u7236\u7c7b\u7684\u5047\u8bbe\u6765\u89e3\u51b3 virtual call\u3002</p> <p></p> <p>CHA \u53ea\u8003\u8651 declared type of receiver variable at the call-site \u548c\u5b83\u7684 inheritance hierarchy\uff0c\u5b8c\u5168\u5ffd\u7565 data- he control-flow \u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u5b83\u5177\u6709 fast \u7684\u4f18\u52bf\u4e5f\u6709 imprecision \u7684\u52a3\u52bf\uff0c\u5b83\u7684\u4e00\u4e2a\u8fd0\u7528\u573a\u666f\u5c31\u662f IDEA\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#call-graph-construction","title":"Call Graph Construction","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#interprocedural-control-flow-graph","title":"Interprocedural Control-Flow Graph","text":"<p>CFG \u5c55\u793a\u7684\u53ea\u662f\u4e00\u4e2a individual method \u7684 structure\uff0c\u800c ICFG \u5219\u662f\u5728 CFG \u7684\u57fa\u7840\u4e0a\u52a0\u5165\u4e86 call edges, return edges \u6765\u5c55\u793a\u6574\u4e2a\u7a0b\u5e8f\u7684 structure\u3002</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u56fe\u4e2d\u9ec4\u8272\u90e8\u5206\u7684\u8fb9\u8fde\u63a5\u4e86 call edge \u548c return edge \u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8ba9\u5f53\u524d CFG \u4e2d\u7684 data-flow \u4fe1\u606f\u53ef\u4ee5\u76f4\u63a5\u6d41\u5411\u4e0b\u4e00\u4e2a BB \u800c\u4e0d\u662f\u4ece call edge \u7136\u540e\u7ecf\u8fc7\u4e00\u5927\u6bb5\u5197\u4f59\u7684\u8def\u5f84\u624d\u5230\u8fbe\u4e0b\u4e00\u4e2a BB\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Interprocedural%20Analysis/#interprocedural-data-flow-analysis","title":"Interprocedural Data-Flow Analysis","text":"<p>interprocedural data-flow analysis \u5c31\u662f\u57fa\u4e8e ICFG \u5bf9\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u5206\u6790\u3002\u76f8\u6bd4\u4e8e intraprocedural \u7684 CFG\uff0cICFG \u52a0\u5165\u4e86 call \u548c return edges\uff0c\u76f8\u5e94\u7684 transfer function \u4e5f\u8981\u4ece node transfer \u52a0\u4e0a edge transfer\u3002</p> <ul> <li>call edge transfer: transfer data flow from call site to the entry node of callee</li> <li>return edge: transfer: transfer data flow from the exit node of the callee to the return site</li> </ul> <p>\u5bf9\u4e8e intraprocedural \u7684 constant propagation\uff0cinterprocedural \u7684 node transfer function \u53ea\u5728 call nodes \u4e0a\u6709\u6240\u4e0d\u540c\uff1a\u76f8\u6bd4\u4e8e\u76f4\u63a5\u5c06 LHS variable \u8bbe\u7f6e\u4e3a NAC\uff0c\u6211\u4eec\u5148\u5c06\u8fd9\u4e2a variable kill \u6389\uff0c\u7136\u540e\u5c06\u5176 flow \u5230 edge transfer\uff0c\u6700\u540e\u7ecf\u7531 return edge transfer \u8fdb\u884c\u5408\u5e76\u3002</p> <p>in summary:</p> <ul> <li>node transfer</li> <li>call nodes: identity</li> <li>other nodes: same as intraprocedural</li> <li>edge transfer</li> <li>normal edges: identity</li> <li>call-to-return edges: kill the LHS variable, then propagate others</li> <li>call edges: pass argument values</li> <li>return edges: pass return values</li> </ul> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a interprocedural data-flow analysis \u7684 example:</p> <p></p> <p>\u518d\u4e0e intraprocedural data-flow analysis \u8fdb\u884c\uff0c\u5bf9\u6bd4\uff0c\u5f88\u663e\u7136 interprocedural \u7684\u7ed3\u679c\u662f\u66f4 precise \u7684\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/","title":"Pointer Analysis","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Pointer Analysis \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#introduction","title":"Introduction","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#motivation","title":"Motivation","text":"<p>CHA \u53ea\u5173\u6ce8 class hierarchy \u5b58\u5728\u5f88\u5927\u7684\u5c40\u9650\u6027\uff0c\u5728\u5f62\u5982 <code>Number n = new One()</code> \u7684\u58f0\u660e\u540e\u8c03\u7528 n \u7684\u67d0\u4e2a method \u4f1a\u5f97\u5230\u591a\u4e2a call target\uff0c\u5b9e\u9645\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a target \u662f\u771f\u7684\uff0c\u540c\u65f6\u8fd0\u7528 constant propagation \u4f1a\u5f97\u5230 NAC \u7684\u7ed3\u679c\uff0c\u662f inefficient \u4e14 imprecise \u7684\u3002</p> <p>\u800c pointer analysis \u662f\u57fa\u4e8e point-to relation \u7684\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u8ff0\u60c5\u51b5\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#introduction-to-pointer-analysis","title":"Introduction to Pointer Analysis","text":"<p>pointer analysis \u662f\u4e00\u4e2a fundamental \u7684 analysis\uff0c\u5bf9\u4e8e OOPL\uff0c\u5b83\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u4e00\u4e2a\u6307\u9488\u53ef\u80fd\u6307\u5411\u54ea\u4e9b object\uff0c\u540c\u6837\u4e5f\u662f\u4e3a\u4e86 safety\uff0c\u4f7f\u7528\u7684\u662f\u4e00\u79cd may-analysis (over-approximation)\u3002</p> <p></p> <p>alias analysis \u89e3\u51b3\u7684\u95ee\u9898\u662f\u4e24\u4e2a\u6307\u9488\u662f\u5426\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a object\uff0c\u53ef\u4ee5\u4ece pointer analysis \u4e2d\u63a8\u5bfc\u5f97\u51fa\u3002</p> <p>\"Pointer analysis is one of the most fundamental static program analyses, on which virtually all others are built.\"<sup>1</sup></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#key-factors-of-pointer-analysis","title":"Key Factors of Pointer Analysis","text":"<p>pointer analysis \u662f\u4e00\u4e2a\u8f83\u4e3a\u590d\u6742\u7684\u7cfb\u7edf\u6027\u7684\u5206\u6790\uff0c\u4e0d\u540c\u7684 factors \u4f1a\u5f71\u54cd\u6574\u4e2a\u7cfb\u7edf\u7684 efficiency \u548c precision\u3002</p> <p>factors \u4e3b\u8981\u6709\u56db\u79cd\uff1aheap abstraction\u3001context sensitivity\u3001flow sensitivity\u3001analysis scope\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#heap-abstraction","title":"Heap Abstraction","text":"<p>heap abstraction \u89e3\u51b3\u7684\u662f how to model heap memory \u7684\u95ee\u9898\u3002</p> <p>\u5728 dynamic execution \u4e2d\uff0c\u5806\u6808\u5927\u5c0f\u53ef\u80fd\u662f unbounded \u7684\uff08\u4f8b\u5982 non-tail-recursion\uff09\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u5c06 dynamically allocated\u3001unbounded concrete objects \u4f9d\u7167\u5b83\u4eec\u7684\u4e00\u4e9b\u5171\u6027\u62bd\u8c61\u4e3a finite abstract objects\u3002</p> <p><sup>2</sup></p> <p>\u89e3\u51b3\u65b9\u5f0f\u4e3b\u8981\u5206\u4e3a\u4e24\u5927\u6d41\u6d3e\uff1astore baesd \u548c storeless\uff0c\u5176\u4e2d store based model \u4e0b\u7684 allocation sites \u65b9\u6cd5\u4f7f\u7528\u6700\u4e3a\u5e7f\u6cdb\u3002</p> <p>allocation-site \u4f9d\u7167 allocation site \u6765\u8fdb\u884c abstract\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fdb\u884c allocate \u7684\u4ee3\u7801\u6240\u5728\u4f4d\u7f6e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5176\u4e2d \\(o_2\\) \u8868\u793a\u7b2c\u4e8c\u884c\u7684 allocate \u7684 object\uff1a</p> <p></p>  Why Allocation-Site  \u6bcf\u4e00\u6b21 allocation \u5fc5\u7136\u5bf9\u5e94\u4e00\u4e2a allocation site\uff0c\u800c allocation sites \u5fc5\u7136\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f9d\u636e\u8fd9\u4e2a\u5171\u6027\u6765\u8fdb\u884c abstract\u3002","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#context-sensitivity","title":"Context Sensitivity","text":"<p>context sensitivity \u89e3\u51b3\u7684\u662f how to model calling contexts \u7684\u95ee\u9898\u3002</p> Context-sensitive Context-insensitive Distinguish different calling contexts of a method Merge all calling contexts of a method Analyze each method multiple times, once for each context Analyze each method once <p>context-sensitive \u662f\u975e\u5e38\u6709\u7528\u7684\u6280\u672f\uff0c\u800c context-insensitive \u5219\u662f\u63d0\u9ad8\u4e86 efficiency \u4f46\u662f\u4e22\u6389\u4e86 precision \u7684\u6280\u672f\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#flow-sensitivity","title":"Flow Sensitivity","text":"<p>flow sensitivity \u89e3\u51b3\u7684\u662f how to model control flow \u7684\u95ee\u9898\u3002</p> Flow-sensitive Flow-insensitive Respect the execution order of the statements Ignore the control-flow order, treat the program as a set of unordered statements Maintain a map of points-to relations at each program location Maintain one map of points-to relations for the whole program  \u7531\u4e8e flow-insensitive \u5ffd\u7565\u4e86 statements \u7684 order\uff0c\u6240\u4ee5\u4e0b\u56fe\u4e2d\u5bf9 s \u7684\u6c42\u89e3\u6709\u4e24\u4e2a\u503c\uff08\u6a59\u8272\uff09\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e3a false positive\u3002  ![](https://fastly.jsdelivr.net/gh/f1a3h/imgs/20231217102544.png)  <p>\u5bf9\u4e8e C \u8bed\u8a00\uff0cflow-sensitive \u662f\u5341\u5206\u6709\u6548\u7684\u6280\u672f\uff0c\u4f46\u662f\u5bf9\u4e8e Java\uff0c\u76ee\u524d\u6ca1\u6709\u8bc1\u636e\u8868\u660e flow-sensitive \u660e\u663e\u4f18\u4e8e flow-insensitive\uff0c\u5e76\u4e14 flow-sensitive \u7684\u5f00\u9500\u8f83\u5927\uff0c\u6240\u4ee5\u5bf9\u4e8e Java \u901a\u5e38\u9009\u62e9\u540e\u8005\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#analysis-scope","title":"Analysis Scope","text":"<p>analysis scope \u89e3\u51b3\u7684\u662f what parts of program should be analyzed \u7684\u95ee\u9898\u3002</p> Whole-program Demand-driven Compute points-to information for all pointers in the program Only compute points-to information for the pointers that may affect specific sites of interest (on demand) Provide information for all possible clients Provide information for specific clients <p>\u5728 demand-driven \u4e2d\u5bf9\u7279\u5b9a clients \u7684\u6c42\u89e3\u53ef\u80fd\u9700\u8981 traverse \u6574\u4e2a program \u7684\u5f88\u5927\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u4e00\u90e8\u5206 clients \u7684\u6c42\u89e3\u4f9d\u8d56\u4e8e\u975e demanded clients \u7684\u6c42\u89e3\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a demand-driven \u7684 efficiency \u5e76\u4e0d\u89c1\u5f97\u4f18\u79c0\u591a\u5c11\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#pointer-analysis-in-this-course","title":"Pointer Analysis in This Course","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#concerned-statements","title":"Concerned Statements","text":"<p>\u5728 pointer analysis \u4e2d\uff0c\u6211\u4eec\u53ea\u5173\u6ce8 pointer-affecting statements\u3002</p> <p>\u5728 Java \u4e2d\uff0cpointers \u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>local variable: <code>x</code></li> <li>static field: <code>C.f</code> \\(\\leftarrow\\) sometimes referred as global variable</li> <li>instance field: <code>x.f</code> \\(\\leftarrow\\) modeled as an object with a field</li> <li>array element: <code>array[i]</code> \\(\\leftarrow\\) ignore indexes. modeled as an object with a single field (may point to any value in array)    \u7531\u4e8e\u5728\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\uff0carray \u7684\u4e0b\u6807\u5f80\u5f80\u662f\u4ee5\u53d8\u91cf\u7684\u5f62\u5f0f\u5728\u5faa\u73af\u4e2d\u8fdb\u884c\u8bbf\u95ee\u7684\uff0c\u8fd9\u5728 static analysis \u4e2d\u662f\u65e0\u6cd5\u8fdb\u884c\u5206\u6790\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5ffd\u7565\u4e0b\u6807\u62bd\u8c61\u4e3a\u4e00\u4e2a object with a single field \u8fdb\u884c may-analysis\u3002    ![](https://fastly.jsdelivr.net/gh/f1a3h/imgs/20231217105238.png)    </li> </ul> <p>pointer-affecting statement \u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>new: <code>x = new T()</code></li> <li>assign: <code>x = y</code></li> <li>store: <code>x.f = y</code></li> <li>load: <code>y = x.f</code></li> <li>call: <code>r = x.k(a, ...)</code> \\(\\leftarrow\\) Complex memory-accesses will be converted to three-address code</li> <li>focus on virtual call</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#foundations","title":"Foundations","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#rules","title":"Rules","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#how-to-implement-pointer-analysis","title":"How to Implement Pointer Analysis","text":"<p>pointer analysis \u7684\u672c\u8d28\u662f\u5728 pointers \u4e4b\u95f4 propagate point-to information\uff0c\u6240\u4ee5\u5b83\u7684\u5173\u952e\u5728\u4e8e\u5f53 \\(pt(x)\\) \u6539\u53d8\u65f6\uff0c\u8981\u5982\u4f55\u5c06 changed part propagate \u5230\u76f8\u5173\u7684 pointers\u3002</p> <p>Andersen style analysis: Pointer analysis as solving a system of inclusion constraints for pointers.<sup>3</sup></p> <p>\u7c7b\u4f3c\u4e8e\u524d\u9762 control-flow \u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u6211\u4eec\u540c\u6837\u6784\u5efa\u4e00\u5f20\u6709\u5411\u56fe\uff0cpoint-to information \u53ef\u4ee5\u901a\u8fc7\u6709\u5411\u8fb9\u8fdb\u884c\u6d41\u52a8\u4ece\u800c\u66f4\u65b0\u7ed3\u70b9\u4fe1\u606f\u3002</p> <ul> <li>nodes: Pointer = \\(V\\cup (O\\times F)\\)</li> <li>edges: Ponter \\(\\times\\) Pointer (may flow to)</li> </ul> <p></p>  \u6ce8\u610f\u524d\u9762\u63d0\u5230\u7684\u8fd9\u91cc\u7684 pointer analysis \u662f flow-insensitive \u7684\u3002  <p>\u5bf9\u4e8e <code>c.f = a</code> \u8fd9\u79cd\u6d89\u53ca \\(o_i.f\\) \u7684\u8bed\u53e5\uff0c \\(o_i.f\\) \u624d\u662f\u771f\u6b63\u7684 \"variable\"\uff0c\u56e0\u6b64\u5728\u56fe\u4e0a\u4f7f\u7528 \\(o_i.f\\) \u8868\u793a\u4e00\u4e2a node\u3002</p> <p>\u6784\u5efa\u597d PGF \u4e4b\u540e\uff0cpointer analysis \u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97 PGF \u4e0a\u7684 transitive closure \u5f97\u5230\u3002</p> <p>\u7531\u4e8e\u524d\u9762\u63d0\u5230\u7684 \\(o_i.f\\) \u5728\u56fe\u4e0a\u7684\u8868\u793a\u95ee\u9898\uff08variable \u548c \\(o_i.f\\) \u4e4b\u95f4\u8fde\u8fb9\u6216\u8005 \\(o.f\\) \u4e4b\u95f4\u8fde\u8fb9\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765 build PFG \u548c propagate point-to information on PFG \u4e24\u8005\u662f\u4e92\u76f8\u4f9d\u8d56\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cPGF \u662f\u5728 pointer analysis \u7684\u8fc7\u7a0b\u4e2d dynamically updated\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#alogorithms","title":"Alogorithms","text":"<p>\u76ee\u524d\u7684\u8fd9\u4e2a context-insensitive \u7684\u7b97\u6cd5\u8fd8\u662f\u6bd4\u8f83 trivial \u7684\uff0c\u4ecd\u7136\u662f\u4e00\u4e2a SPFA\uff08\u90a3\u4e2a\u5df2\u7ecf\u6b7b\u6389\u4e86\u7684\u7b97\u6cd5\uff09\u7684\u601d\u8def\uff0c\u4e0d\u8fc7\u8fd9\u91cc\u5c06 4 \u4e2a rules \u5206\u522b\u8fdb\u884c\u5904\u7406\uff0canalysis \u548c build PGF \u7684\u8fc7\u7a0b\u662f\u76f8\u4e92\u4f9d\u8d56\u7684\uff0canalysis \u7684\u521d\u59cb\u5316\u5bf9\u5e94 <code>x = new T()</code> rule\uff0c\u800c build PGF \u7684\u521d\u59cb\u5316\u5bf9\u5e94 <code>x = y</code> rule\uff0c\u5904\u7406\u5b8c\u4e4b\u540e\u5229\u7528 worklist \u5bf9 <code>x.f = y</code> \u548c <code>y = x.f</code> \u4e00\u8fb9 analysis \u4e00\u8fb9 build\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u7684 differencial propagation \\(\\Delta=pts-pt(n)\\) \uff0c\u8fd9\u662f\u4e00\u79cd\u5728 program analysis \u4e2d\u5e38\u89c1\u4e14\u975e\u5e38\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#pointer-analysis-with-method-calls","title":"Pointer Analysis with Method Calls","text":"<p>\u663e\u7136\uff0cinter-procedural pointer analysis \u9700\u8981\u5efa\u7acb call graph\u3002\u5728 call graph \u7684\u5efa\u7acb\u4e0a\uff0cCHA \u6839\u636e declared type of \\(a\\) \u6765\u89e3\u51b3 call targets\uff0c\u800c pointer analysis \u6839\u636e \\(pt(a)\\) \u6765\u5224\u65ad\u3002\u7531\u524d\u9762\u5bf9 CHA \u7684\u5206\u6790\u53ef\u4ee5\u77e5\u9053\uff0cCHA \u4f1a\u5f15\u5165 spurious call graph edges \u548c point-to relations\u3002</p> <p>PFG \u4e2d\u5bf9\u4e8e call statement \u7684 rule \u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u7531\u4e8e\u5728 \\(pt(x)\\) \u4e2d\u4e0d\u540c\u7684 \\(o_i\\) \u5bf9\u5e94\u7684 method \u53ef\u80fd\u4e0d\u540c\uff0c\u6240\u4ee5 PFG \u4e2d\u4e0d\u4f1a\u6dfb\u52a0 \\(x\\to m_{this}\\) \u8fd9\u6761\u8fb9\u3002</p> <p>\u4e0e PFG \u7684 build \u4e00\u6837\uff0ccall graph \u548c pointer analysis \u4e5f\u662f\u4e92\u76f8\u4f9d\u8d56\u3001\u540c\u65f6\u8fdb\u884c\u7684\uff08\u4e5f\u88ab\u79f0\u4e3a on-the-fly call graph construction\uff09\u3002\u5728 pointer analysis \u4e2d\uff0ccall graph \u5f62\u6210\u7684\u662f\u4e00\u4e2a\u300creachable world\u300d\uff0c\u9664\u4e86 entry methods \u4ee5\u5916\u6240\u6709\u7684 reachable methods \u90fd\u662f\u5728 pointer analysis \u7684\u8fc7\u7a0b\u4e2d\u9010\u6e10\u53d1\u73b0\u7684\uff0c\u5e76\u4e14\u6211\u4eec\u53ea\u4f1a\u5206\u6790 reachable methods\u3002</p> <p>pointer analysis with method calls \u7684\u7b97\u6cd5\u4e0e\u524d\u9762\u7684\u7b97\u6cd5\u5927\u4f53\u76f8\u540c\uff0c\u9664\u4e86\u56fe\u4e2d\u7684\u9ec4\u8272\u90e8\u5206\u662f\u65b0\u52a0\u5165\u7684\u3002</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#context-sensitivity_1","title":"Context Sensitivity","text":"","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#introduction_1","title":"Introduction","text":"<p>\u5728\u52a8\u6001\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a method \u53ef\u80fd\u5728\u4e0d\u540c\u7684 context \u4e2d\u88ab call\uff0c\u4f7f\u7528 context insensitive (C.I.) \u7684\u5206\u6790\u65b9\u6cd5\u4f1a\u4f7f\u5f97\u4e0d\u540c\u4e0a\u4e0b\u6587\u4e2d\u7684\u4e0d\u540c\u7684 object \u6d41\u5165\u4e00\u4e2a method \u9020\u6210 spurious data flow\uff0c\u4e8e\u662f\u6211\u4eec\u9700\u8981\u5f15\u5165 context sensitive (C.S.) \u7684\u5206\u6790\u65b9\u6cd5\u6765\u63d0\u5347\u7cbe\u5ea6\u3002</p> <p>C.S. \u533a\u5206\u4e0a\u4e0b\u6587\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\uff0c\u4e0b\u9762\u4ee5 call site \u65b9\u6cd5\u4e3a\u4f8b\u3002\u5728 C.S. \u4e2d\uff0c\u6700\u76f4\u63a5\u7684\u5f15\u5165\u4e0a\u4e0b\u6587\u7684\u5206\u6790\u65b9\u5f0f\u662f clone-based context sensitive analysis\uff1a\u5c06 variables \u548c methods \u901a\u8fc7 contexts \u8fdb\u884c qualify\uff0c\u5728\u6bcf\u4e00\u4e2a context \u4e0b\u90fd\u7ef4\u62a4 variables \u548c methods \u7684 clone\u3002</p> <p>OOPs \u901a\u5e38\u662f heap-intensive \u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a object \u4e5f\u7528 context (heap-context) \u8fdb\u884c qualify\uff0c\u901a\u5e38\u4f7f\u7528\u88ab allocate \u65f6\u7684 context \u4f5c\u4e3a\u6807\u8bc6\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#rules_1","title":"Rules","text":"<p>\u5728 context sensitive \u7684\u5206\u6790\u7684\u8868\u793a\u65b9\u6cd5\u4e2d\uff0c\u6bcf\u4e2a domain \u90fd\u52a0\u5165\u4e86\u4e00\u7ef4 context\u3002</p> <p></p> <p></p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5bf9 call \u7684\u5904\u7406\u4e2d\u52a0\u5165\u4e86\u4e00\u4e2a <code>Select(c, l, c': o_i)</code> \u51fd\u6570\uff0c\u57fa\u4e8e call site \\(l\\) \u65f6\u7684\u4fe1\u606f\u6765\u9009\u62e9\u5bf9\u5e94\u7684 context</p> <p></p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#algorithms","title":"Algorithms","text":"<p>context sensitive pointer analysis \u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u5728 C.I. \u7684\u57fa\u7840\u4e0a\u52a0\u5165\u4e00\u7ef4\u4fe1\u606f\u4f5c\u4e3a context\uff0c\u540c\u65f6\u5728\u5904\u7406 method call \u65f6\u9700\u8981\u4f7f\u7528\u4e00\u4e2a select \u51fd\u6570\u9009\u53d6\u8fd9\u4e2a method \u7684 context\u3002</p> <p></p> <p>\u4ee5\u4e0a\u8fd9\u5f20\u56fe\u662f\u4e00\u4e2a example\uff0c\u5982\u679c\u6211\u4eec\u5c06\u7b2c\u4e8c\u884c\u7684 <code>y = id(n2)</code> \u6539\u6210 <code>x = id(n2)</code> \u90a3\u4e48\u4f7f\u7528 C.S. \u65b9\u6cd5\u5206\u6790\u5f97\u5230\u7684 i \u53ef\u80fd\u7684 pointers \u4e2d\u4ecd\u7136\u4f1a\u6709 spurious target\uff0c\u8fd9\u79cd\u95ee\u9898\u5bf9\u5e94\u7684\u5219\u662f flow sensitivity\u3002</p> <p>C.S. \u7684\u7b97\u6cd5\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa C.S. \u7684\u5904\u7406\u65b9\u6cd5\u548c C.I. \u7684\u5904\u7406\u65b9\u6cd5\u51e0\u4e4e\u4e00\u81f4\uff0c\u800c <code>AddEdge</code> \u548c <code>Propagate</code> \u66f4\u662f\u4e00\u6837\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#context-sensitivity-variants","title":"Context Sensitivity Variants","text":"<p>context sensitivity variants \u53ef\u4ee5\u6709\u5f88\u591a\u79cd\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u4ecb\u7ecd\u4e86 call-site\u3001object\u3001type \u8fd9\u4e09\u79cd\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#call-site-sensitivity4","title":"Call-Site Sensitivity<sup>4</sup>","text":"<p>\u5728 call-site sensitivity \u4e2d\uff0ccontext \u88ab\u770b\u4f5c\u662f\u4e00\u7cfb\u5217 call sites \u7ec4\u6210\u7684 stack (call chain)\uff0c\u6bcf\u6b21\u8fdb\u5165\u4e00\u4e2a method call \u5c31\u5c06\u8fd9\u4e2a call site \u52a0\u5165 stack \u4e2d\u7136\u540e\u4f20\u5165\u8fd9\u4e2a method\uff08\u76f8\u5f53\u4e8e select \u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u539f\u6765\u7684 call chain \u52a0\u4e0a\u5f53\u524d\u7684 call site\uff09\u3002</p> <p>call-site sensitivity \u4e5f\u88ab\u79f0\u4e3a call-string sensitivity \u6216\u8005 \\(k\\)-CFA\u3002</p> <p>\u5f53\u9047\u5230\u975e tail-recursion \u7684\u9012\u5f52\u51fd\u6570\u65f6\uff0ccall-site sensitivity \u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e32\u5f88\u957f\u7684 call chain\uff0c\u751a\u81f3\u53ef\u80fd\u4f1a\u51fa\u73b0 unbounded \u7684 call chain \u4ece\u800c\u5bfc\u81f4 PA \u65e0\u6cd5 terminate\u3002\u4f46\u662f\uff0c\u771f\u6b63\u8d77\u4f5c\u7528\u7684 call sites \u7ec8\u7a76\u662f bounded \u7684\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u8fc7\u9650\u5236 call chain \u7684\u6700\u5927\u957f\u5ea6\uff08\\(k\\)\uff09\u6765\u907f\u514d\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002</p> <p>\u5728\u5b9e\u9645\u4e2d\uff0c\\(k\\) \u5f80\u5f80\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\uff08\\(\\le 3\\)\uff09\uff0c\u5e76\u4e14 method context \u548c heap context \u7684 \\(k\\) \u53ef\u80fd\u4e0d\u540c\uff0c\u4f8b\u5982 \\(k_{\\mathrm{method}}=2, k_{\\mathrm{heap}}=1\\)\u3002</p>  C.I. vs. C.S.(1-Call-Site)   ![](https://fastly.jsdelivr.net/gh/f1a3h/imgs/20231226171830.png)","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#object-sensitivity5","title":"Object Sensitivity<sup>5</sup>","text":"<p>\u5728 object sensitivity \u4e2d\uff0c\u5c06\u4e00\u7cfb\u5217\u7684\u4f7f\u7528 allocation site \u8868\u793a\u7684 objects \u4f5c\u4e3a context\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a method call \u5c31\u5c06 receiver object \u52a0\u5230\u5b83\u7684 heap context \u540e\u9762\u4f5c\u4e3a\u8fd9\u4e2a method \u7684 context\u3002</p> <p>\u4e0e call-site sensitivity \u4e0d\u540c\u7684\u662f\uff0cobject sensitivity \u9488\u5bf9\u7684\u662f\u6d41\u5165\u6bcf\u4e2a object \u7684 data\uff0c\u53ef\u4ee5\u8bf4 object sensitivity \u662f\u9488\u5bf9 OOPLs \u8bbe\u8ba1\u7684\u65b9\u6cd5\uff0c\u7531\u4e8e\u4f7f\u7528 allocation site \u6765\u8bc6\u522b\u4e00\u4e2a object\uff0c\u6240\u4ee5\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u79cd allocation-site sensitivity\u3002</p>  C.S. (1-Object) vs. C.S. (1-Call-Site)   ![](https://fastly.jsdelivr.net/gh/f1a3h/imgs/20231226173054.png)  <p>\u4e0d\u540c\u60c5\u51b5\u4e0b\u4ed6\u4eec\u7684 precision \u4e5f\u4f1a\u4e0d\u540c\uff0c\u56e0\u6b64\u8fd9\u4e24\u79cd\u65b9\u6cd5\u4e0d\u80fd\u76f4\u63a5\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f46\u662f\u5728\u5927\u91cf\u7684\u6570\u636e\u4e4b\u4e0b\u8fdb\u884c\u5bf9\u6bd4\uff0cobject sensitivity \u5bf9\u4e8e Java \u8fd9\u6837\u7684 OOPLs \u662f\u8981\u4f18\u4e8e call-site sensitivity \u7684\uff0c\u8003\u8651\u5230 Java \u7684\u7279\u6027\uff0c\u5e76\u4e14 object sensitivity \u9488\u5bf9\u7684\u662f OOPLs\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662f\u5f88 intuitive \u7684\u561b\u3002\uff08\u4e5f\u8bb8\u53ef\u4ee5\u8ba4\u4e3a\u662f object sensitivity \u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4e22\u5931\u4e86 generalization \u4f46\u662f\u6362\u6765\u4e86\u5728 OOPLs \u4e0a\u66f4\u597d\u7684\u6027\u80fd\ud83e\udd14\uff09</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#type-sensitivity6","title":"Type Sensitivity<sup>6</sup>","text":"<p>type sensitivity \u5c06 context \u770b\u4f5c\u662f\u4e00\u7cfb\u5217\u5305\u542b\u4e86 allocation-site of the receiver object \u7684 type \u7684\u96c6\u5408\uff0c\u5f88\u663e\u7136\u5b83\u7684\u7cbe\u5ea6\u4e00\u5b9a\u662f\u4e25\u683c\u5c0f\u4e8e\u7b49\u4e8e object sensitivity \u7684\uff0c\u76f8\u5f53\u4e8e\u4e00\u79cd\u5c06\u5728\u540c\u4e00\u4e2a class \u4e0b allocate \u7684 objects \u5408\u5e76\u4e86\u7684\u4e00\u79cd object sensitivity\uff0c\u4f46\u662f\u5c3d\u7ba1\u4e22\u5931\u4e86\u7cbe\u5ea6\uff0c\u5b83\u6362\u6765\u4e86\u66f4\u597d\u7684\u901f\u5ea6\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Pointer%20Analysis/#call-site-vs-object-vs-type-sensitivity","title":"Call-Site vs. Object vs. Type Sensitivity","text":"<p><sup>7</sup></p> <p>\u4e09\u8005\u5bf9\u6bd4\u4e4b\u4e0b\uff0c\u53ef\u4ee5\u770b\u51fa type sensitivity \u4ecd\u7136\u662f\u7531\u4e8e call-site sensitivity \u7684\u3002</p> <ul> <li>Precision: object &gt; type &gt; call-site</li> <li>Efficiency: type &gt; object &gt; call-site</li> </ul> <ol> <li> <p>Pointer Analysis - Report from Dagstuhl Seminar 13162. 2013.\u00a0\u21a9</p> </li> <li> <p>Vini Kanvar, Uday P. Khedker, \"Heap Abstractions for Static Analysis\". ACM CSUR 2016.\u00a0\u21a9</p> </li> <li> <p>Lars Ole Andersen, 1994. \"Program Analysis and Specialization for the C Programming Language\". Ph.D. Thesis. University of Copenhagen.\u00a0\u21a9</p> </li> <li> <p>Olin Shivers, 1991. \"Control-Flow Analysis of Higher-Order Languages\". Ph.D. Dissertation. Carnegie Mellon University.\u00a0\u21a9</p> </li> <li> <p>Ana Milanova, Atanas Rountev, and Barbara G. Ryder. \"Parameterized Object Sensitivity for Points-to and Side-Effect Analyses for Java\". ISSTA 2002.\u00a0\u21a9</p> </li> <li> <p>Yannis Smaragdakis, Martin Bravenboer, and Ondrej Lhot\u00e1k. \"Pick Your Contexts Well: Understanding Object-Sensitivity\". POPL 2011.\u00a0\u21a9</p> </li> <li> <p>Yue Li, Tian Tan, Anders M\u00f8ller, and Yannis Smaragdakis. \"A Principled Approach to Selective Context Sensitivity for Pointer Analysis\". TOPLAS 2020.\u00a0\u21a9</p> </li> </ol>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Soundness%20and%20Soundiness/","title":"Soundness and Soundiness","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Soundness and Soundiness \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Soundness%20and%20Soundiness/#soundness-and-soundiness","title":"Soundness and Soundiness","text":"<p>\u524d\u9762\u63d0\u5230 static program analysis \u8ffd\u6c42\u7684 goal \u662f soundness\uff0c\u4f46\u662f\u65e0\u8bba\u662f\u5728\u5b66\u672f\u754c\u8fd8\u662f\u5728\u5de5\u4e1a\u754c\uff0c\u7531\u4e8e\u4e00\u4e9b\u8bed\u8a00\u7684 hard language features \u7684\u5b58\u5728\uff0c\u5bf9\u73b0\u5b9e\u4e16\u754c\u7684\u5927\u578b program \u60f3\u8981\u5b9e\u73b0\u5b8c\u5168\u7684 soundness \u662f\uff08\u76ee\u524d\uff09\u505a\u4e0d\u5230\u7684\u3002</p> <p>Hard-to-analyze features: an aggressively conservative treatment to these features will likely make the analysis too imprecise to scale, rendering the analysis useless.</p> <p>\u4e8e\u662f\uff0c\u4e3a\u4e86\u907f\u514d papers \u4e2d\u5199 soundness \u4f1a\u8bef\u5bfc\u8bfb\u8005\uff0c\u6240\u4ee5\u5f15\u5165\u4e86 soundy \u7684\u6982\u5ff5\uff1aa soundy analysis typically means that the analysis is mostly sound, with well-identified unsound treatments to hard/specific language features.</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Soundness%20and%20Soundiness/#hard-language-feature-java-reflection","title":"Hard Language Feature: Java Reflection","text":"<p>java reflection \u4f1a\u5728 run-time \u5c06 class\u3001method\u3001field \u7b49\u8f6c\u6362\u4e3a metaobject\uff0c\u5e76\u4e14\u7528\u4e00\u4e2a string \u4f5c\u4e3a\u5b83\u4eec\u7684 identifier\uff0c\u5982\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u5728 run-time \u5bf9\u4ee3\u7801\u4f5c\u51fa\u4e00\u4e9b\u6539\u53d8\u4f1a\u4ea7\u751f\u4e00\u4e9b static analysis \u65e0\u6cd5\u9884\u6d4b\u7684\u884c\u4e3a\uff0c\u8fd9\u4e5f\u662f static analysis \u7684\u786c\u4f24\u3002</p> <p></p> <ul> <li>string <code>mName</code> \u65e0\u6cd5\u5206\u6790\uff0c\u90a3\u4e48 <code>m.invoke</code> \u5177\u4f53\u8c03\u7528\u4e86\u54ea\u4e2a\u65b9\u6cd5\u4e5f\u5c31\u65e0\u6cd5\u5f97\u77e5\uff0c\u4e8e\u662f\u5bf9\u67d0\u4e9b\u53ef\u80fd\u7684 method \u7684\u5ffd\u7565\u4f18\u5316\u5f88\u6709\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6211\u4eec\u5c11\u68c0\u6d4b\u5230\u4e00\u4e9b bug</li> <li>\u5728\u8fdb\u884c verification optimization \u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5ffd\u7565 reflection \u4ea7\u751f\u7684\u4f5c\u7528\u7b49\u540c\u4e8e <code>a.fld = a</code> \u7684\u8bed\u53e5 <code>f.set(a, a)</code>\uff0c\u90a3\u4e48\u5728\u5206\u6790 <code>B b = (B) a.fld</code> \u5c31\u4f1a\u5f97\u5230 false negative</li> </ul> <p>\u8003\u8651\u5230 reflection \u4ea7\u751f\u7684\u5f88\u591a\u4e0d\u786e\u5b9a\u884c\u4e3a\u90fd\u662f\u7531\u4e8e string \u5177\u4f53\u503c\u7684\u672a\u77e5\u800c\u5bfc\u81f4\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528 string constant analysis + pointer analysis<sup>1</sup> \u6765\u5b8c\u6210\u5bf9 reflection \u7684\u5206\u6790\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u4e0a\u7684\u5f88\u591a string \u90fd\u662f statically unknown\uff0c\u6240\u4ee5\u8fd9\u79cd\u65b9\u6cd5\u4ecd\u7136\u5177\u6709\u5f88\u5927\u7684\u5c40\u9650\u6027\u3002</p> <p>\u9664\u4e86\u76f4\u63a5\u5bf9 string \u8fdb\u884c\u5206\u6790\uff0c\u6211\u4eec\u8fd8\u5728 usage points \u5bf9\u53ef\u80fd\u7684 reflective targets \u8fdb\u884c\u63a8\u65ad\uff0c\u6982\u62ec\u6765\u8bf4\u5c31\u662f type inference + string analysis + pointer analysis\uff0c\u5b9e\u8df5\u4e0a\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u51c6\u786e\u5ea6\u4e5f\u5f88\u9ad8\u3002<sup>2</sup></p> <p></p> <p>\u4e0d\u4ec5\u4ec5\u662f\u6839\u636e usage point \u65f6\u7684 parameters \u5bf9 method \u8fdb\u884c\u63a8\u65ad\uff0c\u5bf9\u5176\u4ed6\u7684 metaobject \u4e5f\u662f\u6709\u6548\u7684<sup>3</sup>\u3002</p> <p></p> <p>\u53e6\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6839\u636e run-time \u7684\u7279\u6027\u5229\u7528 dynamic analysis \u8f85\u52a9 static analysis<sup>4</sup>\u3002\u5177\u4f53\u4e00\u70b9\u8bf4\u5c31\u662f\u5229\u7528\u4e00\u90e8\u5206\u7a0b\u5e8f\u8fdb\u884c dynamic analysis \u5206\u6790\u5f97\u5230\u7684\u6570\u636e\u8fdb\u884c static analysis\uff0c\u4f46\u662f\u6709\u9650\u7684\u7a0b\u5e8f\u91cf\u5f88\u96be cover \u6240\u6709\u53ef\u80fd\u7684 data\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Soundness%20and%20Soundiness/#hard-language-feature-native-code","title":"Hard Language Feature: Native Code","text":"<p>\u5728 java \u4e2d\u5982\u679c\u60f3\u8981 print\uff0c\u5c31\u9700\u8981\u4e0e OS \u8fdb\u884c\u4ea4\u4e92\uff0c\u4e8e\u662f\u5c31\u4e0d\u5f97\u4e0d\u8c03\u7528\u4e00\u4e9b\u5e95\u5c42\u7684 C/C++ \u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u88ab\u79f0\u4e3a native code\u3002</p> <p>\u7531\u4e8e java \u662f\u8fd0\u884c\u5728 jvm \u4e0a\u7684\uff0c\u6240\u4ee5 jvm \u9700\u8981\u4e00\u4e2a function module \u4f5c\u4e3a interface \u4fbf\u4e8e\u5b83 (jvm) \u4e0e native code \u8c03\u7528\u7684 native libraries \u8fdb\u884c\u4ea4\u4e92\uff0c\u4e5f\u53ef\u4ee5\u4e0e OS \u8fdb\u884c\u4ea4\u4e92\u3001\u590d\u7528\u5df2\u6709\u7684 C/C++ \u4ee3\u7801\uff0c\u8fd9\u4e2a interface \u5c31\u662f JNI\u3002</p> <p></p> <p>\u7531\u4e8e\u6211\u4eec\u7684 analyzer \u9488\u5bf9\u7684\u662f java \u4ee3\u7801\uff0c\u800c native code \u7528\u7684\u662f C/C++ \u4ee3\u7801\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u8fdb\u884c\u5206\u6790\u3002</p> <p>\u76ee\u524d\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u65b9\u6cd5\u662f manually models critical native code\uff0c\u6bd4\u5982\u8c03\u7528 <code>arraycopy</code> \u65b9\u6cd5\u5c31\u5c06\u5176\u6539\u5199\u4e3a java \u8bed\u8a00\u7684\u5faa\u73af\u8d4b\u503c\u8bed\u53e5\u7136\u540e\u518d\u8fdb\u884c\u5206\u6790\u3002</p> <p>\u6700\u8fd1\u7684\u7814\u7a76\u5de5\u4f5c\u6709\u4f7f\u7528 binary scanning \u5728 native code \u4e2d\u8bc6\u522b java calls \u7684<sup>5</sup>\u3002</p> <p>\u6700\u540e\uff0c\u60f3\u8981\u4e86\u89e3\u66f4\u591a soundiness\uff0c\u53ef\u4ee5\u8bbf\u95ee soundiness.org.</p> <ol> <li> <p>Benjamin Livshits, John Whaley, Monica S. Lam. Stanford University, \"Reflection Analysis for Java\". APLAS, 2005.\u00a0\u21a9</p> </li> <li> <p>Yue Li, Tian Tan, Yulei Sui, Jingling Xue. UNSW Sydney, \"Self-Inferencing Reflection Resolution for Java\". ECOOP, 2014.\u00a0\u21a9</p> </li> <li> <p>Yue Li, Tian Tan, Jingling Xue, \"Understanding and Analyzing Java Reflection\". TOSEM, 2019.\u00a0\u21a9</p> </li> <li> <p>Eric Bodden, Andreas Sewe, Jan Sinschek, Hela Oueslati, Mira Mezini. Technische Universit\u00e4t Darmstadt, \"Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders\". ICSE, 2011.\u00a0\u21a9</p> </li> <li> <p>George Fourtounis, Leonidas Triantafyllou, Yannis Smaragdakis, University of Athens, \"Identifying Java Calls in Native Code via Binary Scanning\". ISSTA, 2020.\u00a0\u21a9</p> </li> </ol>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/","title":"Static Analysis for Security","text":"<p>Info</p> <p>\u5357\u4eac\u5927\u5b66\u300c\u8f6f\u4ef6\u5206\u6790\u300d\u8bfe\u7a0b Static Analysis for Security \u90e8\u5206\u7684\u5b66\u4e60\u7b14\u8bb0\u3002</p> <p>security \u6307\u7684\u662f\u5728\u5b58\u5728 adversaries \u7684\u60c5\u51b5\u4e0b\u80fd\u591f\u6210\u529f\u8fbe\u5230\u4e00\u4e9b goals\u3002</p> <p>computer security \u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a topic \u5c31\u662f information flow\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#information-flow-security","title":"Information Flow Security","text":"<p>information flow security \u7684\u76ee\u7684\u5c31\u662f\u963b\u6b62\u901a\u8fc7\u963b\u6b62 unwanted information flow \u6765\u4fdd\u62a4 information security\u3002</p> <p>\u4fdd\u62a4 sensitive data \u7684\u65b9\u5f0f\u4e3b\u8981\u6709 access control \u548c information flow security \u4e24\u79cd\u3002</p> <ul> <li>access control: a standard way</li> <li>\u68c0\u67e5\u7a0b\u5e8f\u662f\u5426\u6709\u6743\u5229 access \u67d0\u4e9b information</li> <li>how information is accessed</li> <li>\u4e0d\u5173\u5fc3\u7a0b\u5e8f\u662f\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b information \u7684</li> <li>information flow security: end-to-end</li> <li>\u8ddf\u8e2a information flow</li> <li>how information is propagated</li> </ul> <p>\"A practical system needs both access and flow control to satisfy all security requirements\" <p>\u2014 D.Denning, 1976</p></p> <p>information flow<sup>1</sup> \u6307\u7684\u662f\u5982\u679c\u6709 information \u4ece variable \\(x\\) \u6d41\u5165 variable \\(y\\)\uff0c\u5c31\u8bf4\u5b58\u5728\u4fe1\u606f\u6d41 \\(x\\to y\\)\u3002</p> <p>\u800c information flow security \u5219\u901a\u8fc7\u5c06 variables \u5206\u4e3a\u4e0d\u540c\u7684 security levels\u3001\u6307\u5b9a\u8fd9\u4e9b levels \u4e4b\u95f4\u54ea\u4e9b information flow \u662f\u5141\u8bb8\u7684\u6765\u8fbe\u5230 safe \u7684\u76ee\u7684\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#security-levels-classes","title":"Security Levels (Classes)","text":"<p>\u4e0d\u540c levels \u7684 classification \u53ef\u4ee5\u88ab\u5212\u5206\u6210\u4e00\u4e2a topo \u56fe\u7684\u7ed3\u6784\uff0c\u66f4\u51c6\u786e\u7684\u8bf4\uff0c\u53ef\u4ee5\u88ab modeled as lattice<sup>2</sup>.</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#information-flow-policy","title":"Information Flow Policy","text":"<p>information flow security \u7528\u6765\u9650\u5236\u5728\u4e0d\u540c\u7684 security levels \u4e4b\u95f4\u7684 information flow\u3002</p> <p>\u4e00\u4e2a\u7ecf\u5178\u7684 policy \u662f noninterference policy<sup>3</sup>\uff0c\u5b83\u8981\u6c42\u901a\u8fc7 low variables \u4e0d\u80fd\u63a8\u65ad\u51fa\u4efb\u4f55 high information\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u7981\u6b62\u4ece high variable \u5230 low variable \u7684 inforrmation flow\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u4fdd\u8bc1 information \u53ea\u4f1a\u5728 lattice \u4e0a\u5411\u4e0a\u8d70\u3002\u4f46\u662f\u5b83\u5141\u8bb8\u4e86 low variable \u5230 high variable \u7684 information flow\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4ecd\u7136\u4e0d\u80fd\u5230\u8fbe\u5b83\u7684\u76ee\u7684\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#confidentiality-and-integrity","title":"Confidentiality and Integrity","text":"<p>confidentiality \u6307\u7684\u662f\u963b\u6b62 secret information \u6cc4\u6f0f\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u7684 noninterference policy \u505a\u5230\u7684\u3002</p> <p>\u800c integrity \u6307\u7684\u662f\u963b\u6b62 untrusted information \u7834\u574f critical information<sup>4</sup>\uff0c\u6709\u5173\u7684\u6700\u5e7f\u6cdb\u7684 vulnerabilities \u7684\u9020\u6210\u539f\u56e0\u5c31\u662f injection errors<sup>5</sup> (SQL injection etc.)\u3002</p> <p>integrity \u7684\u5e7f\u6cdb\u7684\u5b9a\u4e49\u662f\u6307\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ul> <li>correctness: E.g. critical data \u4e0d\u5e94\u8be5\u88ab untrusted data \u7834\u574f</li> <li>completeness (broader than consistency): E.g. \u4e00\u4e2a DBS \u5e94\u8be5\u5b8c\u6574\u4fdd\u5b58\u6574\u4e2a data</li> <li>consistency: E.g. \u4e00\u4e2a\u6587\u4ef6\u4f20\u8f93\u7cfb\u7edf\u4e00\u4e2a\u4fdd\u8bc1 sender \u548c receiver \u4e4b\u95f4\u4f20\u8f93\u7684\u6587\u4ef6\u5185\u5bb9\u662f\u4e00\u81f4\u7684</li> </ul>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#explicit-flows-and-covert-channels","title":"Explicit Flows and Covert Channels","text":"<p>\u901a\u8fc7\u76f4\u63a5 copy \u8fdb\u884c\u7684 information flow \u79f0\u4e3a explicit flow\u3002\u76f8\u5e94\u5730\uff0c\u7531 secret information \u5f71\u54cd\u7684 control flow \u9020\u6210\u7684 information flow \u79f0\u4e3a implicit flow\uff0cimplicit flow \u540c\u6837\u53ef\u4ee5\u4ea7\u751f information leak\u3002</p> <p></p> <p>\u4e0a\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u5b58\u5728\u4e00\u4e2a\u4ece <code>secret</code> \u5230 <code>publik</code> \u7684\u4e00\u4e2a implicit flow \u5e76\u4e14\u4f1a\u9020\u6210 leakage\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u4ece <code>secret</code> \u5230 <code>publik</code> \u7684 data flow\uff0c\u53ef\u4ee5\u770b\u51fa information flow \u548c data flow \u7684\u533a\u522b\u6240\u5728\u3002</p> <p>\u901a\u8fc7\u4e00\u4e2a computing system \u6765 signal information \u7684 mechanisms \u88ab\u79f0\u4e3a channels\u3002\u800c\u76ee\u7684\u4e0d\u662f information transfer \u7684 channels \u88ab\u79f0\u4e3a covert channels<sup>6</sup>\u3002</p> <p>\u5e38\u89c1\u7684\u51e0\u79cd covert channels \u5305\u62ec implicit flows\u3001termination channels\u3001timing channels\u3001exceptions\u3002</p> <p>\u7531\u4e8e explicit flows \u901a\u5e38\u4f1a\u6bd4 covert channels \u4f20\u9012\u66f4\u591a\u7684 critical information\uff0c\u6240\u4ee5\u4e3b\u8981\u8003\u8651 explicit flows\u3002</p>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Programming%20Languages/NJU%20%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/Static%20Analysis%20for%20Security/#taint-analysis","title":"Taint Analysis","text":"<p>taint analysis \u662f\u6700\u5e38\u7528\u7684 information flow analysis\u3002\u5b83\u5c06 data \u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>tainted data: \u4e0e critical information \u6709\u5173\u7684 data\uff0c\u5728 taint analysis \u4e2d\u5c06\u5176\u6253\u4e0a\u4e00\u4e2a label</li> <li>untainted data</li> </ul> <p>tainted data \u7684 sources \u5c31\u88ab\u79f0\u4e3a sources\uff0c\u5b9e\u8df5\u4e2d\u5b83\u4eec\u5f80\u5f80\u662f\u67d0\u4e9b methods (E.g. <code>getPassword()</code>) \u7684\u8fd4\u56de\u503c\u3002</p> <p>taint analysis \u7684\u539f\u7406\u5c31\u662f\u8ddf\u8e2a tainted data\uff0c\u5e76\u89c2\u5bdf\u5b83\u4eec\u662f\u5426\u6709\u53ef\u80fd flow \u5230\u67d0\u4e9b sensitive methods\uff08\u53ef\u80fd\u9020\u6210 unsafe \u7684 methods\uff0c\u88ab\u79f0\u4e3a sinks\uff09\u3002</p> <p>taint analysis \u65e2\u80fd\u5e94\u7528\u4e8e confidentiality \u4e5f\u80fd\u5e94\u7528\u4e8e integrity \u7684\u68c0\u6d4b\uff1a</p> <ul> <li>confidentiality</li> <li>source: source of secret data</li> <li>sink: leakage</li> <li>validation: information leaks</li> <li>integrity</li> <li>source: source of untrusted data</li> <li>sink: critical computation</li> <li>validation: injection errors</li> </ul> <p>\u5c06 tainted data \u770b\u4f5c objects\uff0csources \u770b\u4f5c allocation sites\uff0c\u53ef\u4ee5\u770b\u51fa\u6765 taint analysis \u8981\u505a\u7684\u4e8b\u5c31\u662f pointer analysis \u7684\u5de5\u4f5c\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6cbf\u7528 pointer analysis \u7684\u65b9\u6cd5\u6765\u5b8c\u6210 taint analysis<sup>7</sup>\u3002</p> <p>\u5728 domain and notations \u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u989d\u5916\u589e\u52a0\u4e00\u680f tainted data\uff0c\u5176\u4f59\u7684\u4fdd\u6301\u4e0d\u53d8\uff1a</p> <p></p> <p>\u5bf9\u4e8e inputs &amp; outputs\uff0ctaint analysis \u9700\u8981\u6211\u4eec\u8f93\u5165 sources \u548c sinks\uff0c\u7136\u540e\u4f1a\u8f93\u51fa\u4e00\u7cfb\u5217\u7531 source \u548c sink calls \u7ec4\u6210\u7684 tuples \u7684 taintflows\u3002</p> <p>\u4e3a\u4e86\u6807\u8bb0 tainted data \u5e76\u8f93\u51fa taintflows\uff0ctaint analysis \u5bf9\u4e8e call \u7684 rules \u4e5f\u6709\u6240\u4e0d\u540c\uff1a</p> <p></p> <ol> <li> <p>Dorothy E. Denning and Peter J. Denning, \"Certification of Programs for Secure Information Flow\". CACM 1977.\u00a0\u21a9</p> </li> <li> <p>Dorothy E. Denning, \"A Lattice Model of Secure Information Flow\". CACM 1976.\u00a0\u21a9</p> </li> <li> <p>J. A. Goguen and J. Meseguer, \"Security policies and security models\". S&amp;P 1982.\u00a0\u21a9</p> </li> <li> <p>Ken Biba, \"Integrity Considerations for Secure Computer Systems\". Technical Report, ESD-TR-76-372, USAF Electronic Systems Division, Bed-ford, MA, 1977.\u00a0\u21a9</p> </li> <li> <p>National Vulnerability Database, https://nvd.nist.gov/ \u21a9</p> </li> <li> <p>Butler W. Lampson, \"A Note on the Confinement Problem\". CACM 1973.\u00a0\u21a9</p> </li> <li> <p>Neville Grech and Yannis Smaragdakis, \"P Taint: Unified Points-to and Taint Analysis\". OOPSLA 2017.\u00a0\u21a9</p> </li> </ol>","tags":["Program-Analysis"]},{"location":"Computer%20Science/Theory%20of%20Computer%20Science/","title":"Introduction to the Theory of Computation","text":"<p>Info</p> <p>\u300cIntroduction to the Theory of Computation\u300d(3rd Edition) \u5b66\u4e60\u7b14\u8bb0</p>","tags":["TCS"]},{"location":"Computer%20Science/Theory%20of%20Computer%20Science/Part%201/","title":"Automata and Languages","text":"<p>\u7c7b\u4f3c\u4e8e\u7269\u7406\u6a21\u578b\u7b49\u79d1\u5b66\u65b9\u6cd5\uff0c\u5f53\u4e0b\u7684\u7535\u8111\u5df2\u7ecf\u53d1\u5c55\u5230\u4e86\u975e\u5e38\u590d\u6742\u7684\u7a0b\u5ea6\uff0c\u6211\u4eec\u4f7f\u7528\u540d\u4e3a computation model \u7684\u7406\u60f3\u5316\u7684 computer \u6765\u89e3\u91ca computer \u7684\u884c\u4e3a\u673a\u5236\u3002</p> <p>\u7b80\u5316\u7684 model \u7ec8\u5f52\u4f1a\u5b58\u5728 limitations\uff0c\u4e00\u4e2a model \u53ef\u80fd\u5728\u67d0\u4e9b\u60c5\u5f62\u4e0b\u662f accurate \u7684\uff0c\u4f46\u662f\u53e6\u4e00\u4e9b\u60c5\u5f62\u4e0b\u5374\u4e0d\u4e00\u5b9a\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5728\u4e0d\u540c\u7684\u60c5\u5f62\u4e0b\u9009\u62e9\u4e0d\u540c\u7684 model\u3002</p> <p>\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684 model \u2014\u2014 finite state machine \u6216\u8005\u8bf4 finite automaton \u5f00\u59cb\u5b66\u4e60\u3002</p> <p>PS: AC\u81ea\u52a8\u673a\u4e5f\u662f\u4e00\u79cd finite automaton\u3002</p>","tags":["TCS"]},{"location":"Research/","title":"Research","text":"<p>Info</p> <p>\u8bb0\u5f55\u79d1\u7814\uff0c\u6db5\u76d6\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>Notes on papers</li> <li>Research Log</li> </ul>"},{"location":"Research/Learning%20Research/","title":"Learning Research","text":"<ul> <li>Sida Peng - Learning Research</li> <li>Jason Wei - Practicing AI research</li> <li>Andrej Karpathy - A Survival Guide to a PhD</li> <li>Richard Hamming - You and Your Research</li> <li>John Schulman - An Opinionated Guide to ML Research</li> <li>Michael Neilsen - Principles of Effective Research</li> </ul>"},{"location":"Research/Papers/","title":"Papers","text":""},{"location":"Research/Papers/#references","title":"References","text":"<ul> <li>Fuzzing: FuzzingPaper</li> </ul>"},{"location":"Research/Papers/#papers","title":"Papers","text":"<ul> <li>liuYourCodeGenerated2023</li> </ul>"},{"location":"Research/Papers/liuYourCodeGenerated2023/","title":"liuYourCodeGenerated2023","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#1-abstract-info","title":"1. Abstract &amp; Info","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#11-abstract","title":"1.1 Abstract","text":"<p>Program synthesis has been long studied with recent approaches focused on directly using the power of Large Language Models (LLMs) to generate code. Programming benchmarks, with curated synthesis problems and test-cases, are used to measure the performance of various LLMs on code synthesis. However, these test-cases can be limited in both quantity and quality for fully assessing the functional correctness of the generated code. Such limitation in the existing benchmarks begs the following question: In the era of LLMs, is the code generated really correct? To answer this, we propose EvalPlus -- a code synthesis evaluation framework to rigorously benchmark the functional correctness of LLM-synthesized code. EvalPlus augments a given evaluation dataset with large amounts of test-cases newly produced by an automatic test input generator, powered by both LLM- and mutation-based strategies. While EvalPlus is general, we extend the test-cases of the popular HumanEval benchmark by 80x to build HumanEval+. Our extensive evaluation across 26 popular LLMs (e.g., GPT-4 and ChatGPT) demonstrates that HumanEval+ is able to catch significant amounts of previously undetected wrong code synthesized by LLMs, reducing the pass@k by up-to 19.3-28.9%. We also surprisingly found that test insufficiency can lead to mis-ranking. For example, both WizardCoder-CodeLlama and Phind-CodeLlama now outperform ChatGPT on HumanEval+, while none of them could on HumanEval. Our work not only indicates that prior popular code synthesis evaluation results do not accurately reflect the true performance of LLMs for code synthesis, but also opens up a new direction to improve such programming benchmarks through automated testing. We have open-sourced our tools, enhanced datasets as well as all LLM-generated code at https://github.com/evalplus/evalplus to facilitate and accelerate future LLM-for-code research.</p>","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#12-info","title":"1.2 Info","text":"<p>Authors: Jiawei Liu, Chunqiu Steven Xia, Yuyao Wang, Lingming Zhang DOI: 10.48550/arXiv.2305.01210 Publication:  Zotero: arXiv Fulltext PDF Date: 2023-10-30</p>","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#2-annotation","title":"2. Annotation","text":"<p>%% begin annotations %% Annotated Text\uff1auses ChatGPT [48] to generate a set of high-quality seed inputs Comment\uff1a\ud83d\udd24\u4f7f\u7528ChatGPT [ 48 ]\u751f\u6210\u4e00\u7ec4\u9ad8\u8d28\u91cf\u7684\u79cd\u5b50\u8f93\u5165\ud83d\udd24</p> <p>Annotated Text\uff1atype-aware mutation to efficiently generate a large number of additional test input Comment\uff1a\ud83d\udd24\u7c7b\u578b\u611f\u77e5\u53d8\u5f02\u80fd\u591f\u9ad8\u6548\u5730\u4ea7\u751f\u5927\u91cf\u989d\u5916\u7684\u6d4b\u8bd5\u8f93\u5165\ud83d\udd24</p> <p>Annotated Text\uff1adifferential testing Comment\uff1a\ud83d\udd24\u5dee\u5206\u68c0\u6d4b\ud83d\udd24</p> <p>Annotated Text\uff1agreedy set cover algorithm Comment\uff1a\ud83d\udd24\u8d2a\u5fc3\u96c6\u5408\u8986\u76d6\u7b97\u6cd5\ud83d\udd24</p> <p>Annotated Text\uff1aLLM-based strategy to bootstrap the test generator with high-quality seed inputs and then further extends large amounts of inputs via type-aware mutation Comment\uff1a\ud83d\udd24\u57fa\u4e8eLLM\u7684\u7b56\u7565\u4ee5\u9ad8\u8d28\u91cf\u7684\u79cd\u5b50\u8f93\u5165\u5f15\u5bfc\u6d4b\u8bd5\u751f\u6210\u5668\uff0c\u7136\u540e\u901a\u8fc7\u7c7b\u578b\u611f\u77e5\u53d8\u5f02\u8fdb\u4e00\u6b65\u6269\u5c55\u5927\u91cf\u8f93\u5165\ud83d\udd24</p> <p>Annotated Text\uff1agreedy set covering Comment\uff1a\ud83d\udd24\u8d2a\u5a6a\u96c6\u5408\u8986\u76d6\ud83d\udd24</p> <p>Annotated Text\uff1athe powerful understanding ability of ChatGPT to learn both the valid input formats (e.g., variable types) as well as the desired functionality of the ground-truth solution Comment\uff1a\ud83d\udd24ChatGPT \u5f3a\u5927\u7684\u7406\u89e3\u80fd\u529b\uff0c\u65e2\u53ef\u4ee5\u5b66\u4e60\u6709\u6548\u7684\u8f93\u5165\u683c\u5f0f\uff08\u4f8b\u5982\uff0c\u53d8\u91cf\u7c7b\u578b\uff09\uff0c\u4e5f\u53ef\u4ee5\u5b66\u4e60\u771f\u503c\u89e3\u51b3\u65b9\u6848\u7684\u6240\u9700\u529f\u80fd\ud83d\udd24</p> <p>Annotated Text\uff1avalid even under semantic constraints Comment\uff1a\ud83d\udd24\u5373\u4f7f\u5728\u8bed\u4e49\u7ea6\u675f\u4e0b\u4e5f\u6709\u6548\ud83d\udd24</p> <p>Annotated Text\uff1atype-aware input mutation starting from high-quality seed inputs generated by ChatGPT Comment\uff1a\ud83d\udd24\u7c7b\u578b\u611f\u77e5\u8f93\u5165\u7a81\u53d8\u4ece ChatGPT \u751f\u6210\u7684\u9ad8\u8d28\u91cf\u79cd\u5b50\u8f93\u5165\u5f00\u59cb\ud83d\udd24</p> <p>Annotated Text\uff1aprogramming by contract [41] philosophy by systematically annotating function pre-conditions in form of code assertions Comment\uff1a\ud83d\udd24\u5951\u7ea6\u7f16\u7a0b [41] \u54f2\u5b66\uff0c\u901a\u8fc7\u4ee5\u4ee3\u7801\u65ad\u8a00\u7684\u5f62\u5f0f\u7cfb\u7edf\u5730\u6ce8\u91ca\u51fd\u6570\u524d\u63d0\u6761\u4ef6\ud83d\udd24</p> <p>%% end annotations %%</p>","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#3-key-notes","title":"3. Key Notes","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#31-problems","title":"3.1 Problems","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#32-contributions","title":"3.2 Contributions","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#33-method","title":"3.3 Method","text":"","tags":["Papers"]},{"location":"Research/Papers/liuYourCodeGenerated2023/#34-comments","title":"3.4 Comments","text":"<p>%% Import Date: 2024-02-15T12:47:41.675+08:00 %%</p>","tags":["Papers"]},{"location":"_ignore/Winter%20Vacation%20Study%20Log/","title":"Winter Vacation Study Log","text":"<p>In case that when the winter vacation is over, I might feel nothing accomplished during the whole month, so it is a nice choice to log what I have learnt in a day.</p>","tags":["Log"]},{"location":"_ignore/Winter%20Vacation%20Study%20Log/#january","title":"January","text":"","tags":["Log"]},{"location":"_ignore/Winter%20Vacation%20Study%20Log/#jan-24th","title":"Jan 24th","text":"<ul> <li>Menstruation comes, don't feel well today.</li> <li>Watched lecture01 of MIT18.330 as well as done the related parts of the assignment.<ul> <li>I think I just learnt the most basic syntax of Julia, however, the assignment left me thinking about a possible optimization and implementation of <code>sqrt(x)</code>. This should be a good start.</li> </ul> </li> <li>Decided to skip familiar parts of CS61B to fast forward my progress.</li> <li>Finished lab01 of UCB CS61C, skipped discussion 1&amp;2, watched lecture04 with notes taken.</li> </ul>","tags":["Log"]},{"location":"_ignore/Winter%20Vacation%20Study%20Log/#jan-25th","title":"Jan 25th","text":"<ul> <li>Watched lecture02 of MIT18.330, learnt several Julia basics. Haven't do the homework yet.</li> <li>Finished hw02 of CS61B, had great fun enjoying drawing in Java.</li> <li>Solved P3065 mostly on my own\ud83d\ude04, reviewed AC Automaton with a faster rate and a better understanding. On 26th I'll write study notes of it.</li> <li>Skipped a large part of lecture06 since I've already made aquaintance with IEEE floating points. However, I still learnt about the trick of transition between a FP and its decimal form. </li> </ul>","tags":["Log"]},{"location":"_ignore/Winter%20Vacation%20Study%20Log/#jan-26th","title":"Jan 26th","text":"<ul> <li>Wrote study notes of AC Automaton, which provides me a better understanding and comprehension.</li> <li>Finished lab9 of CS61B, watched video which introduces balanced BST and even watched the beginning part of another video that is a intro to tree &amp; BST accidentally.<ul> <li>For that 'accident', it really surprised me that the way it introduces tree from the map implementation of linked list is so novel!</li> <li>For balanced BST, I think I truly learnt the mindset behind 2-3/2-3-4 tree (or B tree) along with the pros and cons. Also, the brief intro to red black tree is a amazing bonus for me.</li> </ul> </li> <li>Watched the video of lecture6 of CS61C, gained a overview of RISC-V, basic understanding of its philosophy through the study of its asm lang.</li> </ul>","tags":["Log"]},{"location":"_ignore/Diaries/2023%20%E6%80%BB%E7%BB%93/","title":"2023: the Fool Who Dream","text":"<p>Here's to the ones who dream Foolish as they may seem Here's to the hearts that ache Here's to the mess we make......</p> <p>She told me \"A bit of madness is key To give us new colors to see Who knows where it will lead us And that's why they need us\"</p> <p>La La Land - \"Audition (the fools who dream)\"</p> <p>\u8fd9\u662f\u4e00\u7bc7\u8fdf\u5230\u4e86\u4e24\u4e2a\u6708\u7684\u5e74\u5ea6\u603b\u7ed3\uff0c\u4e5f\u662f\u6211\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u8bb0\u5f55\u4e0b\u8fc7\u53bb\u4e00\u5e74\u53d1\u751f\u7684\u53d8\u5316\uff0c\u6211\u5c06 2023 \u5e74\u7684\u4e3b\u9898\u5b9a\u4e3a\u4e86\u300cThe Fool Who Dream\u300d\u3002\u4e25\u683c\u6765\u8bf4\u8fd9\u4e0d\u80fd\u7b97\u662f\u7b2c\u4e00\u6b21\u5199\uff0c\u56e0\u4e3a\u5176\u5b9e\u521a\u624d\u5199\u4e86\u4e00\u5927\u6bb5\u6587\u5b57\uff0c\u4f46\u611f\u89c9\u8fd8\u662f\u592a\u70c2\u4fbf\u5220\u6389\u4e86\u3002\u6211\u5e0c\u671b\u8fd9\u7bc7\u6587\u7ae0\u4e0d\u6b62\u662f\u7406\u6027\u7684\u6279\u5224\u4e0e\u7ee7\u627f\uff0c\u4e5f\u53ef\u4ee5\u66f4\u611f\u6027\u5730\u770b\u5f85\u8fd9\u4e00\u5e74\u7684\u53d8\u5316\uff0c\u8fd9\u79cd\u611f\u60c5\u57fa\u8c03\u8fd8\u662f\u5e94\u8be5\u5728\u6df1\u591c\u65f6\u5206\uff0c\u914d\u5408\u7740\u66fe\u7ecf\u89e6\u52a8\u8fc7\u6211\u7684\u97f3\u4e50\uff0c\u821e\u4e0a\u6d0b\u6d0b\u6d12\u6d12\u7684\u4e00\u5927\u6bb5\u6587\u5b57\uff0c\u5373\u4fbf\u8bcd\u5e93\u6709\u9650\uff0c\u53ea\u4f1a\u80e1\u4e71\u5806\u780c\u8f9e\u85fb\uff0c\u8bed\u8a00\u9752\u6da9\u61f5\u61c2\uff0c\u4e5f\u65e0\u6240\u8c13\u3002</p> <p>2023 \u5e74\uff0c\u6700\u5927\u7684\u53d8\u5316\u5927\u6982\u5c31\u662f\u4ece\u4e00\u4e2a\u6000\u62b1\u7740\u300c\u9ad8\u8003\u8003\u7838\u4e86\uff0c\u4f46\u662f\u4fdd\u7814\u4e5f\u80fd\u4e0a\u6e05\u5317\u300d\u7684\u5e7c\u7a1a\u60f3\u6cd5\u5230\u575a\u5b9a\u5730\u60f3\u8981\u7533\u8bf7 top30\uff08\u5176\u5b9e\u60f3\u8bf4 top4\uff09\u7684 PhD \u4e86\u7f62\u3002</p> <p>\u8fd9\u4e2a\u53d8\u5316\uff0c\u5728\u6211 22 \u5e74\u6323\u624e\u7740\u4ece\u751f\u5353\u8f6c\u4e13\u4e1a\u5230\u7f51\u5b89\u7684\u65f6\u523b\uff0c\u5c31\u5df2\u7ecf\u6ce8\u5b9a\u4e86\u5427\uff0c\u6211\u8fd8\u662f\u90a3\u4e2a\u53db\u9006\u3001\u4e0d\u7518\u5fc3\u7684\u5c11\u5e74\uff0c\u53ea\u662f\u76f8\u6bd4\u8d77\u9ad8\u4e2d\u65f6\u4ee3\uff0c\u5728\u591a\u6b21\u5c1d\u5230\u4e86\u5931\u8d25\u7684\u6ecb\u5473\u540e\uff0c\u6211\u771f\u6b63\u5730\u5f00\u59cb\u8d2f\u5f7b\u81ea\u5df1\u7684\u4e2a\u6027\u4e86\u3002</p> <p>\u8981\u8bf4\u53d8\u5316\u600e\u4e48\u6765\u7684\u8bdd\uff0c\u5176\u5b9e\u4e5f\u5c31\u77ed\u77ed\u51e0\u4e2a\u65f6\u95f4\u70b9\u3002</p> <p>\u6700\u521d\u7684\u840c\u82bd\u9636\u6bb5\u5e94\u8be5\u7b97\u662f\u5927\u4e00\u4e0a\u8bfb\u4e86\u4e0a\u4ea4\u751f\u5b58\u624b\u518c\u7684\u65f6\u5019\u5427\uff0c\u53ea\u662f\u5f53\u521d\u5e76\u6ca1\u6709\u8ba4\u8bc6\u5230\u8fd9\u79cd\u53d8\u5316\u3002</p> <p>\u540e\u6765\u662f\u5728\u9762\u8bd5\u8054\u521b Android \u7ec4\u7684\u65f6\u5019\uff0c\u88ab\u95ee\u5230\u4e86\u6bd5\u4e1a\u4e4b\u540e\u7684\u6253\u7b97\uff0c\u5728\u90a3\u4e00\u523b\u6211\u610f\u8bc6\u5230\uff0c\u539f\u6765\u9664\u4e86\u4fdd\u7814\u8fd8\u53ef\u4ee5\u5de5\u4f5c\u3001\u51fa\u56fd\uff0c\u5f53\u65f6\u7684\u56de\u7b54\u662f\u300c\u8fd8\u6ca1\u6709\u8003\u8651\u6e05\u695a\u300d\uff0c\u4f46\u662f\u4ece\u8fd9\u65f6\u5019\u6211\u5f00\u59cb\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u63a5\u7740\u662f\u5927\u841d\u535c\u7684\u4e00\u5e2d\u8bdd\u8ba9\u6211\u918d\u9190\u704c\u9876\u3002\u4fdd\u7814\u7fa4\u91cc\u5404\u79cd\u8d29\u5356\u7126\u8651\uff0c\u5404\u79cd\u8981 rank \u51e0\u624d\u80fd\u5165\u8425\uff0c\u611f\u89c9\u5373\u4fbf\u662f\u4fdd\u4e2a\u534e\u4e94\u90fd\u6bd4\u767b\u5929\u8fd8\u96be\uff0c\u82b1\u8fd9\u4e48\u5927\u7cbe\u529b\u5c31\u4fdd\u4e00\u4e2a\u7855\u58eb\u8fd8\u8981\u88ab\u672c\u79d1\u751f\u77a7\u4e0d\u8d77\uff0c\u8fd9\u8fdc\u4e0d\u5982\u590d\u8bfb\u4e00\u5e74\u4e0a\u534e\u4e94\u6765\u7684\u6027\u4ef7\u6bd4\u9ad8\u5427\uff1f\u751a\u81f3\u6e05\u5317\u90fd\u6709\u53ef\u80fd\u4e0a\u4e86\u3002\u5176\u6b21\u662f\u611f\u89c9\u5230\u8ba1\u7b97\u673a\u7c7b\u91cc\u771f\u5fc3\u70ed\u7231 CS \u7684\u4eba\u5e76\u4e0d\u591a\uff0c\u5927\u90e8\u5206\u90fd\u662f\u968f\u6ce2\u9010\u6d41\u529f\u5229\u5fc3\u5377\u4fdd\u7814\u7684\u4eba\uff0c\u4f46\u73b0\u5b9e\u662f\u5f80\u5f80\u662f\u8fd9\u4e9b\u4eba\u5360\u636e\u4e86\u6392\u884c\u699c\u7684\u524d\u5217\u4fdd\u53bb\u4e86\u66f4\u597d\u7684\u5b66\u6821\uff0c\u800c\u771f\u6b63\u70ed\u7231\u8ba1\u7b97\u673a\u8fd9\u95e8\u5b66\u79d1\u7684\u4eba\u8981\u4e48\u5c48\u5c45\u672c\u6821\uff0c\u8981\u4e48\u52aa\u529b\u8003\u7814\uff0c\u8981\u4e48\u78e8\u7ec3\u6280\u672f\u5728\u8fd9\u4e2a\u7ecf\u6d4e\u8427\u6761\u7684\u65f6\u671f\u8c0b\u4e00\u4efd\u5dee\u5f3a\u4eba\u610f\u7684\u5de5\u4f5c\uff0c\u5f53\u7136\uff0c\u9020\u6210\u8fd9\u79cd\u5c40\u9762\uff0c\u534e\u79d1\u7684\u5b66\u98ce\u5bfc\u5411\u3001\u7f51\u5b89\u7684\u8bfe\u7a0b\u8bbe\u8ba1\u4e5f\u529f\u4e0d\u53ef\u6ca1\u3002\u6240\u4ee5\uff0c\u770b\u5230\u8fd9\u91cc\uff0c\u4e0d\u89c9\u5f97\u60b2\u54c0\u5417\uff1f\u8fd9\u4e2a\u65f6\u5019\uff0c\u4fdd\u7814\u7fa4\u91cc\u5927\u841d\u535c\u4e00\u53e5\u300c\u60f3\u641e\u5b66\u672f\u7684\u5c31\u76f4\u63a5\u53bb\u7f8e\u56fd\u8bfb\u535a\uff0c\u6ca1\u5fc5\u8981\u6d6a\u8d39\u4e09\u5e74\u8bfb\u7855\u58eb\u300d\u70b9\u9192\u4e86\u6211\uff0c\u662f\u554a\uff0c\u53bb\u7f8e\u56fd\u5427\uff0c\u90a3\u91cc\u4e5f\u8bb8\u80fd\u627e\u5230\u6211\u60f3\u505a\u7684\u4e8b\u60c5\uff0c\u4f55\u51b5 PhD \u4e0d\u6bd4\u6e05\u5317\u7855\u5e05\u591a\u4e86\uff0c\u4e16\u754c\u5f88\u5927\uff0c\u6211\u60f3\u53bb\u770b\u770b\uff01</p> <p>\u6700\u540e\u8ba9\u6211\u4ece\u4fdd\u7814\u3001\u7533\u535a\u4e24\u624b\u6293\u7684\u4e0d\u786e\u5b9a\u6001\u5230\u575a\u5b9a\u8bfb\u535a\u7684\u60f3\u5fc5\u662f csdiy \u8fd9\u4e2a\u65b0\u5927\u9646\u7684\u53d1\u73b0\u4e86\u3002</p> <p>\u4ee5\u4e0a\uff0c\u5e0c\u671b\u82e5\u5e72\u5e74\u7684\u6211\uff0c\u80fd\u591f\u5728 top30 \u7684\u9ad8\u6821\u91cc\u8bfb\u8bba\u6587\u7684\u95f2\u6687\u4e4b\u4f59\uff0c\u4ee5\u6000\u5ff5\u7684\u5fc3\u6001\u518d\u4e00\u6b21\u6253\u5f00\u8fd9\u7bc7\u6587\u7ae0\u3002</p> <p>\u8fd9\u4e00\u5e74\u7684\u5f97\u4e0e\u5931\u3002</p> <p>\u521a\u8f6c\u5b8c\u4e13\u4e1a\uff0c\u521d\u6765\u4e4d\u5230\uff0c\u7b2c\u4e00\u5b66\u671f\u7684\u65f6\u5019\u548c\u5927\u5bb6\u90fd\u4e0d\u719f\uff0c\u548c\u539f\u5bdd\u5ba4\u7684\u5ba4\u53cb\u4e5f\u4e0d\u6562\u751a\u81f3\u662f\u6ca1\u6cd5\u4ea4\u6d41\uff0c\u4e00\u5b66\u671f\u7684\u751f\u6d3b\u90fd\u663e\u5f97\u6709\u4e9b\u98a4\u98a4\u5162\u5162\u7684\uff0c\u597d\u5728\u4e94\u4e00\u5047\u671f\u7684\u6e56\u5317\u7701\u8d5b\u548c cls \u8fd8\u6709\u2795\ud83d\udeac\u719f\u7edc\u4e86\u4e00\u4e9b\uff0c\u8fd8\u6709\u4e0e\u5c0f\u4f1f\u3001qsy\u3001zrx\u4e00\u8d77\u7684\u70e7\u70e4\u591c\u8c08\uff0c\u8212\u7f13\u4e86\u4e0d\u5c11\u7684\u7d27\u5f20\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u5b66\u671f\u4e5f\u591a\u4e8f\u4e86\u5973\u751f\u8d5b\uff0c\u548c jyjj \u4e5f\u719f\u4e86\u4e00\u4e9b\uff0c\u5927\u7269\u548c xxx \u5750\u4e00\u5757\u589e\u8fdb\u4e86\u4e0d\u5c11\u4ea4\u6d41\uff0c\u53ef\u4ee5\u8bf4\u6211\u8089\u4f53\u642c\u5230\u4e86 112\uff0c\u4f46\u662f\u7cbe\u795e\u5374\u4f4f\u5728\u4e86 101 \u4e86\u7f62\uff08</p> <p>\u8bf4\u5230 112\uff0c\u5c31\u4e0d\u5f97\u4e0d\u63d0\u8fd9\u5b66\u671f\u642c\u5230\u4e86\u7f51\u5b89\u7684\u5bdd\u5ba4\u4e86\u3002\u5165\u4f4f\u4f53\u9a8c\u6bd4\u539f\u6765\u8981\u597d\u591a\u4e86\uff0c\u611f\u89c9\u53ef\u4ee5\u8ba9\u6211\u6b63\u5e38\u4ea4\u6d41\u3002</p> <p>\u8c08\u5230\u5931\u7684\u8bdd\uff0c\u6700\u5927\u7684\u611f\u89e6\u5927\u6982\u662f\u8ba4\u8bc6\u5230\u6211\u7684\u786e\u662f\u4e00\u4e2a\u51b7\u6f20\u7684\u4eba\u4e86\u7f62\u3002\u9ad8\u4e2d\u6bd5\u4e1a\u4e5f\u6709\u4e00\u5e74\u534a\u8f7d\u4e86\uff0c\u540c\u5b66\u4eec\u7684\u53d8\u5316\u4e0d\u53ef\u8c13\u4e0d\u5927\uff0c\u548c\u5f88\u591a\u4eba\u9ad8\u4e2d\u65f6\u7684\u719f\u7edc\u5e94\u8be5\u4e5f\u53ea\u662f\u56e0\u4e3a\u88ab\u5173\u5728\u4e00\u8d77\u6bcf\u5929\u5171\u5ea6\u90a3\u5341\u591a\u4e2a\u5c0f\u65f6\u4e86\u7f62\uff0c\u8fd9\u4e00\u70b9\u5230\u4e86\u5927\u5b66\u518d\u76f8\u805a\u7684\u65f6\u5019\uff0c\u4e0d\u5bf9\uff0c\u751a\u81f3\u4e0d\u7528\u76f8\u805a\uff0c\u770b\u670b\u53cb\u5708\u5c31\u80fd\u660e\u767d\u4e86\u3002</p> <p>\u8fd9\u4e2a\u5bd2\u5047\u4ee5\u6765\uff0c\u6211\u51e0\u4e4e\u6bcf\u5929\u90fd\u662f\u7a9d\u5728\u623f\u91cc\u4e0e\u7535\u8111\u4f5c\u5bf9\uff0c\u4e5f\u5f88\u5c11\u4ea4\u6d41\uff0c\u8fc7\u5e74\u4e86\u4ecd\u7136\u662f\u8eb2\u5728\u623f\u95f4\u91cc\uff0c\u4e0e\u4eb2\u621a\u4e0d\u719f\uff0c\u4e0e\u5f53\u5e74\u7684\u73a9\u4f34\u4e5f\u65e9\u5df2\u4e0d\u77e5\u9053\u5982\u4f55\u4ea4\u6d41\u3002\u8fd9\u4e48\u8bf4\u6765\uff0c\u6bd4\u8d77\u201c\u51b7\u6f20\u201d\uff0c\u5176\u5b9e\u6211\u4e5f\u53ea\u662f\u4e0d\u77e5\u9053\u5982\u4f55\u4e0e\u548c\u81ea\u5df1\u7684\u4e16\u754c\u76f8\u8ddd\u751a\u8fdc\u7684\u4eba\u4ea4\u6d41\u4ee5\u81f3\u4e8e\u8981\u5c06\u81ea\u5df1\u5c01\u95ed\u8d77\u6765\u9003\u907f\u73b0\u5b9e\u3002\u597d\u5728\u81f3\u5c11\u8fd8\u6709 pyl \u8fd9\u4e2a\u5bb6\u4f19\u8ba9\u6211\u611f\u89c9\u5373\u4fbf\u5f88\u4e45\u6ca1\u6709\u4ea4\u6d41\u8fc7\uff0c\u518d\u4e00\u6b21\u78b0\u9762\u7684\u65f6\u5019\u4e5f\u80fd\u6709\u5f88\u591a\u8bdd\u8bf4\u5427\u3002</p> <p>2023 \u5e74\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u8bcd\u53ef\u4ee5\u5f62\u5bb9\uff0c\u90a3\u5c31\u662f\u2014\u2014\u300c\u5fd9\u788c\u300d\u3002</p> <p>\u5927\u4e00\u4e0b\uff0c\u521a\u5f00\u5b66\u7684\u65f6\u5019\u72c2\u8865\u4e0a\u5b66\u671f\u4e0e\u5bd2\u5047\u6b20\u4e0b\u7684\u503a\uff0c\u75b2\u4e8e\u5e94\u4ed8\u5f00\u5b66\u8003\uff0c\u4e4b\u540e\u8981\u8865\u516c\u9009\u4e0e\u4e2d\u56fd\u8bed\u6587\uff0c\u52a0\u4e0a\u6211\u9009\u4e86\u300cACM \u7b97\u6cd5\u5b9e\u8df5\u300d\u8fd9\u95e8\u4e0d\u592a\u597d\u5f62\u5bb9\u7684\u8bfe\uff0c\u6240\u4ee5\u5f88\u7d2f\u3002</p> <p>\u6691\u5047\uff0c\u6c89\u8ff7\u4e8e csdiy\uff0c\u4f46\u662f\u5f53\u65f6\u82f1\u8bed\u6c34\u5e73\u5b9e\u5728\u6709\u9650\uff0c\u4e00\u4e2a\u6691\u5047\u7684\u65f6\u95f4\u6ca1\u80fd\u5b66\u5230\u592a\u591a\u4e1c\u897f\u3002</p> <p>\u5927\u4e8c\u4e0a\uff0c\u56e0\u4e3a\u6211\u5fc3\u5b58\u5e7b\u60f3\uff0c\u6307\u671b\u80fd\u9760\u8001\u7238\u627e\u4e00\u4e2a\u725b\u5bfc\u5e26\u6211\uff0c\u7ed3\u679c\u6234\u4e66\u8bb0\u5f53\u573a\u8054\u7cfb dxj\uff0c\u6beb\u65e0\u56de\u65cb\u4f59\u5730\uff0c\u6211\u8ba4\u547d\u3002\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u6211\u5df2\u7ecf\u5b8c\u5168\u4e27\u5931\u5bf9\u4ed6\u4eec\u8fd9\u5e2e\u4eba\u7684\u5e0c\u671b\u4e86\u3002\u53ea\u80fd\u8bf4\uff0c\u641e\u884c\u653f\u7684\u8fd8\u662f\u641e\u884c\u653f\u7684\uff0c\u8fd9\u662f\u6211\u7edd\u5bf9\u4e0d\u4f1a\u60f3\u63a5\u89e6\u7684\u9886\u57df\u3002</p> <p>\u7136\u540e\u5c31\u662f\u83ab\u540d\u5176\u5999\u628a\u6211\u6254\u7ed9\u4e86\u4e00\u4e2a\u641e\u300c\u591a\u6a21\u6001\u865a\u5047\u68c0\u6d4b\u300d\u7684\u535a\u58eb\u751f\uff0c\u6211\u7b2c\u4e00\u6b21\u63a5\u89e6\u79d1\u7814\uff0c\u8bf4\u4e0d\u4e0a\u8bdd\uff0c\u4f46\u662f\u4ece\u8fd9\u4f4d\u5b66\u957f\u7684\u8a00\u8bba\u4e0a\u770b\uff0c\u6211\u771f\u89c9\u5f97\u4ed6\u7684\u8ba1\u7b97\u673a\u6c34\u5e73\u80af\u5b9a\u4e0d\u548b\u5730\u3002\u6bcf\u5468\u7684\u7ec4\u4f1a\u5bf9\u6211\u6765\u8bf4\u5f88\u7cdf\u7cd5\uff0c\u7b80\u76f4\u53ef\u4ee5\u7528\u6298\u78e8\u6765\u5f62\u5bb9\uff0c\u66f4\u4e0d\u7528\u8bf4\u671f\u672b\u5468\u7684\u65f6\u5019\u8fd8\u53d8\u672c\u52a0\u5389\u8981\u6c42\u4e00\u5468\u4e24\u6b21\uff0c\u53c2\u52a0\u4e86\u8fd9\u4e48\u591a\u6b21\u7ec4\u4f1a\uff0cdxj \u4e5f\u4e00\u6b21\u90fd\u6ca1\u6709\u6765\u8fc7\uff0c\u52a0\u4e0a\u67d0\u6b21\u7ec4\u4f1a\u8fd9\u4e9b\u5b66\u957f\u5b66\u59d0\u4eec\u8bf4 dxj \u88ab\u5b66\u751f\u4e3e\u62a5\u8c0e\u79f0\u81ea\u5df1\u51fa\u5dee\u7684\u4e8b\uff0c\u8ba9\u6211\u5bf9 dxj \u7684\u5370\u8c61\u66f4\u5dee\u4e86\uff0c\u8981\u9000\u51fa\u5b9e\u9a8c\u5ba4\u7684\u60f3\u6cd5\u6108\u6f14\u6108\u70c8\uff0c\u671f\u672b\u5468\u7684\u65f6\u5019\u5fcd\u65e0\u53ef\u5fcd\u624d\u7ec8\u4e8e\u8d81\u7740\u8fd9\u80a1\u6c14\u7533\u8bf7\u4e86\u9000\u51fa\u3002</p> <p>\u5bf9\u4e86\uff0c\u4e2d\u9014\u4e5f\u5c1d\u8bd5\u8fc7\u53d1\u90ae\u4ef6\u7ed9\u4f55\u7428\u8001\u5e08\uff0c\u7136\u800c\u72b6\u51b5\u662f\u5df2\u8bfb\u4e0d\u56de\uff0c\u6709\u88ab\u6253\u51fb\u5230\u3002\u540e\u9762\u662f\u770b\u5230\u4e4b\u524d\u4e5f\u60f3\u8054\u7cfb\u7684\u98ce\u8bc4\u5f88\u597d\u7684\u6587\u660e\u8001\u5e08\u7684\u4e3b\u9875\u4e0a\u5199\u7740\u662f\u957f\u6c99\u4eba\uff0c\u62b1\u7740\u8bd5\u4e00\u8bd5\u7684\u5fc3\u6001\u5728 oierdb \u4e0a\u67e5\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5c45\u7136\u662f cjer &amp; oier\uff0c\u4e8e\u662f\u679c\u65ad\u51b3\u5b9a\u8054\u7cfb\u6587\u660e\u8001\u5e08\uff08\u5176\u5b9e\u8fd8\u662f\u62d6\u4e86\u4e00\u4e2a\u6708\uff09\uff0c\u4e00\u76f4\u5230\u52a0\u5165 SAS \u8bfe\u9898\u7ec4\u7136\u540e\u6210\u529f\u63a8\u51fa dxj \u7684\u5b9e\u9a8c\u5ba4\uff0c\u6211\u8ba4\u4e3a\u5e94\u8be5\u7b97\u662f\u79d1\u7814\u8def\u4e0a\u5f00\u59cb\u6b65\u5165\u6b63\u8f68\u3002</p> <p>\u9a82\u4e86\u8fd9\u4e48\u591a dxj \u7684\u5b9e\u9a8c\u5ba4\uff0c\u662f\u65f6\u5019\u56de\u5230\u4e3b\u9898\u4e86\u3002\u8fd9\u4e2a\u5b66\u671f\u8981\u8865\u4e0a\u7684\u8bfe\u8fdc\u6bd4\u5927\u4e00\u4e0b\u8981\u591a\uff0c\u516c\u9009\u4e24\u95e8\u3001\u8865\u4fee\u4e24\u95e8\u3001\u4e13\u9009\u4e24\u95e8\uff0c\u538b\u7684\u6211\u5598\u4e0d\u8fc7\u6c14\u6765\uff0c\u53ef\u4ee5\u8bf4\u662f\u538b\u529b\u5c71\u5927\u4e86\uff0c\u671f\u672b\u867d\u7136\u6211\u81ea\u8ba4\u4e3a\u51c6\u5907\u7684\u4e0d\u9519\u4f46\u662f\u7ed3\u679c\u4e0a\u770b\u6709\u70b9\u62c9\uff0c\u5c24\u5176\u662f\u5927\u7269\u548c\u6570\u636e\u5e93\uff0c\u4e5f\u4e3a\u6b64\u96be\u53d7\u4e86\u597d\u4e00\u9635\u5b50\u3002</p> <p>\u561b\uff0c\u81f3\u5c11\u4e0b\u5b66\u671f\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u4e0d\u5c11\u4e86\uff08\uff1f\uff09\u3002</p> <p>2024\uff0c\u4fdd\u6301\u70ed\u7231\uff0c\u4e0d\u5fd8\u521d\u5fc3\uff0c\u613f\u8d70\u8fc7\u8fd9\u4e00\u5e74\uff0c\u63a5\u53d7\u795e\u5e99\u8bd5\u70bc\uff0c\u89e3\u653e\u56db\u795e\u517d\uff0c\u5f52\u6765\u4ecd\u662f\u90a3\u4e2a\u4e2d\u4e8c\u53db\u9006\u7684\u5c11\u5e74\u3002</p>","tags":["Summary"]},{"location":"_ignore/Diaries/2024/01/Mon%20Jan%2015%2C%202024/","title":"Mon Jan 15, 2024","text":"<p>\u300c\u5927\u5b66\u7269\u7406\uff08\u4e8c\uff09\uff1a74\u300d\u2014\u2014\u5fc3\u810f\u9aa4\u505c\u3002</p> <p>\u771f\u662f\u4ee4\u4eba\u4e0d\u89e3\uff0c\u660e\u660e\u6211\u9664\u4e86\u6700\u540e\u4e00\u9898\u5b9e\u5728\u6ca1\u6cd5\u60f3\u8d77\u859b\u5b9a\u8c14\u65b9\u7a0b\u8fd8\u6709\u4e00\u9053 P\u3001N \u534a\u5bfc\u4f53\u7684\u9009\u62e9\u9898\u8bb0\u4e0d\u5f97\u4e86\uff0c\u5176\u4ed6\u90fd\u4f1a\u505a\u7684\u554a\uff1f</p> <p>\u56de\u60f3\u4e00\u4e0b\uff0c\u597d\u50cf\u786e\u5b9e\u6709\u51e0\u9053\u9898\u7b97\u7684\u633a\u4e0d\u786e\u5b9a\u6765\u7740\u3002\u5509\uff0c\u600e\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u4e5f\u4e0d\u81f3\u4e8e\u5377\u9762\u5206\u53ea\u6709 60 \u51fa\u5934\u5427\uff1f\u4e0d\u4e0d\u4e0d\uff0c\u4f60\u518d\u60f3\u4e00\u60f3\uff0c\u4f60\u53ef\u662f\u5728\u9ad8\u4e2d\u4e09\u5e74\u91cc\u6700\u7b80\u5355\uff08\u9664\u4e86\u6c34\u8003\uff0c\u4e0d\u8fc7\u4f60\u8fd9\u4e2a\u5bb6\u4f19\u6c34\u8003\u4e5f\u5f88\u96be\u8003\u5230\u6ee1\u5206\u5c31\u662f\u4e86\uff09\u7684\u4e00\u6b21\u6570\u5b66\u8003\u8bd5\u2014\u2014\u9ad8\u4e00\u7b2c\u4e00\u6b21\u6708\u8003\u4e2d\u53d6\u5f97\u4e86\u300c69\u300d\uff08\u4e5f\u8bb8\u66f4\u4f4e\uff0c\u4f46\u603b\u4e4b\u5c31\u662f\u516d\u5341\u6765\u5206\u7684\u6837\u5b50\uff09\u8fd9\u6837\u4ee4\u4eba\u5927\u8dcc\u773c\u955c\u7684\u6210\u7ee9\u7684\u5bb6\u4f19\u554a\uff01</p> <p>\u8fd9\u4e48\u60f3\u6765\uff0c\u4e00\u5207\u597d\u50cf\u90fd\u53d8\u5f97\u5408\u7406\u8d77\u6765\u4e86\u2026\u2026</p> <p>\u5404\u79cd\u6028\u5929\u5c24\u4eba\u3001\u6279\u5224\u793e\u4f1a\u3001\u6000\u624d\u4e0d\u9047\u7684\u60f3\u6cd5\u5c31\u4e0d\u5728\u8fd9\u91cc\u4ea4\u6d41\u4e86\uff0c\u6bd5\u7adf\u4e4b\u524d\u5728\u64cd\u573a\u4e00\u4e2a\u4eba\u95f7\u5934\u8dd1\u6b65\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u300c\u8111\u529b\u98ce\u66b4\u300d\u8fc7\u4e86\u3002</p> <p>\u300c\u7c97\u5fc3\u300d\u2014\u2014\u4e5f\u8bb8\u53ef\u4ee5\u7528\u300c\u6ce8\u610f\u529b\u6da3\u6563\u300d\u6765\u5f62\u5bb9\uff0c\u662f\u6211\u4ece\u5e7c\u65f6\u5230\u73b0\u5728\u4e00\u76f4\u5b58\u5728\u7740\u7684\u786c\u4f24\uff0c\u4e5f\u662f\u6211\u4e2d\u5b66\u65f6\u4ee3\u6700\u5927\u7684\u70e6\u607c\u6765\u6e90\u3002\u5c0f\u5b66\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7\u53cd\u590d\u505a\u540c\u4e00\u9053\u9898\u89c9\u5f97\u6ca1\u591a\u5c11\u95ee\u9898\u4e86\u518d\u505a\u4e0b\u4e00\u9898\uff0c\u8fd9\u6837\u7684\u7b28\u65b9\u6cd5\u6765\u7f13\u89e3\u75c7\u72b6\uff0c\u4f46\u662f\u5230\u4e86\u4e2d\u5b66\u65f6\u4ee3\u53ef\u6ca1\u6709\u8fd9\u4e48\u591a\u7684\u65f6\u95f4\u7ed9\u4f60\u6d88\u78e8\u4e86\uff0c\u4e8e\u662f\u6211\u6bcf\u6b21\u90fd\u53ea\u80fd\u8dcc\u843d\uff08\u4e5f\u8bb8\u5e76\u4e0d\u5b58\u5728\uff09\u5e73\u65f6\u5728\u719f\u8bc6\u6211\u7684\u540c\u5b66\u5fc3\u76ee\u4e2d\u7684\u201c\u795e\u575b\u201d\uff0c\u751a\u81f3\u65f6\u95f4\u957f\u4e86\uff0c\u6211\u90fd\u5b66\u4f1a\u7528\u300c\u6ca1\u4e8b\u7684\uff0c\u4e0b\u6b21\u80af\u5b9a\u4e0d\u4f1a\u72af\u8fd9\u79cd\u9519\u8bef\u4e86\uff0c\u5230\u4e86\u9ad8\u8003\u5c31\u53ef\u4ee5\u8ba9\u5927\u5bb6\u770b\u770b\u4f60\u7684\u771f\u672c\u4e8b\u4e86\u54df\uff01\u300d\u8fd9\u6837\u7684\u8bdd\u6765\u81ea\u6b3a\u6b3a\u4eba\u5730\u5b89\u6170\u81ea\u5df1\u4e86\u3002</p> <p>\u5514\uff0c\u5e73\u65f6\u8ba9\u4eba\u611f\u89c9\u4ec0\u4e48\u90fd\u4f1a\u505a\u3001\u603b\u662f\u80fd\u60f3\u5230\u610f\u6599\u4e4b\u5916\u7684\u89e3\u9898\u201c\u9b54\u6cd5\u201d\u7684\u5bb6\u4f19\uff0c\u8003\u8d77\u8bd5\u6765\u6210\u7ee9\u603b\u662f\u4e00\u8a00\u96be\u5c3d\u5462\u2026\u2026.\u6bcf\u6bcf\u60f3\u5230\u8fd9\u5c45\u7136\u662f\u4ee4\u4eba\u4e0d\u4e89\u7684\u4e8b\u5b9e\uff0c\u603b\u4f1a\u8ba9\u6211\u611f\u5230\u610f\u96be\u5e73\uff0c\u4ee5\u81f3\u4e8e\u8ba9\u6211\u5728\u4e86\u89e3\u5230\u300cADHD\u300d\u8fd9\u4e48\u4e00\u4e2a\u5b58\u5728\u4e4b\u540e\u6562\u9f13\u8d77\u52c7\u6c14\u8bf7\u5047\u53bb\u533b\u9662\u5e0c\u671b\u80fd\u7ed9\u6211\u957f\u4e45\u4ee5\u6765\u7684\u75db\u82e6\u7ecf\u5386\u4e00\u4e2a\u5408\u7406\u7684\u89e3\u91ca\uff0c\u4f46\u6700\u7ec8\u662f\u4ee5\u201c\u5c0f\u4e11\u201d\u7684\u7ed3\u5c40\u6536\u573a\u2014\u2014\u300c\u957f\u90e1\u7684\u5b66\u9738\u554a\uff0c\u8fd8\u662f\u7406\u79d1\u5b9e\u9a8c\u73ed\u7684\uff01\u8fd9\u4e48\u597d\u7684\u6210\u7ee9\u600e\u4e48\u53ef\u80fd\u662f ADHD \u554a\u300d\u533b\u751f\u679c\u65ad\u505a\u51fa\u4e86\u7ed3\u8bba\u3002\u5373\u4f7f\u662f\u6211\u7684\u5bb6\u4eba\u4e5f\u5b8c\u5168\u4e0d\u7406\u89e3\u3001\u4e0d\u652f\u6301\u6211\u7684\u60f3\u6cd5\uff0c\u300c\u5d3d\u5d3d\u8fd9\u4e48\u6b63\u5e38\u600e\u4e48\u53ef\u80fd\u4f1a\u6709\u8fd9\u79cd\u75c5\uff1f\uff01\u300d\uff08\u82e6\u7b11\uff0c\u6bd5\u7adf\u4ed6\u4eec\u53ef\u662f\u5728\u4e09\u533b\u9662\u7684\u533b\u751f\u7ed9\u6211\u7684\u76ae\u80a4\u75c5\u4f5c\u51fa\u4e86\u300c\u57fa\u56e0\u7f3a\u9677\u300d\u7684\u8bca\u65ad\u4e4b\u540e\u4ecd\u7136\u56fa\u6267\u5df1\u89c1\u5730\u8ba4\u4e3a\u8fd9\u7edd\u5bf9\u4e0d\u662f\u57fa\u56e0\u95ee\u9898\u7684\u554a\uff09\u3002</p> <p>\u9a6c\u539f\u6ca1\u529e\u6cd5\u80cc\uff0c\u6211\u5f00\u59cb\u65e0\u6240\u4e8b\u4e8b\u7684\u641c\u7d22\u5173\u952e\u8bcd\u300cPhD GPA\u300d\u4f01\u56fe\u627e\u5230\u5fc3\u91cc\u5b89\u6170\u3002\u5c31\u8fd9\u6837\u6d6a\u8d39\u4e86\u590d\u4e60\u9a6c\u539f\u7684\u51e0\u4e2a\u9ec4\u91d1\u5c0f\u65f6\uff0c\u4e5f\u6ca1\u80fd\u5f97\u5230\u4e00\u4e2a\u786e\u5207\u7684\u5b89\u6170\u3002</p> <p>\u6211\u65e0\u6cd5\u4f30\u91cf\u300c74\u300d\u8fd9\u4e2a\u6570\u5b57\u80fd\u5bf9\u6211\u7684\u672a\u6765\u4ea7\u751f\u591a\u5927\u7684\u5f71\u54cd\uff0c\u6709\u4eba\u8bf4\uff0c\u6211\u8fd9\u79cd\u4e0d\u9002\u5408\u8003\u8bd5\u3001\u559c\u6b22\u7279\u7acb\u72ec\u884c\uff08\u4e0d\u4ec5\u4ec5\u662f\u51b3\u5b9a\u8981\u8bfb PhD \u800c\u4e0d\u662f\u968f\u5927\u6d41\u5730\u5377\u4fdd\u7814\uff0c\u4e5f\u4f53\u73b0\u5728\u6211\u4ee5\u524d\u89e3\u9898\u6709\u81ea\u5df1\u7684\u539f\u5219\u4e0a\u2014\u2014\u89e3\u51e0\u575a\u51b3\u4e0d\u6b7b\u7b97\u3001\u8ba1\u7b97\u91cf\u5927\u4e00\u70b9\u7684\u9898\u5c31\u53bb\u6b7b\u78d5\u66f4\u201c\u5999\u201d\u7684\u89e3\u51b3\u65b9\u6cd5\uff09\u7684\u5bb6\u4f19\u5c31\u4e0d\u5e94\u8be5\u5f85\u5728\u56fd\u5185\uff0c\u56fd\u5916\u624d\u662f\u80fd\u8ba9\u6211\u5927\u5c55\u8eab\u624b\u7684\u5730\u65b9\uff0c\u6211\u65e0\u4ece\u5f97\u77e5\u8fd9\u53e5\u8bdd\u7684\u771f\u5b9e\u6027\uff0c\u4f46\u662f\uff0c\u81f3\u5c11\u5728\u6211\u5b8c\u5168\u653e\u5f03\u8fd9\u6837\u7684\u6211\u4e4b\u524d\uff0c\u603b\u5f97\u8981\u53bb\u8bd5\u8bd5\u770b\u5427\u3002</p>"},{"location":"_ignore/Diaries/2024/01/Sun%20Jan%2021%2C%202024/","title":"Sun Jan 21, 2024","text":"<p>\u597d\u5de7\u554a\uff0c\u521a\u597d\u8ddd\u79bb\u4e0a\u6b21\u5199\u65e5\u8bb0\u8fc7\u4e86\u4e00\u4e2a\u661f\u671f\u3002</p> <p>\u771f\u4e0d\u5de7\u554a\uff0c\u539f\u6765\u662f\u56e0\u4e3a\u73b0\u5728\u662f\u51cc\u6668 12 \u70b9\u591a\u624d\u5bfc\u81f4\u6211\u4ee5\u4e3a\u521a\u597d\u8fc7\u4e86\u4e00\u5468\u554a\uff08\u9274\u5b9a\u4e3a\u5237\u7f51\u8bfe\u5237\u7684\uff08</p> <p>\u4eca\u5929\u7528\u4e24\u4e2a\u5b57\u5f62\u5bb9\u7684\u8bdd\uff0c\u90a3\u5927\u6982\u5c31\u662f\u300c\u6478\u4e86\u300d\u7f62\u3002</p> <p>\u6709\u70b9\u5931\u671b\u554a\uff0c\u660e\u660e\u6628\u665a\u6709\u8001\u5b9e\u5730\u65e9\u70b9\u7761\u89c9\uff08\u81f3\u5c11\u4e0d\u5230 12 \u70b9\u534a\u5c31\u4e0a\u5e8a\u4e86 qwq\uff09\u4e86\uff0c\u4f46\u662f\u65e9\u4e0a\u8fd8\u662f\u6839\u672c\u4e0d\u60f3\u8d77\u6765QAQ\uff0c\u4e00\u5b9a\u662f\u5e8a\u5bf9\u6211\u7684\u8eab\u4f53\u6709\u4e00\u80a1\u5947\u5f02\u7684\u5438\u5f15\u529b\u7f62\uff08</p> <p>\u8d77\u6765\u4e4b\u540e\u4e5f\u6ca1\u5e72\u4ec0\u4e48\uff0cCS61B \u7684 hw1 \u633a\u597d\u73a9\u7684\u82b1\u4e86\u6211\u4e2a\u628a\u5c0f\u65f6\u624d\u7ec8\u4e8e\u7ed3\u675f\u4e86\u5b83\uff0c\u4e4b\u540e\u770b Stanford CS110L\u53c8\u7a81\u7136\u60f3\u8981\u7ed9\u5b83\u505a\u4e2a\u7b14\u8bb0\uff0c\u4e8e\u662f\u53c8\u82b1\u4e86\u4e2a\u628a\u5c0f\u65f6\u628a\u524d\u9762\u90e8\u5206\u7684\u5185\u5bb9\u7ed9\u80e1\u4e71\u7cca\u5f04\u4e86\u4e0a\u53bb\uff0c\u7136\u540e\u63a5\u7740\u770b Google Chrome \u7684 video \uff0c\u770b\u7740\u770b\u7740\u53d1\u73b0\u770b\u4e0d\u4e0b\u53bb\u4e86\uff0c\u8111\u5b50\u91cc\u5173\u4e8e OS \u7684\u77e5\u8bc6\u5b9e\u5728\u592a\u532e\u4e4f\u4e86......</p> <p>\u63a5\u7740\u5f00\u59cb\u51c6\u5907\u770b CS61C\uff0c\u53c8\u83ab\u540d\u5176\u5999\u5f00\u59cb\u6298\u817e note-taking app\uff0c\u7ecf\u8fc7\u5404\u79cd\u5bf9\u6bd4\u7ec8\u4e8e\u53c8\u9009\u62e9\u4e86\u56de\u5f52 Obsidian\uff0c\u5c31\u5728\u8fd9\u4e00\u5929\u5373\u5c06\u7ed3\u675f\u65f6\uff08\u5176\u5b9e\u5df2\u7ecf\u7ed3\u675f\u4e86\uff09\uff0c\u6211\u51b3\u5b9axi</p>"},{"location":"_ignore/Diaries/2024/02/03/","title":"03","text":"<p>\u53c8\u662f 12 \u70b9\u591a\u624d\u8d77\u5e8a\u7684\u4e00\u5929......</p> <p>\u4eca\u5929\u7684\u5bfc\u706b\u7d22\u662f\u592a\u51b7\u4e86\uff0c\u722c\u8d77\u6765\u5f00\u4e86\u4e2a\u7535\u70ed\u6bef\u51c6\u5907\u88ab\u70ed\u8d77\u6765\uff0c\u7ed3\u679c\u7ed9\u70ed\u7761\u7740\u4e86......\u773c\u775b\u4e00\u95ed\u4e00\u7741\u5c31\u6765\u5230\u4e86 9:52\uff08\u6ca1\u9519\uff0c\u6211\u8fd8\u6e05\u695a\u5730\u8bb0\u5f97\u8fd9\u4e2a\u6570\u5b57\uff09\uff0c\u4e4b\u540e\u76f4\u63a5\u6446\u70c2\u5230\u4e86 12 \u70b9\u591a\u624d\u7ec8\u4e8e\u722c\u8d77\u6765\u3002</p> <p>\u4e5f\u8bb8\u5e94\u8be5\u8bd5\u7740\u591a\u7a7f\u4e00\u70b9\u7761\u89c9\u7684\u3002</p> <p>\u660e\u5929\u53ef\u4e00\u5b9a\u8981\u8d77\u6765\u554a\uff0c\u6bd5\u7adf\u665a\u4e0a\u5f97\u53bb\u5403\u996d\uff0c\u80af\u5b9a\u641e\u4e0d\u4e86\u4ec0\u4e48\u5b66\u7684\u3002</p> <p>\u4eca\u5929\u4e0b\u5348\u4e5f\u662f\uff0c\u72b6\u6001\u4e0d\u5bf9\u52b2\uff0cRISC-V assembly \u75af\u72c2\u4e71\u7528 <code>addi</code>\uff0c\u7136\u540e\u8fd8\u603b\u662f\u6f0f <code>j loop_start</code> \u5bb3\u6211 debug \u534a\u5929\u3002\u665a\u4e0a\u770b CS61C \u7684\u8bfe\u4e5f\u770b\u4e0d\u8fdb\u53bb\uff08\u8c8c\u4f3c\u4e00\u76f4\u90fd\u4e0d\u592a\u80fd\u770b\u5f97\u8fdb\u53bb qwq\uff09\u3002\u561b\uff0c\u8003\u8651\u5230\u53ef\u5229\u7528\u65f6\u95f4\u6bd4\u8f83\u5c11\u4eca\u5929\uff0c\u6240\u4ee5\u5e72\u7684\u6d3b\u5176\u5b9e\u4e5f\u8fd8\u86ee\u591a\u7684\u3002</p> <p>\u4f46\u662f\u660e\u660e\u53ef\u4ee5\u505a\u7684\u66f4\u597d\u7684\uff01</p>"},{"location":"_ignore/Diaries/2024/02/04/","title":"04","text":"<p>five......</p> <p>\u65e9\u4e0a\u660e\u660e\u5df2\u7ecf\u5f88\u63a5\u8fd1\u65e9\u8d77\u4e86\uff0c\u4f46\u662f\u6211\u5b9e\u5728\u662f\u592a\u65e0\u53ef\u6551\u836f\u4e86\uff0c\u53c8\u662f\u5c06\u8fd1 12 \u70b9\u624d\u8d77\u7684\u4e00\u5929......</p> <p>\u809d\u4e86\u4e00\u4e0b\u5348\u7684 CS61C proj2\uff0c\u8fd8\u5269\u6700\u540e\u4e00\u4e2a <code>classy.s</code> \u7684\u65f6\u5019\u88ab\u62d6\u53bb\u805a\u9910\u4e86\u3002</p> <p>md \u6839\u672c\u5c31\u4e0d\u719f\uff0c\u6211\u679c\u7136\u8fd8\u662f\u6709\u7cbe\u795e\u6d01\u7656\uff0c\u8fd8\u662f\u53cd\u611f zzh \u8fd9\u79cd\u4eba\uff0cxxq \u548c qsy \u8001\u5b9e\u8bf4\u548c\u6211\u8fd9\u79cd\u9634\u6e7f\u6b7b\u5b85\u4e5f\u5b8c\u5168\u4e0d\u662f\u4e00\u7c7b\u4eba\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u5171\u540c\u8bdd\u9898\u5c31\u662f\u4e86......</p> <p>\u6211\u679c\u7136\u8fd8\u662f\u53ea\u9002\u5408\u4e00\u4e2a\u4eba\u5446\u7740\uff0c\u548c\u6211\u7684\u7535\u8111\u3001fumo\u3001\u7eb8\u7247\u4eba\u8fc7\u4e00\u8f88\u5b50\u3002</p> <p>\u670d\u4e86\uff0c\u4e00\u5929\u5565\u4e5f\u6ca1\u5e72\uff0c\u4e5f\u4e00\u70b9\u6ca1\u73a9\u5230\u3002</p> <p>\u665a\u4e0a\u597d\u4e0d\u5bb9\u6613\u9003\u79bb\u5730\u72f1\u56de\u6765\u53c8\u82b1\u4e86 2h \u628a\u6700\u540e\u7684\u90e8\u5206\u809d\u5b8c\u4e86\uff0c\u6700\u540e\u7ec8\u4e8e\u6210\u529f\u8bc6\u522b\u51fa\u6570\u5b57\u6765\u7684\u5fc3\u60c5\u8fd8\u662f\u6bd4\u8f83\u6fc0\u52a8\u7684\uff0c\u4e5f\u7b97\u662f\u4eca\u5929\u4e3a\u6570\u4e0d\u591a\u7684\u4e00\u70b9\u5b89\u6170\u5427\u3002</p>"},{"location":"_ignore/Diaries/2024/02/05/","title":"05","text":"<p>\u4eca\u5929\u7684\u8d77\u5e8a\u65f6\u95f4\u5237\u65b0\u4e86\u8bb0\u5f55\uff0c\u6ca1\u9519\uff0c13 \u70b9\u534a\u624d\u4ece\u5e8a\u4e0a\u722c\u8d77\u6765\uff0c\u5b8c\u5168\u5fd8\u4e86\u4eca\u5929\u6709\u90a3\u4e2a\u4ec0\u4e48\u4f1a\u8bae\u7684 B \u7ad9\u76f4\u64ad\ud83e\udd21</p> <p>\u6548\u7387\u4e0d\u9ad8\uff0c\u5b8c\u6210\u7684\u4efb\u52a1\u4e5f\u4e0d\u591a\uff0c\u751a\u81f3\u8fd9\u4e48\u665a\u624d\u8d77\u7cbe\u6c14\u795e\u8fd8\u662f\u8fd9\u51e0\u5929\u6700\u5dee\u7684\ud83e\udd21</p> <p>\u8fd8\u662f\u4e0d\u653e\u5927\u8bdd\u8bf4\u8981\u65e9\u8d77\u4e86\ud83e\udd21</p>"},{"location":"_ignore/Diaries/2024/02/10/","title":"10","text":"<p>\u4eca\u5929\u5927\u5e74\u521d\u4e00\uff0c\u4e45\u8fdd\u5730\u5728 10 \u70b9\u722c\u8d77\u6765\u4e86\u3002</p> <p>\u6765\u7684\u6700\u65e9\u7684\u662f\u6234\u963f\u59e8\u548c\u8c22\u7ef4\u8431\uff0c\u597d\u5c34\u5c2c\u554a\uff0c\ud83d\udc2d\ud83d\udc2d\u5df2\u7ecf\u5b8c\u5168\u4e0d\u77e5\u9053\u8981\u600e\u4e48\u9762\u5bf9\u7ae5\u5e74\u7684\u73a9\u4f34\u4e86\ud83d\ude22</p> <p>\u4e4b\u540e\u662f\u67f3\u67f3\u4ed6\u4eec\uff0c\u8001\u5b9e\u8bf4\uff0c\u4e5f\u597d\u5c34\u5c2c\uff0c\u4e0d\u77e5\u9053\u8981\u600e\u4e48\u9762\u5bf9\uff0c\u53ea\u4f1a\u8eb2\u5728\u7535\u8111\u5c4f\u5e55\u9762\u524d\u65e0\u804a\u5730\u5237\u7740\u77e5\u4e4e\uff0c\u4f46\u662f\u8fd8\u662f\u88ab\u6211\u5988\u7ed9\u6574\u53bb\u8d70\u5eca\u641e\u4ec0\u4e48\u56f4\u7089\u70e4\u8089\u4e86\uff0cmd \u718f\u6b7b\u4e86\u4e5f\u4e0d\u597d\u73a9\uff0c\u66f4\u4e0d\u77e5\u9053\u8981\u600e\u4e48\u8bf4\u8bdd\uff0c\u7b80\u76f4\u592a\u5c34\u5c2c\u4e86\ud83d\ude05</p> <p>\u725b\u725b\u4e3a\u4e86\u201c\u907f\u96be\u201d\u8eb2\u6211\u623f\u95f4\u6765\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u53bb\u4e66\u623f\uff1f\ud83d\ude21\u73b0\u5728\u77e5\u9053\u8ba8\u538c\u5c0f\u5c41\u5b69\u4e86\uff0c\ud83d\udc2d\ud83d\udc2d\u5f53\u5e74\u5c31\u662f\u8fd9\u6837\u624d\u4f1a\u8ba8\u538c\u4f60\u7684\ud83d\ude24</p> <p>\u7085\u7085\u4e5f\u4e00\u53e5\u8bdd\u90fd\u6ca1\u6709\u4ea4\u6d41\uff0c\u4e2d\u5348\u4e00\u5927\u7fa4\u4eba\u5403\u996d\uff0c\u6211\u4e00\u70b9\u4e5f\u5403\u4e0d\u4e0b\uff0c\u8fd8\u4e00\u76f4\u558a\u6211\u5750\u4e0b\ud83d\ude13\u670d\u4e86\uff0c\u8eb2\u623f\u95f4\u91cc\u4e86\u3002</p> <p>\u8fd9\u4e2a\u5e74\uff0c\u4e0d\u8fc7\u4e5f\u7f62\uff0c\u53cd\u6b63\u4e5f\u4e0d\u719f\u3002</p> <p>\u6211\u5927\u62b5\u662f\u6210\u4e3a\u9634\u6e7f\u6b7b\u5b85\u7684\u5b8c\u5168\u6001\u4e86\u3002</p> <p>\u660e\u5e74\u5982\u679c\u771f\u7684\u53bb ucb \u4ea4\u6362\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u5df2\u7ecf\u5f00\u5b66\u4e86\u5427\uff0c\u5927\u6982\u8fc7\u4e0d\u4e86\u5e74\u4e86\uff0c\u4e5f\u633a\u597d\u7684\u3002</p> <p>\u8fd8\u6709\uff0c\u8fd9\u51e0\u5929\u4e3a\u4ec0\u4e48\u90fd\u597d\u56f0\u554a\uff0c\u6ca1\u6709\u5b66\u4e60\u7684\u52b2\u5934\uff0c\u8fde\u6253\u6446\u90fd\u6ca1\u6709\u52a8\u529b\u3002\u3002\u3002\u5e94\u8be5\u662f\u6bcf\u6708\u4e00\u840e\u4e86\u5427\uff1f</p> <p></p> <p>\u6bd4\u53bb\u5e74\u66f4\u63a5\u8fd1\u300c\u51b0\u51b7\u7684\u5c4f\u5e55\u4e0e\u623f\u95f4\u300d\u4e86\u5462\u3002</p> <p>\u660e\u5929\u4e00\u5b9a\u8981\u5199\u5e74\u7ec8\u603b\u7ed3\u4e86\uff0c\u4e0d\u80fd\u518d\u62d6\u4e86\u554a\u3002</p>"},{"location":"_ignore/Plans/Algorithm/","title":"Algorithm","text":""},{"location":"_ignore/Plans/Algorithm/#_1","title":"\u6570\u8bba","text":"<ul> <li> \u80fd\u529b\u63d0\u5347\u7efc\u5408\u9898\u5355Part6 \u6570\u5b66</li> <li> P5539 \u3010XR-3\u3011Unknown Mother-Goose @2024/02/07/</li> </ul>"},{"location":"_ignore/Plans/Algorithm/#codeforces","title":"Codeforces","text":"<ul> <li> Codeforces Rating 1500+</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/CSdiy/","title":"CSdiy","text":""},{"location":"_ignore/Plans/CSdiy/#ucb-cs61c","title":"UCB CS61C","text":"<ul> <li> - [x] lec14 notes- [x] lec15- [x] disc7 @2024/02/07/</li> <li> lec16</li> <li> - disc8- lab5 @2024/02/09/</li> <li> lab6</li> <li> proj3 part A</li> </ul>"},{"location":"_ignore/Plans/CSdiy/#mit-18330","title":"MIT 18.330","text":"<ul> <li> lec5 @2024/02/06/</li> <li> lec6</li> </ul>"},{"location":"_ignore/Plans/CSdiy/#cs127","title":"CS127","text":"<ul> <li> - [x] lec2- [x] hw1 @2024/02/06/</li> <li> - lec3- disc1- hw2</li> </ul>"},{"location":"_ignore/Plans/CSdiy/#nju-static-program-analysis","title":"NJU Static Program Analysis","text":"<ul> <li> assignment 7</li> <li> assignment 8</li> </ul>"},{"location":"_ignore/Plans/CSdiy/#linear-algebra-done-wrong","title":"Linear Algebra Done Wrong","text":"<ul> <li> 1.1 - 1.4 @2024/02/06/</li> <li> 1.5 - 1.8 @2024/02/08/</li> </ul>"},{"location":"_ignore/Plans/CSdiy/#introduction-to-the-theory-of-computation","title":"Introduction to the Theory of Computation","text":"<ul> <li> Ch 0 @2024/02/10/</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/Misc/","title":"Misc","text":""},{"location":"_ignore/Plans/Misc/#english","title":"English","text":"<ul> <li> TOEFL 90+</li> </ul>"},{"location":"_ignore/Plans/Misc/#piano","title":"Piano","text":"<ul> <li> flowers</li> <li> it begins</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/Research/","title":"Research","text":""},{"location":"_ignore/Plans/Research/#automated-testing","title":"Automated Testing","text":"<ul> <li> Is Your Code Generated by ChatGPT Really Correct? - The Second Pass @2024/02/07/</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/2024/02/01/","title":"01","text":""},{"location":"_ignore/Plans/2024/02/01/#cs61c","title":"CS61C","text":""},{"location":"_ignore/Plans/2024/02/01/#mit18330","title":"MIT18.330","text":"<ul> <li> Lec 2</li> <li> prob 1</li> </ul>"},{"location":"_ignore/Plans/2024/02/01/#algorithm","title":"Algorithm","text":"<ul> <li> P5539 \u3010XR-3\u3011Unknown Mother-Goose</li> <li> VP Codeforces Round 922 (Div. 2)</li> </ul>"},{"location":"_ignore/Plans/2024/02/01/#ee120","title":"EE120","text":"<ul> <li> Lec 1</li> </ul>"},{"location":"_ignore/Plans/2024/02/01/#archive","title":"Archive","text":"<ul> <li> Lec 11 (with notes taken)</li> <li> State Handout</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/2024/02/02/","title":"02","text":""},{"location":"_ignore/Plans/2024/02/02/#mit18330","title":"MIT18.330","text":"<ul> <li> lecture 3</li> <li> ps1</li> </ul>"},{"location":"_ignore/Plans/2024/02/02/#cs61c","title":"CS61C","text":"<ul> <li> disc6</li> <li> lec12</li> </ul>"},{"location":"_ignore/Plans/2024/02/02/#research","title":"Research","text":"<ul> <li> The Art, Science, and Engineering of Fuzzing: A Survey</li> </ul>"},{"location":"_ignore/Plans/2024/02/02/#eecs151","title":"EECS151","text":"<ul> <li> lecture 1</li> </ul>"},{"location":"_ignore/Plans/2024/02/02/#algorithm","title":"Algorithm","text":"<ul> <li> P5539 \u3010XR-3\u3011Unknown Mother-Goose</li> <li> VP Codeforces Round 922 (Div. 2)</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/2024/02/03/","title":"03","text":""},{"location":"_ignore/Plans/2024/02/03/#cs61c","title":"CS61C","text":"<ul> <li> Lec 12 notes</li> <li> Lec 13</li> <li> proj2 part A</li> </ul>"},{"location":"_ignore/Plans/2024/02/03/#mit18330","title":"MIT18.330","text":"<ul> <li> lecture 4</li> </ul>"},{"location":"_ignore/Plans/2024/02/03/#eecs151","title":"EECS151","text":"<ul> <li> lecture 1</li> </ul>"},{"location":"_ignore/Plans/2024/02/03/#research","title":"Research","text":"<ul> <li> Is Your Code Generated by ChatGPT Really Correct? - First Pass</li> </ul>"},{"location":"_ignore/Plans/2024/02/03/#algorithm","title":"Algorithm","text":""},{"location":"_ignore/Plans/2024/02/03/#misc","title":"Misc","text":"<ul> <li> Basic usage of hx</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/2024/02/04/","title":"04","text":""},{"location":"_ignore/Plans/2024/02/04/#cs61c","title":"CS61C","text":"<ul> <li> proj2 part B</li> <li> lec 13 notes</li> <li> lec 14</li> </ul>"},{"location":"_ignore/Plans/2024/02/04/#18330","title":"18.330","text":"<ul> <li> lecture 4</li> </ul>"},{"location":"_ignore/Plans/2024/02/04/#research","title":"Research","text":"<ul> <li> Is Your Code Generated by ChatGPT Really Correct? - The Second Pass</li> </ul>"},{"location":"_ignore/Plans/2024/02/04/#eecs151","title":"EECS151","text":"<ul> <li> lec 2</li> </ul>"},{"location":"_ignore/Plans/2024/02/04/#algorithm","title":"Algorithm","text":"<p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Plans/2024/02/05/","title":"05","text":""},{"location":"_ignore/Plans/2024/02/05/#cs61c","title":"CS61C","text":"<ul> <li> lec13 notes</li> <li> lec14</li> </ul>"},{"location":"_ignore/Plans/2024/02/05/#18330","title":"18330","text":"<ul> <li> lec4</li> </ul>"},{"location":"_ignore/Plans/2024/02/05/#cs127","title":"CS127","text":"<ul> <li> lec1</li> </ul>"},{"location":"_ignore/Plans/2024/02/05/#research","title":"Research","text":"<ul> <li> Is Your Code Generated by ChatGPT Really Correct? - The Second Pass</li> </ul>"},{"location":"_ignore/Plans/2024/02/05/#algo","title":"Algo","text":"<ul> <li> P5539 \u3010XR-3\u3011Unknown Mother-Goose</li> </ul> <p>%% kanban:settings <pre><code>{\"kanban-plugin\":\"basic\"}\n</code></pre> %%</p>"},{"location":"_ignore/Templates/note/","title":"None","text":"<p>Info</p> <p>say something ...</p>"},{"location":"_ignore/Templates/zotero_integration/","title":"{{title}}","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#1-abstract-info","title":"1. Abstract &amp; Info","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#11-abstract","title":"1.1 Abstract","text":"<p>{{abstractNote}}</p>","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#12-info","title":"1.2 Info","text":"<p>Authors: {{authors}} DOI: {{DOI}} Publication: {{title}} Zotero: {{pdfZoteroLink}} Date: {{date|format(\"YYYY-MM-DD\")}}</p>","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#2-annotation","title":"2. Annotation","text":"<p>{% persist \"annotations\" %}</p> <p>{% set newAnnotations = annotations | filterby(\"date\", \"dateafter\", lastImportDate) %}</p> <p>{% for each in newAnnotations %} {% if each.colorCategory == 'Blue' %} Annotated Text\uff1a{{each.annotatedText}} Comment\uff1a{{each.comment}} {% endif %}</p> <p>{% endif %}</p>","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#3-key-notes","title":"3. Key Notes","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#31-problems","title":"3.1 Problems","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#32-contributions","title":"3.2 Contributions","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#33-method","title":"3.3 Method","text":"","tags":["Papers"]},{"location":"_ignore/Templates/zotero_integration/#34-comments","title":"3.4 Comments","text":"","tags":["Papers"]}]}